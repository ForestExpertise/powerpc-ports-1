# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

github.setup        fraunhoferhhi vvdec 3.0.0 v
revision            0
categories          multimedia
license             BSD
maintainers         nomaintainer
description         Versatile Video Coding (VVC) decoder
long_description    {*}${description}
checksums           rmd160  546b280b347279418289f43f05e919f1cad4fb62 \
                    sha256  090688c2f9beebd4e8a2ec197a5b9429803498cd3c91fbec62fe7718a8268114 \
                    size    1461638
github.tarball_from archive

configure.args-append \
                    -DBUILD_SHARED_LIBS=ON \
                    -DVVDEC_ENABLE_LINK_TIME_OPT=OFF \
                    -DVVDEC_ENABLE_UNSTABLE_API=OFF \
                    -DVVDEC_ENABLE_WARNINGS_AS_WERROR=OFF \
                    -DVVDEC_ENABLE_X86_SIMD=OFF \
                    -DVVDEC_INSTALL_VVDECAPP=ON

platform i386 {
    configure.args-delete \
                    -VVDEC_ENABLE_X86_SIMD=OFF
}

compiler.cxx_standard   2014

# Install target is handicapped, so we need to complete it manually.
post-destroot {
    # Fix dylib paths:
    system "install_name_tool -id ${prefix}/lib/libvvdec.3.dylib \
        ${cmake.build_dir}/source/Lib/vvdec/libvvdec.3.0.0.dylib"
    system "install_name_tool -change ${cmake.build_dir}/source/Lib/vvdec/libvvdec.3.dylib \
        ${prefix}/lib/libvvdec.3.dylib ${cmake.build_dir}/source/App/vvdecapp/vvdecapp"

    copy ${cmake.build_dir}/source/App/vvdecapp/vvdecapp ${destroot}${prefix}/bin/
    fs-traverse f ${cmake.build_dir}/source/Lib/vvdec {
        if {[file isfile ${f}] && [file extension ${f}] == ".dylib"} {
            copy ${f} ${destroot}${prefix}/lib/
        }
    }
}
