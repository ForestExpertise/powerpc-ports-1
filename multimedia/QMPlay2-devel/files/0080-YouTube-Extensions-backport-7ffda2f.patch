From 67f0c17fc4b9d81e38eb83ed8cf17e3caa6ed662 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Fri, 23 May 2025 05:29:37 +0800
Subject: [PATCH 80/80] YouTube, Extensions: backport 7ffda2f

---
 src/modules/Extensions/Extensions.cpp |  5 ++++
 src/modules/Extensions/Extensions.hpp |  1 +
 src/modules/Extensions/YouTube.cpp    | 42 ++++++++++++++++++++++-----
 src/modules/Extensions/YouTube.hpp    |  1 +
 4 files changed, 42 insertions(+), 7 deletions(-)

diff --git a/src/modules/Extensions/Extensions.cpp b/src/modules/Extensions/Extensions.cpp
index 18c60222..e2b4a8d1 100644
--- a/src/modules/Extensions/Extensions.cpp
+++ b/src/modules/Extensions/Extensions.cpp
@@ -164,6 +164,9 @@ ModuleSettingsWidget::ModuleSettingsWidget(Module &module) :
     idx = qualityPreset->findText(sets().getString("YouTube/QualityPreset"));
     qualityPreset->setCurrentIndex(idx > -1 ? idx : 3);
 
+    m_allowVp9Hdr = new QCheckBox(tr("Allow HDR content for VP9 codec"));
+    m_allowVp9Hdr->setChecked(sets().getBool("YouTube/AllowVp9HDR"));
+
     layout = new QGridLayout(youTubeB);
     layout->addWidget(userNameB, 0, 0, 1, 2);
     layout->addWidget(subtitlesB, 1, 0, 1, 2);
@@ -171,6 +174,7 @@ ModuleSettingsWidget::ModuleSettingsWidget(Module &module) :
     layout->addWidget(m_preferredCodec, 2, 1, 1, 1);
     layout->addWidget(new QLabel(tr("Preferred quality") + ": "), 3, 0, 1, 1);
     layout->addWidget(qualityPreset, 3, 1, 1, 1);
+    layout->addWidget(m_allowVp9Hdr, 4, 0, 1, 2);
     layout->setMargin(2);
 
 #ifdef USE_LASTFM
@@ -244,6 +248,7 @@ void ModuleSettingsWidget::saveSettings()
     sets().set("YouTube/Subtitles", subtitlesB->isChecked());
     sets().set("YouTube/QualityPreset", qualityPreset->currentText());
     sets().set("YouTube/PreferredCodec", m_preferredCodec->currentText());
+    sets().set("YouTube/AllowVp9HDR", m_allowVp9Hdr->isChecked());
 
 #ifdef USE_LASTFM
     sets().set("LastFM/DownloadCovers", downloadCoversGB->isChecked());
diff --git a/src/modules/Extensions/Extensions.hpp b/src/modules/Extensions/Extensions.hpp
index e8aa6294..07d6c163 100644
--- a/src/modules/Extensions/Extensions.hpp
+++ b/src/modules/Extensions/Extensions.hpp
@@ -64,6 +64,7 @@ private:
 
     QCheckBox *userNameB, *subtitlesB;
     QComboBox *m_preferredCodec, *qualityPreset;
+    QCheckBox *m_allowVp9Hdr;
 
 #ifdef USE_LASTFM
     QGroupBox *downloadCoversGB;
diff --git a/src/modules/Extensions/YouTube.cpp b/src/modules/Extensions/YouTube.cpp
index 25bfa199..3c1a9222 100644
--- a/src/modules/Extensions/YouTube.cpp
+++ b/src/modules/Extensions/YouTube.cpp
@@ -403,6 +403,7 @@ bool YouTube::set()
 {
     const auto preferredCodec = sets().getString("YouTube/PreferredCodec");
     const auto oldPpreferredCodec = m_preferredCodec;
+    const auto oldAllowVp9Hdr = m_allowVp9Hdr;
 
     if (preferredCodec == "H.264")
         m_preferredCodec = PreferredCodec::H264;
@@ -411,6 +412,12 @@ bool YouTube::set()
     else
         m_preferredCodec = PreferredCodec::VP9;
 
+    m_allowVp9Hdr = sets().getBool("YouTube/AllowVp9HDR");
+
+    auto forceToggledSignal = [&] {
+        return (oldPpreferredCodec != m_preferredCodec || oldAllowVp9Hdr != m_allowVp9Hdr);
+    };
+
     const auto qualityActions = m_qualityGroup->actions();
     const auto qualityText = sets().getString("YouTube/QualityPreset");
     bool qualityActionChecked = false;
@@ -420,7 +427,7 @@ bool YouTube::set()
         {
             if (qualityAction->text() == qualityText)
             {
-                if (oldPpreferredCodec != m_preferredCodec && qualityAction->isChecked())
+                if (forceToggledSignal() && qualityAction->isChecked())
                     qualityAction->setChecked(false); // Force "toggled" signal
                 qualityAction->setChecked(true);
                 qualityActionChecked = true;
@@ -430,7 +437,7 @@ bool YouTube::set()
     }
     if (!qualityActionChecked)
     {
-        if (oldPpreferredCodec != m_preferredCodec && qualityActions[3]->isChecked())
+        if (forceToggledSignal() && qualityActions[3]->isChecked())
             qualityActions[3]->setChecked(false); // Force "toggled" signal
         qualityActions[3]->setChecked(true);
     }
@@ -676,6 +683,11 @@ void YouTube::setItags(int qualityIdx)
         VP9_2160p60 = 315,
         VP9_4320p60 = 272,
 
+        VP9_720p60_HDR = 334,
+        VP9_1080p60_HDR = 335,
+        VP9_1440p60_HDR = 336,
+        VP9_2160p60_HDR = 337,
+
         AV1_480p = 397,
         AV1_360p = 396,
         AV1_240p = 395,
@@ -730,6 +742,15 @@ void YouTube::setItags(int qualityIdx)
 
     QVector<int> qualityPresets[PresetCount];
     {
+        auto maybeAppendVp9Hdr = [this, &qualityPresets] {
+            if (m_allowVp9Hdr)
+            {
+                qualityPresets[Preset_720p60]  << VP9_720p60_HDR;
+                qualityPresets[Preset_1080p60] << VP9_1080p60_HDR;
+                qualityPresets[Preset_1440p60] << VP9_1440p60_HDR;
+                qualityPresets[Preset_2160p60] << VP9_2160p60_HDR;
+            }
+        };
         if (m_preferredCodec == PreferredCodec::VP9)
         {
             qualityPresets[Preset_480p]  << VP9_480p << H264_480p << VP9_360p << H264_360p << H264_360P_AAC_128 << VP9_240p << H264_240p << VP9_144p << H264_144p;
@@ -738,6 +759,7 @@ void YouTube::setItags(int qualityIdx)
             qualityPresets[Preset_1440p] << VP9_1440p << H264_1440p << qualityPresets[Preset_1080p];
             qualityPresets[Preset_2160p] << VP9_2160p << H264_2160p << qualityPresets[Preset_1440p];
 
+            maybeAppendVp9Hdr();
             qualityPresets[Preset_720p60]  << VP9_720p60 << H264_720p60;
             qualityPresets[Preset_1080p60] << VP9_1080p60 << H264_1080p60 << qualityPresets[Preset_720p60];
             qualityPresets[Preset_1440p60] << VP9_1440p60 << H264_1440p60 << qualityPresets[Preset_1080p60];
@@ -766,11 +788,17 @@ void YouTube::setItags(int qualityIdx)
             qualityPresets[Preset_1440p] << VP9_1440p << H264_1440p << qualityPresets[Preset_1080p];
             qualityPresets[Preset_2160p] << VP9_2160p << H264_2160p << qualityPresets[Preset_1440p];
 
-            qualityPresets[Preset_720p60]  << AV1_HFR_HIGH_720p << AV1_HFR_720p << VP9_720p60 << H264_720p60;
-            qualityPresets[Preset_1080p60] << AV1_HFR_HIGH_1080p << AV1_HFR_1080p << VP9_1080p60 << H264_1080p60 << qualityPresets[Preset_720p60];
-            qualityPresets[Preset_1440p60] << AV1_HFR_HIGH_1440p << AV1_HFR_1440p << VP9_1440p60 << H264_1440p60 << qualityPresets[Preset_1080p60];
-            qualityPresets[Preset_2160p60] << AV1_HFR_HIGH_2160p << AV1_HFR_2160p << VP9_2160p60 << H264_2160p60 << qualityPresets[Preset_1440p60];
-            qualityPresets[Preset_4320p60] << AV1_HFR_4320p_1 << AV1_HFR_4320p_2 << VP9_4320p60 << qualityPresets[Preset_2160p60];
+            qualityPresets[Preset_720p60]  << AV1_HFR_HIGH_720p << AV1_HFR_720p;
+            qualityPresets[Preset_1080p60] << AV1_HFR_HIGH_1080p << AV1_HFR_1080p;
+            qualityPresets[Preset_1440p60] << AV1_HFR_HIGH_1440p << AV1_HFR_1440p;
+            qualityPresets[Preset_2160p60] << AV1_HFR_HIGH_2160p << AV1_HFR_2160p;
+            qualityPresets[Preset_4320p60] << AV1_HFR_4320p_1 << AV1_HFR_4320p_2;
+            maybeAppendVp9Hdr();
+            qualityPresets[Preset_720p60]  << VP9_720p60 << H264_720p60;
+            qualityPresets[Preset_1080p60] << VP9_1080p60 << H264_1080p60 << qualityPresets[Preset_720p60];
+            qualityPresets[Preset_1440p60] << VP9_1440p60 << H264_1440p60 << qualityPresets[Preset_1080p60];
+            qualityPresets[Preset_2160p60] << VP9_2160p60 << H264_2160p60 << qualityPresets[Preset_1440p60];
+            qualityPresets[Preset_4320p60] << VP9_4320p60 << qualityPresets[Preset_2160p60];
         }
 
         // Append also non-60 FPS itags to 60 FPS itags
diff --git a/src/modules/Extensions/YouTube.hpp b/src/modules/Extensions/YouTube.hpp
index 12b6ee69..d853bbb1 100644
--- a/src/modules/Extensions/YouTube.hpp
+++ b/src/modules/Extensions/YouTube.hpp
@@ -171,6 +171,7 @@ private:
 
     QMutex m_itagsMutex;
     PreferredCodec m_preferredCodec = PreferredCodec::VP9;
+    bool m_allowVp9Hdr = false;
     QVector<int> m_videoItags, m_audioItags, m_hlsItags, m_singleUrlItags;
 };
 
-- 
2.49.0

