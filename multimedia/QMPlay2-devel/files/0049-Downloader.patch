From f0fc31a2ee9af9e889557b28b9a5920e530c27f8 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Fri, 18 Apr 2025 10:51:36 +0800
Subject: [PATCH 49/60] Downloader

---
 src/modules/Extensions/Downloader.cpp | 76 +++++++++++++++++----------
 src/modules/Extensions/Downloader.hpp |  3 ++
 2 files changed, 51 insertions(+), 28 deletions(-)

diff --git a/src/modules/Extensions/Downloader.cpp b/src/modules/Extensions/Downloader.cpp
index b0a409e0..7be014eb 100644
--- a/src/modules/Extensions/Downloader.cpp
+++ b/src/modules/Extensions/Downloader.cpp
@@ -352,7 +352,7 @@ void DownloadItemW::downloadStop(bool ok)
     finished = true;
     if (!dontDeleteDownloadThr)
     {
-        if (visibleRegion().isNull())
+        if (visibleRegion().isEmpty())
             emit QMPlay2Core.sendMessage(titleL->text(), sizeL->text());
     }
 }
@@ -361,13 +361,13 @@ void DownloadItemW::startConversion()
 {
     deleteConvertProcess();
 
-    m_convertProcess = new QProcess(this);  // Pass 'this' as the parent after QObject inheritance
+    m_convertProcess = new QProcess(this);
 
     // Use old-style connect for Qt4 compatibility
-    m_convertProcessConn[0] = connect(m_convertProcess, SIGNAL(finished(int, QProcess::ExitStatus)),
-                                      this, SLOT(handleConversionFinished(int, QProcess::ExitStatus)));
-    m_convertProcessConn[1] = connect(m_convertProcess, SIGNAL(error(QProcess::ProcessError)),
-                                      this, SLOT(handleConversionError(QProcess::ProcessError)));
+    connect(m_convertProcess, SIGNAL(finished(int, QProcess::ExitStatus)),
+            this, SLOT(handleConversionFinished(int, QProcess::ExitStatus)));
+    connect(m_convertProcess, SIGNAL(error(QProcess::ProcessError)),
+            this, SLOT(handleConversionError(QProcess::ProcessError)));
 
     m_needsConversion = true;
     finished = false;
@@ -380,7 +380,7 @@ void DownloadItemW::startConversion()
     const auto conversionError = [&](const QString &errStr) {
         sizeL->setText(tr(g_conversionError));
         downloadStop(false);
-        qCWarning(downloader).noquote() << errStr;
+        qWarning() << errStr;
     };
 
     QString convertCommand;
@@ -424,16 +424,22 @@ void DownloadItemW::startConversion()
     convertCommand.replace(idx1, idx2 - idx1 + 9, "\"" + m_convertedFilePath + "\"");
     maybeAddAbsolutePath(convertCommand);
 
-    qDebug() << "Starting conversion:" << convertCommand.toUtf8().constData();
-    m_convertProcess->start(convertCommand);
+    // Store program name and arguments for Qt4 compatibility
+    m_processProgram = convertCommand.section(' ', 0, 0); // Extract the program name
+    m_processArguments = convertCommand.split(' ').mid(1); // Extract the arguments (everything after the program name)
+
+    qDebug() << "Starting conversion:" << m_processProgram << m_processArguments;
+
+    // Start the process using the program name and arguments
+    m_convertProcess->start(m_processProgram, m_processArguments);
 }
 
 void DownloadItemW::deleteConvertProcess()
 {
     if (m_convertProcess)
     {
-        disconnect(m_convertProcessConn[0]);
-        disconnect(m_convertProcessConn[1]);
+        disconnect(m_convertProcess, SIGNAL(finished(int)), this, SLOT(yourSlotForFinished(int)));
+        disconnect(m_convertProcess, SIGNAL(errorOccurred(QProcess::ProcessError)), this, SLOT(yourSlotForError(QProcess::ProcessError)));
         m_convertProcess->close();
         delete m_convertProcess;
         m_convertProcess = nullptr;
@@ -453,9 +459,12 @@ void DownloadItemW::handleConversionFinished(int exitCode, QProcess::ExitStatus)
     else // Conversion failed
     {
         sizeL->setText(tr(g_conversionError));
-        qWarning() << "Failed to convert:" << m_convertProcess->program()
-                   << m_convertProcess->arguments()
-                   << m_convertProcess->readAllStandardError().constData();
+
+        // Manually log the program and arguments stored during the process start
+        qWarning() << "Failed to convert: Program - " << m_processProgram
+                   << " Arguments - " << m_processArguments.join(" ")
+                   << " Error - " << m_convertProcess->readAllStandardError().constData();
+
         downloadStop(false);
     }
 }
@@ -466,7 +475,9 @@ void DownloadItemW::handleConversionError(QProcess::ProcessError error)
     {
         sizeL->setText(tr(g_conversionError));
         downloadStop(false);
-        qWarning() << "Failed to start process:" << m_convertProcess->program();
+
+        // Manually log the program name stored earlier
+        qWarning() << "Failed to start process: Program - " << m_processProgram;
     }
 }
 
@@ -850,7 +861,7 @@ void Downloader::init()
     connect(downloadLW, SIGNAL(itemDoubleClicked(QTreeWidgetItem *, int)), this, SLOT(itemDoubleClicked(QTreeWidgetItem *)));
 
     m_convertsMenu = new QMenu(this);
-    connect(m_convertsMenu->addAction(tr("&Add")), &QAction::triggered, this, &Downloader::addConvertPreset);
+    connect(m_convertsMenu->addAction(tr("&Add")), SIGNAL(triggered()), this, SLOT(addConvertPreset()));
     m_convertsMenu->addSeparator();
 
     setDownloadsDirB = new QToolButton;
@@ -937,7 +948,7 @@ void Downloader::init()
         const auto createPreset = [this](const QString &name, const QString &data) {
             QAction *act = m_convertsMenu->addAction(name);
             act->setData(data);
-            connect(act, &QAction::triggered, this, &Downloader::editConvertAction);
+            connect(act, SIGNAL(triggered()), this, SLOT(editConvertAction()));
             return act;
         };
 
@@ -983,7 +994,7 @@ QVector<QAction *> Downloader::getActions(const QString &name, double, const QSt
     const auto createAction = [&](const QString &actionName, const QString &preset) {
         QAction *act = new QAction(actionName, nullptr);
         act->setIcon(QIcon(":/downloader.svgz"));
-        act->connect(act, &QAction::triggered, this, &Downloader::download);
+        act->connect(act, SIGNAL(triggered()), this, SLOT(download()));
         act->setProperty("name", name);
         if (!prefix.isEmpty())
         {
@@ -1016,15 +1027,17 @@ void Downloader::addConvertPreset()
     QAction *action = m_convertsMenu->addAction("MP3 224k");
     action->setData(g_defaultMp3ConvertCommand);
     if (modifyConvertAction(action, false))
-        connect(action, &QAction::triggered, this, &Downloader::editConvertAction);
+        connect(action, SIGNAL(triggered()), this, SLOT(editConvertAction()));
     else
         action->deleteLater();
 }
+
 void Downloader::editConvertAction()
 {
     if (QAction *action = qobject_cast<QAction *>(sender()))
         modifyConvertAction(action);
 }
+
 bool Downloader::modifyConvertAction(QAction *action, bool addRemoveButton)
 {
     QDialog dialog(this);
@@ -1036,19 +1049,13 @@ bool Downloader::modifyConvertAction(QAction *action, bool addRemoveButton)
     commandE->setToolTip(tr("Command line to execute after download.\n\n<input/> - specifies downloaded file.\n<output>%f.mp3</output> - converted file will be input file with \"mp3\" extension."));
 
     QDialogButtonBox *buttons = new QDialogButtonBox(QDialogButtonBox::Ok | QDialogButtonBox::Cancel);
-    connect(buttons, &QDialogButtonBox::accepted, &dialog, &QDialog::accept);
-    connect(buttons, &QDialogButtonBox::rejected, &dialog, &QDialog::reject);
+    connect(buttons, SIGNAL(accepted()), &dialog, SLOT(accept()));
+    connect(buttons, SIGNAL(rejected()), &dialog, SLOT(reject()));
     if (addRemoveButton)
     {
         QPushButton *removeB = buttons->addButton(tr("Remove"), QDialogButtonBox::DestructiveRole);
         removeB->setIcon(QMPlay2Core.getIconFromTheme("list-remove"));
-        connect(buttons, &QDialogButtonBox::clicked, &dialog, [&](QAbstractButton *button) {
-            if (button == removeB)
-            {
-                action->deleteLater();
-                dialog.reject();
-            }
-        });
+        connect(buttons, SIGNAL(clicked(QAbstractButton *)), this, SLOT(handleButtonClicked(QAbstractButton *)));
     }
 
     QFormLayout *layout = new QFormLayout(&dialog);
@@ -1123,6 +1130,7 @@ void Downloader::setDownloadsDir()
     else if (dir.filePath() != QString())
         QMessageBox::warning(this, DownloaderName, tr("Cannot change downloading files directory"));
 }
+
 void Downloader::clearFinished()
 {
     const QList<QTreeWidgetItem *> items = downloadLW->findItems(QString(), Qt::MatchContains);
@@ -1130,6 +1138,7 @@ void Downloader::clearFinished()
         if (((DownloadItemW *)downloadLW->itemWidget(items[i], 0))->isFinished())
             delete items[i];
 }
+
 void Downloader::addUrl()
 {
     QString clipboardUrl;
@@ -1144,6 +1153,7 @@ void Downloader::addUrl()
     if (!url.isEmpty())
         new DownloaderThread(nullptr, url, downloadLW, m_convertsMenu);
 }
+
 void Downloader::download()
 {
     QAction *action = qobject_cast<QAction *>(sender());
@@ -1161,9 +1171,19 @@ void Downloader::download()
     );
     downloadLW->setCurrentItem(downloadLW->invisibleRootItem()->child(0));
 }
+
 void Downloader::itemDoubleClicked(QTreeWidgetItem *item)
 {
     DownloadItemW *downloadItemW = (DownloadItemW *)downloadLW->itemWidget(item, 0);
     if (!downloadItemW->getFilePath().isEmpty())
         emit QMPlay2Core.processParam("open", downloadItemW->getFilePath());
 }
+
+void Downloader::handleButtonClicked(QAbstractButton *button)
+{
+    if (button == removeB)
+    {
+        action->deleteLater();
+        dialog.reject();
+    }
+}
diff --git a/src/modules/Extensions/Downloader.hpp b/src/modules/Extensions/Downloader.hpp
index ad6790dd..e328ceec 100644
--- a/src/modules/Extensions/Downloader.hpp
+++ b/src/modules/Extensions/Downloader.hpp
@@ -93,6 +93,8 @@ private:
         QProgressBar *progressB;
     } *speedProgressW = nullptr;
 
+    QString m_processProgram;      // To store the program name
+    QStringList m_processArguments; // To store the process arguments
     QProcess *m_convertProcess; // QProcess is now fully included
     int m_convertProcessConn[2]; // Replace QMetaObject::Connection with int
     bool finished, readyToPlay, m_needsConversion = false;
@@ -174,6 +176,7 @@ private slots:
     void addUrl();
     void download();
     void itemDoubleClicked(QTreeWidgetItem *);
+    void handleButtonClicked(QAbstractButton *button);
 
 private:
     Settings m_sets;
-- 
2.49.0

