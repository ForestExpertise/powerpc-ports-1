From d0c9f8cd383e50258779afc1773d0b967aa80bbe Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Wed, 16 Apr 2025 03:06:30 +0800
Subject: [PATCH 41/60] FFmpeg*

---
 src/modules/FFmpeg/FFDemux.cpp     | 11 +++++---
 src/modules/FFmpeg/FFDemux.hpp     | 44 +++++++++++++++---------------
 src/modules/FFmpeg/FFReader.hpp    | 24 ++++++++--------
 src/modules/FFmpeg/FFmpeg.hpp      | 16 +++++------
 src/modules/FFmpeg/VAAPIWriter.hpp | 30 ++++++++++----------
 src/modules/FFmpeg/VDPAUWriter.hpp | 30 ++++++++++----------
 6 files changed, 79 insertions(+), 76 deletions(-)

diff --git a/src/modules/FFmpeg/FFDemux.cpp b/src/modules/FFmpeg/FFDemux.cpp
index f8fa33ee..69c5942f 100644
--- a/src/modules/FFmpeg/FFDemux.cpp
+++ b/src/modules/FFmpeg/FFDemux.cpp
@@ -408,15 +408,18 @@ Playlist::Entries FFDemux::fetchTracks(const QString &url, bool &ok)
             {
                 Playlist::Entry &entry = entries[i];
                 const bool lastItem = (i == entries.count() - 1);
-                const double start = indexes.value(i).second;
-                const double end = indexes.value(i + 1, {-1.0, -1.0}).first;
+                const double start = indexes.contains(i) ? indexes.value(i).second : -1.0;
+                double end = -1.0;
+                if (indexes.contains(i + 1))
+                    end = indexes.value(i + 1).first;
+
                 if (entry.url.isEmpty() || start < 0.0 || (end <= 0.0 && !lastItem))
                 {
-                    entries.removeAt(i);
+                    entries.remove(i);
                     continue;
                 }
                 const QString param = QString("CUE:%1:%2").arg(start).arg(end);
-                if (lastItem && end < 0.0) // Last entry doesn't have specified length in CUE file
+                if (lastItem && end < 0.0)
                 {
                     FormatContext *fmtCtx = createFmtCtx();
                     if (fmtCtx->open(entry.url, param))
diff --git a/src/modules/FFmpeg/FFDemux.hpp b/src/modules/FFmpeg/FFDemux.hpp
index 498f4b29..389b3419 100644
--- a/src/modules/FFmpeg/FFDemux.hpp
+++ b/src/modules/FFmpeg/FFDemux.hpp
@@ -22,42 +22,42 @@
 
 class FormatContext;
 
-class FFDemux final : public Demuxer
+class FFDemux : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(FFDemux)
 public:
     FFDemux(Module &);
 private:
-    ~FFDemux();
+    ~FFDemux() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool metadataChanged() const override;
+    bool metadataChanged() const override final;
 
-    bool isStillImage() const override;
+    bool isStillImage() const override final;
 
-    QList<ProgramInfo> getPrograms() const override;
-    QList<ChapterInfo> getChapters() const override;
+    QList<ProgramInfo> getPrograms() const override final;
+    QList<ChapterInfo> getChapters() const override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    bool getReplayGain(bool album, float &gain_db, float &peak) const override;
-    qint64 size() const override;
-    double length() const override;
-    int bitrate() const override;
-    QByteArray image(bool forceCopy) const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    bool getReplayGain(bool album, float &gain_db, float &peak) const override final;
+    qint64 size() const override final;
+    double length() const override final;
+    int bitrate() const override final;
+    QByteArray image(bool forceCopy) const override final;
 
-    bool localStream() const override;
+    bool localStream() const override final;
 
-    bool seek(double pos, bool backward) override;
-    bool read(Packet &encoded, int &idx) override;
-    void pause() override;
-    void abort() override;
+    bool seek(double pos, bool backward) override final;
+    bool read(Packet &encoded, int &idx) override final;
+    void pause() override final;
+    void abort() override final;
 
-    bool open(const QString &entireUrl) override;
+    bool open(const QString &entireUrl) override final;
 
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     /**/
 
diff --git a/src/modules/FFmpeg/FFReader.hpp b/src/modules/FFmpeg/FFReader.hpp
index 75caec11..0cd53f11 100644
--- a/src/modules/FFmpeg/FFReader.hpp
+++ b/src/modules/FFmpeg/FFReader.hpp
@@ -24,25 +24,25 @@
 
 struct AVIOContext;
 
-class FFReader final : public Reader
+class FFReader : public Reader
 {
 public:
     FFReader();
 private:
-    bool readyRead() const override;
-    bool canSeek() const override;
+    bool readyRead() const override final;
+    bool canSeek() const override final;
 
-    bool seek(qint64) override;
-    QByteArray read(qint64) override;
-    void pause() override;
-    bool atEnd() const override;
-    void abort() override;
+    bool seek(qint64) override final;
+    QByteArray read(qint64) override final;
+    void pause() override final;
+    bool atEnd() const override final;
+    void abort() override final;
 
-    qint64 size() const override;
-    qint64 pos() const override;
-    QString name() const override;
+    qint64 size() const override final;
+    qint64 pos() const override final;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git a/src/modules/FFmpeg/FFmpeg.hpp b/src/modules/FFmpeg/FFmpeg.hpp
index 70e73d4e..0e5ad238 100644
--- a/src/modules/FFmpeg/FFmpeg.hpp
+++ b/src/modules/FFmpeg/FFmpeg.hpp
@@ -24,19 +24,19 @@
 
 class QComboBox;
 
-class FFmpeg final : public Module
+class FFmpeg : public Module
 {
     Q_DECLARE_TR_FUNCTIONS(FFmpeg)
 public:
     FFmpeg();
-    ~FFmpeg();
+    ~FFmpeg() final;
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
-    void videoDeintSave() override;
+    void videoDeintSave() override final;
 
     /**/
 
@@ -65,7 +65,7 @@ class QGroupBox;
 class QSpinBox;
 class Slider;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
 #ifdef QMPlay2_VDPAU
     Q_OBJECT
@@ -84,7 +84,7 @@ private slots:
     void checkEnables();
 #endif
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QGroupBox *demuxerB;
     QCheckBox *reconnectStreamedB;
diff --git a/src/modules/FFmpeg/VAAPIWriter.hpp b/src/modules/FFmpeg/VAAPIWriter.hpp
index c36966db..84249e53 100644
--- a/src/modules/FFmpeg/VAAPIWriter.hpp
+++ b/src/modules/FFmpeg/VAAPIWriter.hpp
@@ -24,27 +24,27 @@
 #include <QWidget>
 #include <QTimer>
 
-class VAAPIWriter final : public QWidget, public VideoWriter
+class VAAPIWriter : public QWidget, public VideoWriter
 {
     Q_OBJECT
 public:
     VAAPIWriter(Module &module, VAAPI *vaapi);
-    ~VAAPIWriter();
+    ~VAAPIWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &osd) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &osd) override final;
+    void pause() override final;
 
-    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override;
+    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
@@ -56,11 +56,11 @@ public:
 private:
     void draw(VASurfaceID id = -1, int field = -1);
 
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     void clearVaImage();
 
diff --git a/src/modules/FFmpeg/VDPAUWriter.hpp b/src/modules/FFmpeg/VDPAUWriter.hpp
index 4c6dc28f..123fb86b 100644
--- a/src/modules/FFmpeg/VDPAUWriter.hpp
+++ b/src/modules/FFmpeg/VDPAUWriter.hpp
@@ -28,27 +28,27 @@
 
 struct _XDisplay;
 
-class VDPAUWriter final : public QWidget, public VideoWriter
+class VDPAUWriter : public QWidget, public VideoWriter
 {
     Q_OBJECT
 public:
     VDPAUWriter(Module &module);
-    ~VDPAUWriter();
+    ~VDPAUWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &osd) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &osd) override final;
+    void pause() override final;
 
-    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override;
+    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
@@ -78,11 +78,11 @@ private:
     Q_SLOT void draw(VdpVideoSurface surface_id = VDP_INVALID_HANDLE);
     void vdpau_display();
 
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     void destroyOutputSurfaces();
     void clr();
-- 
2.49.0

