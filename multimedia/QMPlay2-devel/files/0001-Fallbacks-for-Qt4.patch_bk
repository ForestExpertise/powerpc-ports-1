From 4a4cc0ccb2385876e1d292c9852e74d63dd9696d Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Thu, 21 Nov 2024 06:54:50 +0800
Subject: [PATCH] Fallbacks for Qt4

---
 CMakeLists.txt                                |  20 +-
 lang/CMakeLists.txt                           |   8 +-
 src/gui/AboutWidget.cpp                       |   5 +
 src/gui/AboutWidget.hpp                       |   6 +-
 src/gui/AddressDialog.hpp                     |   4 +-
 src/gui/AudioThr.hpp                          |  10 +-
 src/gui/CMakeLists.txt                        |  51 ++--
 src/gui/DeintSettingsW.hpp                    |   4 +-
 src/gui/DemuxerThr.hpp                        |   6 +-
 src/gui/EntryProperties.cpp                   |   2 +
 src/gui/EntryProperties.hpp                   |   6 +-
 src/gui/EventFilterWorkarounds.hpp            |   4 +-
 src/gui/InfoDock.hpp                          |   6 +-
 src/gui/KeyBindingsDialog.cpp                 |   5 +
 src/gui/Main.cpp                              | 233 +++++++++++++++++-
 src/gui/Main.hpp                              |   6 +-
 src/gui/MainWidget.cpp                        |  92 +++++--
 src/gui/MainWidget.hpp                        |  28 ++-
 src/gui/MenuBar.cpp                           |   2 +-
 src/gui/OSDSettingsW.cpp                      |   4 +
 src/gui/OtherVFiltersW.cpp                    |   4 +
 src/gui/PlayClass.cpp                         |  64 ++++-
 src/gui/PlayClass.hpp                         |  11 +-
 src/gui/PlaylistDock.cpp                      |   2 +
 src/gui/PlaylistWidget.cpp                    |  20 ++
 src/gui/PlaylistWidget.hpp                    |  22 +-
 src/gui/SettingsWidget.cpp                    |  20 +-
 src/gui/SettingsWidget.hpp                    |   8 +-
 src/gui/ShortcutHandler.hpp                   |  16 +-
 src/gui/TagEditor.hpp                         |   6 +-
 src/gui/Unix/ScreenSaver.cpp                  |   7 +-
 src/gui/Updater.hpp                           |   4 +-
 src/gui/VideoAdjustmentW.cpp                  |  90 ++++++-
 src/gui/VideoAdjustmentW.hpp                  |  27 +-
 src/gui/VideoDock.cpp                         |  10 +-
 src/gui/VideoDock.hpp                         |  24 +-
 src/gui/VideoThr.cpp                          |  10 +-
 src/gui/VideoThr.hpp                          |  10 +-
 src/gui/Windows/ScreenSaver.cpp               |  34 +++
 src/gui/macOS/QMPlay2MacExtensions.mm         |  15 +-
 src/gui/macOS/ScreenSaver.cpp                 |  11 +-
 src/modules/ALSA/ALSA.hpp                     |  12 +-
 src/modules/ALSA/ALSAWriter.hpp               |  18 +-
 src/modules/AudioCD/AudioCD.hpp               |  16 +-
 src/modules/AudioCD/AudioCDDemux.hpp          |  32 +--
 src/modules/AudioFilters/AudioFilters.hpp     |  12 +-
 src/modules/AudioFilters/BS2B.hpp             |  12 +-
 src/modules/AudioFilters/DysonCompressor.hpp  |  14 +-
 src/modules/AudioFilters/Echo.hpp             |   8 +-
 src/modules/AudioFilters/Equalizer.hpp        |  14 +-
 src/modules/AudioFilters/EqualizerGUI.hpp     |  12 +-
 src/modules/AudioFilters/PhaseReverse.hpp     |   8 +-
 src/modules/AudioFilters/VoiceRemoval.hpp     |   8 +-
 src/modules/CUVID/Cuvid.hpp                   |  16 +-
 src/modules/CUVID/CuvidDec.hpp                |  18 +-
 src/modules/Chiptune/Chiptune.hpp             |  12 +-
 src/modules/Chiptune/GME.hpp                  |  28 +--
 src/modules/Chiptune/SIDPlay.hpp              |  28 +--
 src/modules/DirectX/DirectDraw.hpp            |  32 +--
 src/modules/DirectX/DirectX.hpp               |  12 +-
 src/modules/Extensions/CMakeLists.txt         |  14 +-
 src/modules/Extensions/Downloader.cpp         |  22 +-
 src/modules/Extensions/Downloader.hpp         |  24 +-
 src/modules/Extensions/Extensions.cpp         |  15 ++
 src/modules/Extensions/Extensions.hpp         |  16 +-
 src/modules/Extensions/LastFM.hpp             |   4 +-
 src/modules/Extensions/Lyrics.hpp             |   6 +-
 src/modules/Extensions/MPRIS2.hpp             |  16 +-
 src/modules/Extensions/MediaBrowser.hpp       |  20 +-
 src/modules/Extensions/Radio.cpp              |  18 +-
 src/modules/Extensions/Radio.hpp              |   8 +-
 .../Extensions/Radio/RadioBrowserModel.cpp    |  13 +-
 .../Extensions/Radio/RadioBrowserModel.hpp    |  18 +-
 src/modules/Extensions/YouTube.cpp            | 149 ++++++++++-
 src/modules/Extensions/YouTube.hpp            |  45 ++--
 src/modules/FFmpeg/FFDecDXVA2.hpp             |  12 +-
 src/modules/FFmpeg/FFDecSW.hpp                |  18 +-
 src/modules/FFmpeg/FFDecVAAPI.hpp             |  14 +-
 src/modules/FFmpeg/FFDecVDPAU.hpp             |  10 +-
 src/modules/FFmpeg/FFDecVDPAU_NW.hpp          |  12 +-
 src/modules/FFmpeg/FFDecVTB.cpp               |   2 +-
 src/modules/FFmpeg/FFDecVTB.hpp               |  14 +-
 src/modules/FFmpeg/FFDemux.cpp                |   4 +-
 src/modules/FFmpeg/FFDemux.hpp                |  42 ++--
 src/modules/FFmpeg/FFReader.hpp               |  24 +-
 src/modules/FFmpeg/FFmpeg.hpp                 |  16 +-
 src/modules/FFmpeg/VAAPIWriter.hpp            |  30 +--
 src/modules/FFmpeg/VDPAUWriter.hpp            |  30 +--
 .../FileAssociation/FileAssociation.hpp       |  12 +-
 src/modules/Inputs/Inputs.hpp                 |  18 +-
 src/modules/Inputs/PCM.hpp                    |  20 +-
 src/modules/Inputs/Rayman2.hpp                |  20 +-
 src/modules/Inputs/ToneGenerator.cpp          |   7 +-
 src/modules/Inputs/ToneGenerator.hpp          |  24 +-
 src/modules/Modplug/MPDemux.hpp               |  24 +-
 src/modules/Modplug/Modplug.hpp               |  12 +-
 src/modules/Notify/Notify.hpp                 |  12 +-
 src/modules/Notify/NotifyExtension.hpp        |   6 +-
 src/modules/OpenGL2/OpenGL2.hpp               |  12 +-
 src/modules/OpenGL2/OpenGL2Common.cpp         |  37 ++-
 src/modules/OpenGL2/OpenGL2Common.hpp         |  15 +-
 src/modules/OpenGL2/OpenGL2Widget.hpp         |  18 +-
 src/modules/OpenGL2/OpenGL2Window.hpp         |  20 +-
 src/modules/OpenGL2/OpenGL2Writer.cpp         |  23 +-
 src/modules/OpenGL2/OpenGL2Writer.hpp         |  28 ++-
 src/modules/OpenSLES/OpenSLESWriter.hpp       |  18 +-
 src/modules/Playlists/M3U.hpp                 |   6 +-
 src/modules/Playlists/PLS.hpp                 |   6 +-
 src/modules/Playlists/Playlists.hpp           |  12 +-
 src/modules/Playlists/XSPF.hpp                |   6 +-
 .../3rdparty/CoreAudio/AudioDevice.h          |   4 +
 .../3rdparty/CoreAudio/AudioDevice.mm         |   5 +
 .../3rdparty/CoreAudio/AudioDeviceList.cpp    |   5 +
 src/modules/PortAudio/PortAudio.hpp           |  14 +-
 src/modules/PortAudio/PortAudioWriter.cpp     |   4 +
 src/modules/PortAudio/PortAudioWriter.hpp     |  18 +-
 src/modules/PulseAudio/PulseAudio.hpp         |  12 +-
 src/modules/PulseAudio/PulseAudioWriter.hpp   |  16 +-
 src/modules/QPainter/QPainter.hpp             |  12 +-
 src/modules/QPainter/QPainterWriter.cpp       |  14 ++
 src/modules/QPainter/QPainterWriter.hpp       |  30 +--
 src/modules/Subtitles/Classic.cpp             |   4 +
 src/modules/Subtitles/Classic.hpp             |   4 +-
 src/modules/Subtitles/SRT.hpp                 |   4 +-
 src/modules/Subtitles/Subtitles.hpp           |  12 +-
 src/modules/VideoFilters/BlendDeint.hpp       |   6 +-
 src/modules/VideoFilters/BobDeint.hpp         |   8 +-
 src/modules/VideoFilters/DiscardDeint.hpp     |   6 +-
 src/modules/VideoFilters/MotionBlur.hpp       |   6 +-
 src/modules/VideoFilters/VFilters.hpp         |   6 +-
 src/modules/VideoFilters/YadifDeint.hpp       |  14 +-
 src/modules/Visualizations/FFTSpectrum.hpp    |  26 +-
 src/modules/Visualizations/SimpleVis.cpp      |   2 +-
 src/modules/Visualizations/SimpleVis.hpp      |  26 +-
 src/modules/Visualizations/Visualizations.hpp |  12 +-
 src/modules/XVideo/XVideo.hpp                 |  12 +-
 src/modules/XVideo/XVideoWriter.hpp           |  28 +--
 src/qmplay2/CMakeLists.txt                    |  43 +++-
 src/qmplay2/Functions.cpp                     |  29 ++-
 src/qmplay2/InDockW.cpp                       |   9 +
 src/qmplay2/LibASS.cpp                        |   5 +
 src/qmplay2/LineEdit.cpp                      |  55 ++++-
 src/qmplay2/QMPlay2Core.cpp                   |  33 ++-
 src/qmplay2/QMPlay2OSD.cpp                    |  13 +-
 src/qmplay2/VideoFilters.cpp                  |   4 +-
 src/qmplay2/Writer.cpp                        |  10 +-
 src/qmplay2/YouTubeDL.cpp                     |  21 +-
 src/qmplay2/headers/AudioFilter.hpp           |   2 +-
 src/qmplay2/headers/Buffer.hpp                |   4 +-
 src/qmplay2/headers/ColorButton.hpp           |   6 +-
 src/qmplay2/headers/CommonJS.hpp              |   4 +-
 src/qmplay2/headers/Decoder.hpp               |   2 +-
 src/qmplay2/headers/DeintFilter.hpp           |   2 +-
 src/qmplay2/headers/Demuxer.hpp               |   2 +-
 src/qmplay2/headers/DockWidget.hpp            |   7 +-
 src/qmplay2/headers/Functions.hpp             |  74 +++---
 src/qmplay2/headers/IPC.hpp                   |  18 +-
 src/qmplay2/headers/ImgScaler.hpp             |   4 +-
 src/qmplay2/headers/InDockW.hpp               |  12 +-
 src/qmplay2/headers/LibASS.hpp                |   4 +-
 src/qmplay2/headers/LineEdit.hpp              |  28 ++-
 src/qmplay2/headers/MkvMuxer.hpp              |   4 +-
 src/qmplay2/headers/Module.hpp                |   2 +-
 src/qmplay2/headers/ModuleCommon.hpp          |   2 +-
 src/qmplay2/headers/ModuleParams.hpp          |   4 +-
 src/qmplay2/headers/NetworkAccess.hpp         |  13 +-
 src/qmplay2/headers/NetworkAccessJS.hpp       |   4 +-
 src/qmplay2/headers/Notifies.hpp              |   5 +-
 src/qmplay2/headers/NotifiesAndroid.hpp       |   6 +-
 src/qmplay2/headers/NotifiesFreedesktop.hpp   |   8 +-
 src/qmplay2/headers/NotifiesMacOS.hpp         |   8 +-
 src/qmplay2/headers/NotifiesTray.hpp          |   8 +-
 src/qmplay2/headers/Packet.hpp                |   2 +-
 src/qmplay2/headers/PacketBuffer.hpp          |   2 +-
 src/qmplay2/headers/PixelFormats.hpp          |  10 +-
 src/qmplay2/headers/Playlist.hpp              |   3 +-
 src/qmplay2/headers/QMPlay2Core.hpp           |  14 +-
 src/qmplay2/headers/QMPlay2Extensions.hpp     |   2 +-
 src/qmplay2/headers/QMPlay2OSD.hpp            |   4 +-
 src/qmplay2/headers/Reader.hpp                |   2 +-
 src/qmplay2/headers/Settings.hpp              |   2 +-
 src/qmplay2/headers/Slider.hpp                |  16 +-
 src/qmplay2/headers/SndResampler.hpp          |   4 +-
 src/qmplay2/headers/StreamInfo.hpp            |   9 +-
 src/qmplay2/headers/SubsDec.hpp               |   4 +-
 src/qmplay2/headers/TreeWidgetJS.hpp          |   6 +-
 src/qmplay2/headers/Version.hpp               |   8 +-
 src/qmplay2/headers/VideoAdjustment.hpp       |   4 +-
 src/qmplay2/headers/VideoFilter.hpp           |   2 +-
 src/qmplay2/headers/VideoFilters.hpp          |   2 +-
 src/qmplay2/headers/VideoFrame.hpp            |   6 +-
 src/qmplay2/headers/VideoWriter.hpp           |   2 +-
 src/qmplay2/headers/Writer.hpp                |   2 +-
 src/qmplay2/headers/YouTubeDL.hpp             |   6 +-
 194 files changed, 2052 insertions(+), 1026 deletions(-)

diff --git CMakeLists.txt CMakeLists.txt
index cd7189aa..cc2c1909 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -19,9 +19,13 @@ else()
     find_package(DummyPkgConfig REQUIRED)
 endif()
 
-find_package(Qt5Widgets 5.6 REQUIRED)
-if(Qt5Widgets_VERSION VERSION_LESS 5.6.3)
-    message(AUTHOR_WARNING "Qt5 >= 5.6.3, >= 5.9.1 is recommended")
+option(USE_QT4 "Build with Qt4" OFF)
+
+if(USE_QT4)
+    find_package(Qt4 REQUIRED QtCore QtGui)
+    include("${QT_USE_FILE}")
+else()
+    find_package(Qt5Widgets 5.10 REQUIRED)
 endif()
 
 set(CMAKE_LINK_DEPENDS_NO_SHARED ON)
@@ -49,6 +53,10 @@ endif()
 
 add_definitions(-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS -DQT_USE_FAST_OPERATOR_PLUS)
 
+if(APPLE AND USE_QT4)
+    add_definitions(-DQ_OS_MACOS)
+endif()
+
 if(WIN32)
     option(USE_CMD "Show CMD when running QMPlay2" OFF)
     mark_as_advanced(USE_CMD)
@@ -306,7 +314,11 @@ if(USE_MEDIABROWSER)
 endif()
 
 if(NOT ANDROID)
+  if(USE_QT4)
+    find_package(Qt4 QUIET OPTIONAL_COMPONENTS QtSvg)
+  else()
     find_package(Qt5Svg QUIET)
+  endif()
 else()
     find_package(Qt5Svg REQUIRED)
     find_package(Qt5AndroidExtras REQUIRED)
@@ -337,7 +349,7 @@ if(NOT APPLE AND NOT WIN32)
 endif()
 
 # Show warning if QtSvg doesn't exist
-if(NOT Qt5Svg_FOUND)
+if(NOT Qt5Svg_FOUND AND NOT Qt4_FOUND)
     message(WARNING "Missing QtSvg module - SVG icons will not be visible!")
 endif()
 
diff --git lang/CMakeLists.txt lang/CMakeLists.txt
index db28debd..bb5043e7 100644
--- lang/CMakeLists.txt
+++ lang/CMakeLists.txt
@@ -12,8 +12,12 @@ else()
     endforeach()
 endif()
 
-find_package(Qt5LinguistTools REQUIRED)
-qt5_add_translation(QM_FILES ${QMPLAY2_TSS})
+if(USE_QT4)
+    qt4_add_translation(QM_FILES ${QMPLAY2_TSS})
+else()
+    find_package(Qt5LinguistTools REQUIRED)
+    qt5_add_translation(QM_FILES ${QMPLAY2_TSS})
+endif()
 
 add_custom_target(translations ALL DEPENDS ${QM_FILES})
 
diff --git src/gui/AboutWidget.cpp src/gui/AboutWidget.cpp
index dfc52ccd..0eeda3e8 100644
--- src/gui/AboutWidget.cpp
+++ src/gui/AboutWidget.cpp
@@ -52,7 +52,12 @@ AboutWidget::AboutWidget()
 
     QTabWidget *tabW = new QTabWidget;
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     const QFont font(QFontDatabase::systemFont(QFontDatabase::FixedFont));
+#else
+    QFont font("Monospace");
+    font.setStyleHint(QFont::TypeWriter);
+#endif
 
     logE = new QPlainTextEdit;
     logE->setFont(font);
diff --git src/gui/AboutWidget.hpp src/gui/AboutWidget.hpp
index 98994f7a..33833656 100644
--- src/gui/AboutWidget.hpp
+++ src/gui/AboutWidget.hpp
@@ -24,14 +24,14 @@
 class QPlainTextEdit;
 class QPushButton;
 
-class AboutWidget final : public QWidget
+class AboutWidget : public QWidget
 {
     Q_OBJECT
 public:
     AboutWidget();
 private:
-    void showEvent(QShowEvent *) override;
-    void closeEvent(QCloseEvent *) override;
+	void showEvent(QShowEvent *) override final;
+	void closeEvent(QCloseEvent *) override final;
 
     QPlainTextEdit *logE, *clE, *auE;
     QPushButton *clrLogB;
diff --git src/gui/AddressDialog.hpp src/gui/AddressDialog.hpp
index 4a6f779a..3835b97d 100644
--- src/gui/AddressDialog.hpp
+++ src/gui/AddressDialog.hpp
@@ -24,12 +24,12 @@
 #include <QCheckBox>
 #include <QDialog>
 
-class AddressDialog final : public QDialog
+class AddressDialog : public QDialog
 {
     Q_DECLARE_TR_FUNCTIONS(AddressDialog)
 public:
     AddressDialog(QWidget *);
-    ~AddressDialog();
+    ~AddressDialog() final;
 
     inline bool addAndPlay() const
     {
diff --git src/gui/AudioThr.hpp src/gui/AudioThr.hpp
index f2382376..c0842611 100644
--- src/gui/AudioThr.hpp
+++ src/gui/AudioThr.hpp
@@ -28,14 +28,14 @@ class QMPlay2Extensions;
 class PlayClass;
 class AudioFilter;
 
-class AudioThr final : public AVThread
+class AudioThr : public AVThread
 {
     Q_OBJECT
 public:
     AudioThr(PlayClass &, const QStringList &pluginsName = {});
-    ~AudioThr();
+    ~AudioThr() final;
 
-    void stop(bool terminate = false) override;
+    void stop(bool terminate = false) override final;
     void clearVisualizations();
 
     bool setParams(uchar realChn, uint realSRate, uchar chn, uint sRate, bool resamplerFirst);
@@ -47,7 +47,7 @@ public:
         allowAudioDrain = true;
     }
 private:
-    void run() override;
+    void run() override final;
 
     bool resampler_create();
 
@@ -55,7 +55,7 @@ private:
     inline uint currentSampleRate() const;
 
 #ifdef Q_OS_WIN
-    void timerEvent(QTimerEvent *) override;
+    void timerEvent(QTimerEvent *) override final;
 #endif
 
     SndResampler sndResampler;
diff --git src/gui/CMakeLists.txt src/gui/CMakeLists.txt
index 7f8c22b5..5abeeade 100644
--- src/gui/CMakeLists.txt
+++ src/gui/CMakeLists.txt
@@ -34,10 +34,15 @@ set(GUI_HDR
     KeyBindingsDialog.hpp
     Updater.hpp
     RepeatMode.hpp
-    PanGestureEventFilter.hpp
-    EventFilterWorkarounds.hpp
 )
 
+if(NOT USE_QT4)
+    list(APPEND GUI_HDR
+        PanGestureEventFilter.hpp
+        EventFilterWorkarounds.hpp
+    )
+endif()
+
 set(GUI_SRC
     Main.cpp
     MenuBar.cpp
@@ -65,7 +70,6 @@ set(GUI_SRC
     ShortcutHandler.cpp
     KeyBindingsDialog.cpp
     Updater.cpp
-    EventFilterWorkarounds.cpp
 )
 
 set(GUI_FORMS # *.ui files
@@ -79,10 +83,15 @@ set(GUI_RESOURCES
     resources.qrc
 )
 
-if(NOT WIN32)
+if(NOT USE_QT4)
     list(APPEND GUI_SRC
-        PanGestureEventFilter.cpp
+        EventFilterWorkarounds.cpp
     )
+    if(NOT WIN32)
+        list(APPEND GUI_SRC
+            PanGestureEventFilter.cpp
+        )
+    endif()
 endif()
 
 if(APPLE)
@@ -96,7 +105,11 @@ if(APPLE)
     include_directories("macOS")
 endif()
 
-qt5_wrap_ui(GUI_FORM_HDR ${GUI_FORMS})
+if(USE_QT4)
+    qt4_wrap_ui(GUI_FORM_HDR ${GUI_FORMS})
+else()
+    qt5_wrap_ui(GUI_FORM_HDR ${GUI_FORMS})
+endif()
 set_property(SOURCE ${GUI_FORM_HDR} PROPERTY SKIP_AUTOMOC ON)
 
 include_directories(../qmplay2/headers)
@@ -121,7 +134,7 @@ if(USE_TAGLIB)
     list(APPEND GUI_SRC TagEditor.cpp)
 endif()
 
-if(NOT APPLE)
+if(USE_QT4 OR NOT APPLE)
     add_definitions(-DQMPLAY2_ALLOW_ONLY_ONE_INSTANCE)
 endif()
 
@@ -216,11 +229,13 @@ if(WIN32)
 elseif(APPLE)
     install(TARGETS ${PROJECT_NAME} BUNDLE DESTINATION ${CMAKE_INSTALL_PREFIX})
 
-    set(QT_LIBS_DIR "${Qt5Widgets_DIR}/../..")
-    set(QT_PLUGINS_DIR "${QT_LIBS_DIR}/../plugins")
+    set(QT_LIBS_DIR "@qt_libs_dir@")
+    set(QT_PLUGINS_DIR "@qt_plugins_dir@")
+if(NOT USE_QT4)
     install(FILES
         "${QT_PLUGINS_DIR}/platforms/libqcocoa.dylib"
         DESTINATION "${MAC_BUNDLE_PATH}/Contents/plugins/platforms")
+endif()
     install(FILES
         "${QT_PLUGINS_DIR}/iconengines/libqsvgicon.dylib"
         DESTINATION "${MAC_BUNDLE_PATH}/Contents/plugins/iconengines")
@@ -238,23 +253,7 @@ elseif(APPLE)
         DESTINATION "${MAC_BUNDLE_PATH}/Contents"
         FILES_MATCHING
         PATTERN "qtbase_*.qm")
-    if(EXISTS "/usr/local/bin/ffmpeg")
-        install(PROGRAMS
-            "/usr/local/bin/ffmpeg"
-            DESTINATION "${MAC_BUNDLE_PATH}/Contents/MacOS")
-    else()
-        message(WARNING "FFmpeg executable not copied!")
-    endif()
-    install(CODE "
-        include(BundleUtilities)
-        set(BU_CHMOD_BUNDLE_ITEMS ON)
-        list(APPEND DIRS /usr/local/lib ${QT_LIBS_DIR})
-        file(GLOB_RECURSE QMPLAY2_MODULES_AND_QT_PLUGINS
-            \"${MAC_BUNDLE_PATH}/Contents/MacOS/modules/*\"
-            \"${MAC_BUNDLE_PATH}/Contents/plugins/*.dylib\")
-        file(WRITE \"${MAC_BUNDLE_PATH}/Contents/Resources/qt.conf\")
-        fixup_bundle(${MAC_BUNDLE_PATH} \"\${QMPLAY2_MODULES_AND_QT_PLUGINS}\" \"\${DIRS}\")
-    ")
+    file(WRITE \"@destroot@${MAC_BUNDLE_PATH}/Contents/Resources/qt.conf\")
 else()
     # executable
     install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
diff --git src/gui/DeintSettingsW.hpp src/gui/DeintSettingsW.hpp
index ea74fac2..92787425 100644
--- src/gui/DeintSettingsW.hpp
+++ src/gui/DeintSettingsW.hpp
@@ -24,14 +24,14 @@ class QCheckBox;
 class QComboBox;
 class Module;
 
-class DeintSettingsW final : public QGroupBox
+class DeintSettingsW : public QGroupBox
 {
     Q_OBJECT
 public:
     static void init();
 
     DeintSettingsW();
-    ~DeintSettingsW();
+    ~DeintSettingsW() final;
 
     void writeSettings();
 private slots:
diff --git src/gui/DemuxerThr.hpp src/gui/DemuxerThr.hpp
index 35db9e36..9fdfd88d 100644
--- src/gui/DemuxerThr.hpp
+++ src/gui/DemuxerThr.hpp
@@ -32,14 +32,14 @@ class AVThread;
 class Demuxer;
 class BasicIO;
 
-class DemuxerThr final : public QThread
+class DemuxerThr : public QThread
 {
     friend class DemuxerTimer;
     friend class PlayClass;
     Q_OBJECT
 private:
     DemuxerThr(PlayClass &);
-    ~DemuxerThr();
+    ~DemuxerThr() final;
 
     QByteArray getCoverFromStream() const;
 
@@ -65,7 +65,7 @@ private:
 
     void checkReadyWrite(AVThread *avThr);
 
-    void run() override;
+    void run() override final;
 
     inline void ensureTrueUpdateBuffered();
     inline bool canUpdateBuffered() const;
diff --git src/gui/EntryProperties.cpp src/gui/EntryProperties.cpp
index d537bb9e..e2a396ab 100644
--- src/gui/EntryProperties.cpp
+++ src/gui/EntryProperties.cpp
@@ -107,11 +107,13 @@ EntryProperties::EntryProperties(QWidget *p, QTreeWidgetItem *_tWI, bool &sync,
         addrB = new AddressBox(Qt::Horizontal, url);
         layout.addWidget(addrB, row, 0, 1, 2);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         openUrlB = new QToolButton;
         openUrlB->setToolTip(tr("Open URL or directory containing chosen file"));
         openUrlB->setIcon(QMPlay2Core.getIconFromTheme("folder-open"));
         connect(openUrlB, &QToolButton::clicked, this, &EntryProperties::openUrl);
         layout.addWidget(openUrlB, row, 2, 1, 1);
+#endif
 
         fileSizeL = new QLabel;
 
diff --git src/gui/EntryProperties.hpp src/gui/EntryProperties.hpp
index d89c2ccb..ba203300 100644
--- src/gui/EntryProperties.hpp
+++ src/gui/EntryProperties.hpp
@@ -30,7 +30,7 @@ class QCheckBox;
 #endif
 class QLabel;
 
-class EntryProperties final : public QDialog
+class EntryProperties : public QDialog
 {
     Q_OBJECT
 public:
@@ -54,6 +54,6 @@ private slots:
 #endif
     void browse();
     void openUrl();
-    void accept() override;
-    void reject() override;
+    void accept() override final;
+    void reject() override final;
 };
diff --git src/gui/EventFilterWorkarounds.hpp src/gui/EventFilterWorkarounds.hpp
index e8c28cff..ce32dda1 100644
--- src/gui/EventFilterWorkarounds.hpp
+++ src/gui/EventFilterWorkarounds.hpp
@@ -20,7 +20,7 @@
 
 #include <QObject>
 
-class EventFilterWorkarounds final : public QObject
+class EventFilterWorkarounds : public QObject
 {
     Q_OBJECT
 
@@ -29,5 +29,5 @@ public:
     ~EventFilterWorkarounds();
 
 private:
-    bool eventFilter(QObject *watched, QEvent *event) override;
+    bool eventFilter(QObject *watched, QEvent *event) override final;
 };
diff --git src/gui/InfoDock.hpp src/gui/InfoDock.hpp
index cd3354a6..c46c4c7b 100644
--- src/gui/InfoDock.hpp
+++ src/gui/InfoDock.hpp
@@ -22,11 +22,11 @@
 
 #include <DockWidget.hpp>
 
-class TextEdit final : public QTextEdit
+class TextEdit : public QTextEdit
 {
 private:
-    void mouseMoveEvent(QMouseEvent *) override;
-    void mousePressEvent(QMouseEvent *) override;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
 };
 
 /**/
diff --git src/gui/KeyBindingsDialog.cpp src/gui/KeyBindingsDialog.cpp
index 3dca5428..2b4de1ae 100644
--- src/gui/KeyBindingsDialog.cpp
+++ src/gui/KeyBindingsDialog.cpp
@@ -35,8 +35,13 @@ KeyBindingsDialog::KeyBindingsDialog(QWidget *p) :
     shortcuts->setModel(QMPlay2GUI.shortcutHandler);
     shortcuts->setFrameShape(QFrame::NoFrame);
     shortcuts->setAlternatingRowColors(true);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     shortcuts->horizontalHeader()->setSectionResizeMode(0, QHeaderView::ResizeToContents);
     shortcuts->horizontalHeader()->setSectionResizeMode(1, QHeaderView::Stretch);
+#else
+    shortcuts->horizontalHeader()->setResizeMode(0, QHeaderView::ResizeToContents);
+    shortcuts->horizontalHeader()->setResizeMode(1, QHeaderView::Stretch);
+#endif
     shortcuts->setSelectionMode(QAbstractItemView::SingleSelection);
     shortcuts->verticalHeader()->setVisible(false);
 
diff --git src/gui/Main.cpp src/gui/Main.cpp
index f6f61584..06d0cc49 100644
--- src/gui/Main.cpp
+++ src/gui/Main.cpp
@@ -18,8 +18,10 @@
 
 #include <Main.hpp>
 
-#include <EventFilterWorkarounds.hpp>
-#include <PanGestureEventFilter.hpp>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <EventFilterWorkarounds.hpp>
+    #include <PanGestureEventFilter.hpp>
+#endif
 #include <ScreenSaver.hpp>
 #include <VideoFrame.hpp>
 #include <MainWidget.hpp>
@@ -31,7 +33,9 @@
 #include <Module.hpp>
 #include <IPC.hpp>
 
-#include <QCommandLineParser>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+    #include <QCommandLineParser>
+#endif
 #include <QDesktopWidget>
 #include <QApplication>
 #include <QImageReader>
@@ -42,6 +46,9 @@
 #include <QBuffer>
 #include <QFile>
 #include <QDir>
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    #include <QTextCodec>
+#endif
 #ifdef Q_OS_MACOS
     #include <QProcess>
 #endif
@@ -52,6 +59,10 @@
 #include <csignal>
 #include <ctime>
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 2, 0)
+    static QPair<QStringList, QStringList> g_arguments;
+#endif
+
 static ScreenSaver *g_screenSaver = nullptr;
 static bool g_useGui = true;
 #ifdef Q_OS_MACOS
@@ -104,6 +115,7 @@ void QMPlay2GUIClass::saveCover(QByteArray cover)
 
 void QMPlay2GUIClass::setTreeWidgetItemIcon(QTreeWidgetItem *tWI, const QIcon &icon, const int column, QTreeWidget *treeWidget)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 1, 0)
     bool setDefaultIcon = icon.name().isEmpty();
     if (!setDefaultIcon)
     {
@@ -116,7 +128,12 @@ void QMPlay2GUIClass::setTreeWidgetItemIcon(QTreeWidgetItem *tWI, const QIcon &i
             setDefaultIcon = true;
     }
     if (setDefaultIcon)
+#else
+    Q_UNUSED(treeWidget)
+#endif
+    {
         tWI->setIcon(column, icon);
+    }
 }
 
 #ifdef UPDATER
@@ -168,7 +185,11 @@ QString QMPlay2GUIClass::getCurrentPth(QString pth, bool leaveFilename)
         pth.remove(0, 7);
     if (!leaveFilename)
         pth = Functions::filePath(pth);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     if (!QFileInfo::exists(pth))
+#else
+    if (!QFileInfo(pth).exists())
+#endif
         pth = settings->getString("currPth");
     return pth;
 }
@@ -216,6 +237,8 @@ QMPlay2GUIClass::~QMPlay2GUIClass()
 
 /**/
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+
 static QCommandLineParser *createCmdParser(bool descriptions)
 {
     static constexpr const char *translations[] = {
@@ -268,6 +291,9 @@ static QCommandLineParser *createCmdParser(bool descriptions)
 
     return parser;
 }
+
+#endif
+
 static QString fileArg(const QString &arg)
 {
     if (!arg.contains("://"))
@@ -278,6 +304,9 @@ static QString fileArg(const QString &arg)
     }
     return arg;
 }
+
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+
 static QList<QPair<QString, QString>> parseArguments(const QCommandLineParser &parser)
 {
     QList<QPair<QString, QString>> arguments;
@@ -337,6 +366,96 @@ static bool writeToSocket(IPCSocket &socket, QList<QPair<QString, QString>> &arg
     return ret;
 }
 
+#else // Fallback code for Qt < 5.2
+
+static void parseArguments(QStringList &arguments)
+{
+    QString param;
+    while (arguments.count())
+    {
+        const QString arg = arguments.takeFirst();
+        if (arg.startsWith('-'))
+        {
+            param = arg;
+            while (param.startsWith('-'))
+                param.remove(0, 1);
+            if (!param.isEmpty() && !g_arguments.first.contains(param))
+            {
+                g_arguments.first  += param;
+                g_arguments.second += QString();
+            }
+            else
+            {
+                param.clear();
+            }
+        }
+        else if (!param.isEmpty())
+        {
+            QString &data = g_arguments.second.last();
+            if (!data.isEmpty())
+                data += '\n';
+            if (param == "open" || param == "enqueue")
+                data += fileArg(arg);
+            else
+                data += arg;
+        }
+        else if (!g_arguments.first.contains("open"))
+        {
+            param = "open";
+            g_arguments.first  += param;
+            g_arguments.second += fileArg(arg);
+        }
+    }
+}
+
+static void showHelp()
+{
+    QFile f;
+    f.open(stdout, QFile::WriteOnly);
+    f.write("QMPlay2 - Qt Media Player 2 (" + Version::get() + ")\n");
+    f.write(QObject::tr(
+"  Parameters list:\n"
+"    -open         \"address\"\n"
+"    -enqueue      \"address\"\n"
+"    -profile      \"name\" - starts application with given profile name\n"
+"    -noplay     - doesn't play after run (bypass \"Remember playback position\" option)\n"
+"    -toggle     - toggles play/pause\n"
+"    -show       - ensures that the window will be visible if the application is running\n"
+"    -fullscreen - toggles fullscreen\n"
+"    -volume     - sets volume [0..100]\n"
+"    -speed      - sets playback speed [0.05..100.0]\n"
+"    -seek       - seeks to the specified value [s]\n"
+"    -stop       - stops playback\n"
+"    -next       - plays next on the list\n"
+"    -prev       - plays previous on the list\n"
+"    -quit       - terminates the application"
+    ).toLocal8Bit() + "\n");
+}
+
+static bool writeToSocket(IPCSocket &socket)
+{
+    bool ret = false;
+    for (int i = g_arguments.first.count() - 1; i >= 0; i--)
+    {
+        if (g_arguments.first[i] == "noplay" || g_arguments.first[i] == "profile")
+            continue;
+        else if (g_arguments.first[i] == "open" || g_arguments.first[i] == "enqueue")
+        {
+            if (!g_arguments.second[i].isEmpty())
+                g_arguments.second[i] = Functions::Url(g_arguments.second[i]);
+#ifdef Q_OS_WIN
+            if (g_arguments.second[i].startsWith("file://"))
+                g_arguments.second[i].remove(0, 7);
+#endif
+        }
+        socket.write(QString(g_arguments.first[i] + '\t' + g_arguments.second[i]).toUtf8() + '\0');
+        ret = true;
+    }
+    return ret;
+}
+
+#endif
+
 static inline void exitProcedure()
 {
 #ifdef Q_OS_MACOS
@@ -352,7 +471,7 @@ static inline void exitProcedure()
     g_screenSaver = nullptr;
 }
 
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     #include <csetjmp>
     static jmp_buf env;
     static bool qAppOK;
@@ -400,7 +519,7 @@ static void signal_handler(int s)
             }
             break;
         case SIGABRT:
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
             if (!qAppOK && g_useGui)
             {
                 canDeleteApp = g_useGui = false;
@@ -432,6 +551,14 @@ static void signal_handler(int s)
     }
 }
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 2, 0)
+static inline void noAutoPlay()
+{
+    g_arguments.first += "noplay";
+    g_arguments.second += QString();
+}
+#endif
+
 #ifdef Q_OS_WIN
 static LRESULT CALLBACK MMKeysHookProc(int code, WPARAM wparam, LPARAM lparam)
 {
@@ -461,8 +588,14 @@ static LRESULT CALLBACK MMKeysHookProc(int code, WPARAM wparam, LPARAM lparam)
 }
 #endif
 
-static QtMessageHandler g_defaultMsgHandler = nullptr;
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    static QtMessageHandler g_defaultMsgHandler = nullptr;
+#else
+// FIXME: this does nothing now.
+//    static QtMsgHandler g_defaultMsgHandler = nullptr;
+#endif
 static QMutex g_messageHandlerMutex;
+#if QT_VERSION >= QT_VERSION_CHECK(5, 4, 0)
 static void messageHandler(QtMsgType type, const QMessageLogContext &context, const QString &message)
 {
     bool qmplay2Log = false;
@@ -507,6 +640,9 @@ static void messageHandler(QtMsgType type, const QMessageLogContext &context, co
 #endif
     }
 }
+#else
+// FIXME: QMessageLogContext and qFormatLogMessage do not exist in Qt4.
+#endif
 
 #ifdef CHECK_FOR_EGL
 static void checkForEGL()
@@ -608,23 +744,40 @@ int main(int argc, char *argv[])
     checkForEGL();
 #endif
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 6, 0)
     QGuiApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
-#ifndef Q_OS_WIN
+#endif
+#if !defined(Q_OS_WIN) && (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
     QGuiApplication::setAttribute(Qt::AA_ShareOpenGLContexts);
 #endif
 
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     if (!setjmp(env))
 #endif
-    new QApplication(argc, argv);
-#ifndef Q_OS_WIN
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+		new QApplication(argc, argv, g_useGui);
+#else
+		new QApplication(argc, argv);
+#endif
+#if !defined(Q_OS_WIN) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     qAppOK = true;
 #endif
+
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+	QTextCodec::setCodecForTr(QTextCodec::codecForName("UTF-8"));
+	QTextCodec::setCodecForCStrings(QTextCodec::codecForName("UTF-8"));
+#endif
     QCoreApplication::setApplicationName("QMPlay2");
 
     QMPlay2GUIClass &qmplay2Gui = QMPlay2GUI; //Create "QMPlay2GUI" instance
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     g_defaultMsgHandler = qInstallMessageHandler(messageHandler);
+#else
+// FIXME: just a placeholder, MsgHandler does not work now.
+//    g_defaultMsgHandler = qInstallMsgHandler(messageHandler);
+#endif
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
     QCommandLineParser *parser = createCmdParser(false);
     parser->setSingleDashWordOptionMode(QCommandLineParser::ParseAsLongOptions);
     parser->process(*qApp);
@@ -632,9 +785,16 @@ int main(int argc, char *argv[])
     const bool help = parser->isSet("help");
     QString cmdLineProfile = parser->value("profile");
     delete parser;
+#else
+    QStringList arguments = QCoreApplication::arguments();
+    arguments.removeFirst();
+    const bool help = arguments.contains("-help") || arguments.contains("-h");
+#endif
 
     if (!help)
     {
+// FIXME: try sorting this mess out.
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
         bool useSocket = true;
 
         for (auto &&argument : arguments)
@@ -649,10 +809,18 @@ int main(int argc, char *argv[])
 
         if (useSocket)
         {
+#endif
             IPCSocket socket(qmplay2Gui.getPipe());
+    #if QT_VERSION < QT_VERSION_CHECK(5, 2, 0)
+            parseArguments(arguments);
+    #endif
             if (socket.open(IPCSocket::WriteOnly))
             {
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
                 if (writeToSocket(socket, arguments))
+    #else
+                if (writeToSocket(socket))
+    #endif
                     g_useGui = false;
                 socket.close();
             }
@@ -660,14 +828,20 @@ int main(int argc, char *argv[])
             else if (QFile::exists(qmplay2Gui.getPipe()))
             {
                 QFile::remove(qmplay2Gui.getPipe());
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
                 arguments.append({"noplay", QString()});
+    #else
+                noAutoPlay();
+    #endif
             }
 #endif
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
         }
+#endif
 
         if (!g_useGui)
         {
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
             if (canDeleteApp)
 #endif
                 delete qApp;
@@ -675,7 +849,20 @@ int main(int argc, char *argv[])
         }
     }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
     qmplay2Gui.cmdLineProfile = std::move(cmdLineProfile);
+#else
+    for (int i = 0; i < g_arguments.first.count(); ++i)
+    {
+        if (g_arguments.first.at(i) == "profile")
+        {
+            qmplay2Gui.cmdLineProfile = g_arguments.second.at(i);
+            g_arguments.first.removeAt(i);
+            g_arguments.second.removeAt(i);
+            break;
+        }
+    }
+#endif
 
     QString libPath, sharePath = QCoreApplication::applicationDirPath();
     bool cmakeBuildFound = false;
@@ -717,7 +904,9 @@ int main(int argc, char *argv[])
 
     qRegisterMetaType<VideoFrame>("VideoFrame");
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 1, 0)
     QGuiApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);
+#endif
     QApplication::setAttribute(Qt::AA_DontCreateNativeWidgetSiblings);
 
     QDir::setCurrent(QCoreApplication::applicationDirPath()); //Is it really needed?
@@ -726,8 +915,10 @@ int main(int argc, char *argv[])
     {
         qmplay2Gui.screenSaver = g_screenSaver = new ScreenSaver;
         QApplication::setQuitOnLastWindowClosed(false);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         qApp->installEventFilter(new EventFilterWorkarounds(qApp));
         PanGestureEventFilter::install();
+#endif
     }
 
 #ifdef Q_OS_WIN
@@ -751,6 +942,7 @@ int main(int argc, char *argv[])
         /* QMPlay2GUI musi być stworzone już wcześniej */
         QMPlay2Core.init(!help, cmakeBuildFound, libPath, sharePath, qmplay2Gui.cmdLineProfile);
 
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
         if (help)
         {
             parser = createCmdParser(true);
@@ -760,6 +952,7 @@ int main(int argc, char *argv[])
             delete parser;
             break;
         }
+    #endif
 
         if (!qmplay2Gui.cmdLineProfile.isEmpty() && QMPlay2Core.getSettingsProfile() == "/")
             qmplay2Gui.cmdLineProfile = QMPlay2Core.getSettingsProfile(); // Default profile
@@ -783,6 +976,14 @@ int main(int argc, char *argv[])
             settings.remove("Volume");
         }
 
+    #if QT_VERSION < QT_VERSION_CHECK(5, 2, 0)
+        if (help)
+        {
+            showHelp();
+            break;
+        }
+    #endif
+
         qmplay2Gui.loadIcons();
         {
             const QIcon scaledIcon = QMPlay2Core.getQMPlay2Icon();
@@ -861,7 +1062,11 @@ int main(int argc, char *argv[])
 
         qmplay2Gui.restartApp = qmplay2Gui.removeSettings = qmplay2Gui.noAutoPlay = false;
         qmplay2Gui.newProfileName.clear();
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
         new MainWidget(arguments);
+#else
+        new MainWidget(g_arguments);
+#endif
         do
         {
             QCoreApplication::exec();
@@ -894,7 +1099,11 @@ int main(int argc, char *argv[])
         }
 
         if (qmplay2Gui.noAutoPlay)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
             arguments.append({"noplay", QString()});
+#else
+            noAutoPlay();
+#endif
 
         delete qmplay2Gui.pipe;
     } while (qmplay2Gui.restartApp);
@@ -907,7 +1116,7 @@ int main(int argc, char *argv[])
 
     exitProcedure();
 
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     if (canDeleteApp)
 #endif
         delete qApp;
diff --git src/gui/Main.hpp src/gui/Main.hpp
index e4916950..26f17d54 100644
--- src/gui/Main.hpp
+++ src/gui/Main.hpp
@@ -35,7 +35,7 @@ class VideoDock;
 class MenuBar;
 class QWidget;
 
-class QMPlay2GUIClass final : private QMPlay2CoreClass
+class QMPlay2GUIClass : private QMPlay2CoreClass
 {
     Q_DECLARE_TR_FUNCTIONS(QMPlay2GUIClass)
 
@@ -68,7 +68,7 @@ public:
 
     void updateInDockW();
 
-    const QWidget *getVideoDock() const override;
+    const QWidget *getVideoDock() const override final;
 
     QColor grad1, grad2, qmpTxt;
     QIcon *groupIcon, *mediaIcon, *folderIcon;
@@ -84,7 +84,7 @@ public:
     QString newProfileName, cmdLineProfile;
 private:
     QMPlay2GUIClass();
-    ~QMPlay2GUIClass();
+    ~QMPlay2GUIClass() final;
 };
 
 #define QMPlay2GUI \
diff --git src/gui/MainWidget.cpp src/gui/MainWidget.cpp
index 139dd2a4..9303f6d4 100644
--- src/gui/MainWidget.cpp
+++ src/gui/MainWidget.cpp
@@ -30,8 +30,10 @@
 #include <QFileDialog>
 #include <QTreeWidget>
 #include <QListWidget>
-#ifdef Q_OS_MACOS
+#ifndef QMPLAY2_ALLOW_ONLY_ONE_INSTANCE
     #include <QProcess>
+#endif
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     #include <QScreen>
     #include <QWindow>
 #endif
@@ -61,8 +63,11 @@
 #include <ShortcutHandler.hpp>
 #include <VolWidget.hpp>
 #include <ScreenSaver.hpp>
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     #include <QMPlay2MacExtensions.hpp>
+#else
+    #include <Carbon/Carbon.h>
+    extern void qt_mac_set_dock_menu(QMenu *);
 #endif
 
 using Functions::timeToStr;
@@ -76,8 +81,9 @@ using Functions::timeToStr;
 
 #include <cmath>
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
 /* MainWidgetTmpStyle -  dock widget separator extent must be larger for touch screens */
-class MainWidgetTmpStyle final : public QCommonStyle
+class MainWidgetTmpStyle : public QCommonStyle
 {
 public:
     ~MainWidgetTmpStyle() = default;
@@ -90,6 +96,7 @@ public:
         return pM;
     }
 };
+#endif
 
 #ifndef Q_OS_MACOS
 static void copyMenu(QMenu *dest, QMenu *src, QMenu *dontCopy = nullptr)
@@ -110,13 +117,18 @@ static void copyMenu(QMenu *dest, QMenu *src, QMenu *dontCopy = nullptr)
 #endif
 
 /* MainWidget */
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
 MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
+#else
+MainWidget::MainWidget(QPair<QStringList, QStringList> &arguments) :
+#endif
     updater(this)
 {
     QMPlay2GUI.videoAdjustment = new VideoAdjustmentW;
     QMPlay2GUI.shortcutHandler = new ShortcutHandler(this);
     QMPlay2GUI.mainW = this;
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     /* Looking for touch screen */
     for (const QTouchDevice *touchDev : QTouchDevice::devices())
     {
@@ -128,6 +140,7 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
             break;
         }
     }
+#endif
 
     setObjectName("MainWidget");
 
@@ -284,9 +297,11 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
     connect(playlistDock, SIGNAL(play(const QString &)), &playC, SLOT(play(const QString &)));
     connect(playlistDock, SIGNAL(repeatEntry(bool)), &playC, SLOT(repeatEntry(bool)));
     connect(playlistDock, SIGNAL(stop()), &playC, SLOT(stop()));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(playlistDock, &PlaylistDock::addAndPlayRestoreWindow, this, [this] {
         m_restoreWindowOnVideo = true;
     });
+#endif
 
     connect(seekS, SIGNAL(valueChanged(int)), this, SLOT(seek(int)));
     connect(seekS, SIGNAL(mousePosition(int)), this, SLOT(mousePositionOnSlider(int)));
@@ -300,9 +315,11 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
     connect(&QMPlay2Core, SIGNAL(processParam(const QString &, const QString &)), this, SLOT(processParam(const QString &, const QString &)));
     connect(&QMPlay2Core, SIGNAL(statusBarMessage(const QString &, int)), this, SLOT(statusBarMessage(const QString &, int)));
     connect(&QMPlay2Core, SIGNAL(showSettings(const QString &)), this, SLOT(showSettings(const QString &)));
-
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(QMPlay2GUI.videoAdjustment, SIGNAL(videoAdjustmentChanged(const QString &)), &playC, SLOT(videoAdjustmentChanged(const QString &)));
-
+#else
+    connect(QMPlay2GUI.videoAdjustment, SIGNAL(videoAdjustmentChanged()), &playC, SLOT(videoAdjustmentChanged()));
+#endif
     connect(&playC, SIGNAL(chText(const QString &)), stateL, SLOT(setText(const QString &)));
     connect(&playC, SIGNAL(updateLength(int)), this, SLOT(setSeekSMaximum(int)));
     connect(&playC, SIGNAL(updatePos(double)), this, SLOT(updatePos(double)));
@@ -320,17 +337,23 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
     connect(&playC, SIGNAL(updateBufferedRange(int, int)), seekS, SLOT(drawRange(int, int)));
     connect(&playC, SIGNAL(updateWindowTitle(const QString &)), this, SLOT(updateWindowTitle(const QString &)));
     connect(&playC, SIGNAL(updateImage(const QImage &)), videoDock, SLOT(updateImage(const QImage &)));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(&playC, &PlayClass::videoStarted, this, &MainWidget::videoStarted);
     connect(&playC, &PlayClass::videoNotStarted, this, [this] {
         m_restoreWindowOnVideo = false;
     });
+#else
+    connect(&playC, SIGNAL(videoStarted(bool)), this, SLOT(videoStarted(bool)));
+#endif
     connect(&playC, SIGNAL(uncheckSuspend()), this, SLOT(uncheckSuspend()));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(&playC, &PlayClass::setVideoCheckState, this, [this](bool rotate90, bool hFlip, bool vFlip, bool spherical) {
         menuBar->playback->videoFilters->rotate90->setChecked(rotate90);
         menuBar->playback->videoFilters->hFlip->setChecked(hFlip);
         menuBar->playback->videoFilters->vFlip->setChecked(vFlip);
         menuBar->playback->videoFilters->spherical->setChecked(spherical);
     });
+#endif
     /**/
 
     if (settings.getBool("MainWidget/TabPositionNorth"))
@@ -361,7 +384,9 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
     QMPlay2GUI.menuBar->widgets->lockWidgetsAct = lockWidgetsAct;
 
     QMPlay2GUI.menuBar->setKeyShortcuts();
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QMPlay2GUI.videoAdjustment->setKeyShortcuts();
+#endif
 
     volW->setVolume(settings.getInt("VolumeL"), settings.getInt("VolumeR"), true);
     if (settings.getBool("Mute"))
@@ -390,13 +415,16 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
         if (tabBar && tabBar->property("changeCurrentOnDrag").isValid())
         {
             tabBar->setAcceptDrops(true);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
             tabBar->setChangeCurrentOnDrag(true);
+#endif
         }
     }
 
     playlistDock->load(QMPlay2Core.getSettingsDir() + "Playlist.pls");
 
     bool noplay = false;
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
     for (const auto &argument : asConst(arguments))
     {
         const QString &param = argument.first;
@@ -405,6 +433,15 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
         processParam(param, data);
     }
     arguments.clear();
+#else
+    while (!arguments.first.isEmpty())
+    {
+        const QString param = arguments.first.takeFirst();
+        const QString data  = arguments.second.takeFirst();
+        noplay |= (param == "open" || param == "noplay");
+        processParam(param, data);
+    }
+#endif
 
     if (!noplay)
     {
@@ -421,7 +458,7 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
             playStateChanged(false);
     }
 
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     qApp->installEventFilter(this);
     fileOpenTimer.setSingleShot(true);
     connect(&fileOpenTimer, &QTimer::timeout, this, &MainWidget::fileOpenTimerTimeout);
@@ -434,7 +471,7 @@ MainWidget::MainWidget(QList<QPair<QString, QString>> &arguments) :
 }
 MainWidget::~MainWidget()
 {
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     QMPlay2MacExtensions::unregisterMacOSMediaKeys();
 #endif
     QMPlay2Extensions::closeExtensions();
@@ -501,8 +538,10 @@ void MainWidget::processParam(const QString &param, const QString &data)
         else
             playlistDock->add(data);
     }
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
     else if (param == "play")
         playlistDock->start();
+#endif
     else if (param == "toggle")
         togglePlay();
     else if (param == "show")
@@ -692,6 +731,7 @@ void MainWidget::resetSpherical()
 
 void MainWidget::visualizationFullScreen()
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QWidget *senderW = (QWidget *)sender();
     const auto maybeGoFullScreen = [this, senderW] {
         if (!fullScreen)
@@ -706,6 +746,13 @@ void MainWidget::visualizationFullScreen()
 #else
     maybeGoFullScreen();
 #endif
+#else
+    if (!fullScreen)
+    {
+        videoDock->setWidget((QWidget *)sender());
+        toggleFullScreen();
+    }
+#endif
 }
 void MainWidget::hideAllExtensions()
 {
@@ -724,7 +771,7 @@ void MainWidget::toggleVisibility()
             toggleFullScreen();
         if (!isTray)
         {
-#ifndef Q_OS_MACOS
+#if !defined(Q_OS_MACOS) || (QT_VERSION < QT_VERSION_CHECK(5, 0, 0))
             showMinimized();
 #else
             QMPlay2MacExtensions::setApplicationVisible(false);
@@ -779,7 +826,9 @@ void MainWidget::createMenuBar()
     connect(menuBar->window->toggleVisibility, SIGNAL(triggered()), this, SLOT(toggleVisibility()));
     connect(menuBar->window->toggleFullScreen, SIGNAL(triggered()), this, SLOT(toggleFullScreen()));
     connect(menuBar->window->toggleCompactView, SIGNAL(triggered()), this, SLOT(toggleCompactView()));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(menuBar->window->alwaysOnTop, &QAction::triggered, this, &MainWidget::toggleAlwaysOnTop);
+#endif
     connect(menuBar->window->close, SIGNAL(triggered()), this, SLOT(close()));
 
     connect(menuBar->playlist->add->address, SIGNAL(triggered()), this, SLOT(openUrl()));
@@ -794,7 +843,9 @@ void MainWidget::createMenuBar()
     connect(menuBar->playlist->newGroup, SIGNAL(triggered()), playlistDock, SLOT(newGroup()));
     connect(menuBar->playlist->renameGroup, SIGNAL(triggered()), playlistDock, SLOT(renameGroup()));
     connect(menuBar->playlist->lock, SIGNAL(triggered()), playlistDock, SLOT(toggleLock()));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(menuBar->playlist->alwaysSync, &QAction::triggered, playlistDock, &PlaylistDock::alwaysSyncTriggered);
+#endif
     connect(menuBar->playlist->delEntries, SIGNAL(triggered()), playlistDock, SLOT(delEntries()));
     connect(menuBar->playlist->delNonGroupEntries, SIGNAL(triggered()), playlistDock, SLOT(delNonGroupEntries()));
     connect(menuBar->playlist->clear, SIGNAL(triggered()), playlistDock, SLOT(clear()));
@@ -921,7 +972,7 @@ void MainWidget::createMenuBar()
     copyMenu(secondMenu, menuBar->help);
     if (tray)
         tray->setContextMenu(secondMenu);
-#else //On OS X add only the most important menu actions to dock menu
+#else // On OS X add only the most important menu actions to dock menu
     secondMenu->addAction(menuBar->player->togglePlay);
     secondMenu->addAction(menuBar->player->stop);
     secondMenu->addAction(menuBar->player->next);
@@ -930,16 +981,20 @@ void MainWidget::createMenuBar()
     secondMenu->addAction(menuBar->player->toggleMute);
     secondMenu->addSeparator();
     // Copy action, because PreferencesRole doesn't show in dock menu.
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QAction *settings = new QAction(menuBar->options->settings->icon(), menuBar->options->settings->text(), menuBar->options->settings->parent());
     connect(settings, &QAction::triggered, menuBar->options->settings, &QAction::trigger);
     secondMenu->addAction(settings);
+#endif
 
+#ifndef QMPLAY2_ALLOW_ONLY_ONE_INSTANCE
     QAction *newInstanceAct = new QAction(tr("New window"), secondMenu);
     connect(newInstanceAct, &QAction::triggered, [] {
         QProcess::startDetached(QCoreApplication::applicationFilePath(), {"-noplay"}, QCoreApplication::applicationDirPath());
     });
     secondMenu->addSeparator();
     secondMenu->addAction(newInstanceAct);
+#endif
 
     qt_mac_set_dock_menu(secondMenu);
 #endif
@@ -1022,7 +1077,7 @@ void MainWidget::toggleFullScreen()
 #ifndef Q_OS_ANDROID
     static bool maximized;
 #endif
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     if (isFullScreen())
     {
         showNormal();
@@ -1089,13 +1144,13 @@ void MainWidget::toggleFullScreen()
         menuBar->window->toggleFullScreen->setShortcuts(QList<QKeySequence>() << menuBar->window->toggleFullScreen->shortcut() << QKeySequence("ESC"));
         fullScreen = true;
 
-#ifndef Q_OS_MACOS
-        showFullScreen();
-#else
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
         setWindowFlags(Qt::Window | Qt::FramelessWindowHint);
         setGeometry(window()->windowHandle()->screen()->geometry());
         QMPlay2MacExtensions::showSystemUi(windowHandle(), false);
         show();
+#else
+        showFullScreen();
 #endif
 
         if (playC.isPlaying())
@@ -1113,7 +1168,7 @@ void MainWidget::toggleFullScreen()
         fullScreen = false;
 
 #ifndef Q_OS_ANDROID
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
         QMPlay2MacExtensions::showSystemUi(windowHandle(), true);
         setWindowFlags(Qt::Window);
 #else
@@ -1123,7 +1178,7 @@ void MainWidget::toggleFullScreen()
             showMaximized();
         else
         {
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
             showNormal();
 #endif
             setGeometry(savedGeo);
@@ -1407,6 +1462,7 @@ void MainWidget::hideDocksSlot()
 }
 void MainWidget::doRestoreState(const QByteArray &data)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     if (isMaximized())
     {
         setUpdatesEnabled(false);
@@ -1419,6 +1475,7 @@ void MainWidget::doRestoreState(const QByteArray &data)
         });
     }
     else
+#endif
     {
         restoreState(data);
     }
@@ -1773,12 +1830,13 @@ void MainWidget::hideEvent(QHideEvent *)
 
 bool MainWidget::eventFilter(QObject *obj, QEvent *event)
 {
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     if (tray && obj == tray && event->type() == QEvent::Wheel)
     {
         QWheelEvent *we = static_cast<QWheelEvent *>(event);
         volW->changeVolume(we->angleDelta().y() / 30);
     }
-#ifdef Q_OS_MACOS
+
     else if (event->type() == QEvent::FileOpen)
     {
         filesToAdd.append(((QFileOpenEvent *)event)->file());
@@ -1788,7 +1846,7 @@ bool MainWidget::eventFilter(QObject *obj, QEvent *event)
     return QMainWindow::eventFilter(obj, event);
 }
 
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
 void MainWidget::fileOpenTimerTimeout()
 {
     if (filesToAdd.count() == 1)
diff --git src/gui/MainWidget.hpp src/gui/MainWidget.hpp
index 2fe04bc5..f235773f 100644
--- src/gui/MainWidget.hpp
+++ src/gui/MainWidget.hpp
@@ -42,14 +42,18 @@ class QMPlay2Extensions;
     class QWinTaskbarProgress;
 #endif
 
-class MainWidget final : public QMainWindow
+class MainWidget : public QMainWindow
 {
     friend class QMPlay2GUIClass;
     Q_PROPERTY(bool fullScreen READ getFullScreen)
     Q_OBJECT
 public:
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
     MainWidget(QList<QPair<QString, QString>> &argument);
-    ~MainWidget();
+#else
+    MainWidget(QPair<QStringList, QStringList> &argument);
+#endif
+    ~MainWidget() final;
 private slots:
     void detachFromPipe();
 
@@ -122,7 +126,7 @@ private slots:
 private:
     void savePlistHelper(const QString &, const QString &, bool);
 
-    QMenu *createPopupMenu() override;
+    QMenu *createPopupMenu() override final;
 
     void showToolBar(bool);
     void hideDocks();
@@ -135,17 +139,17 @@ private:
     void setWindowsTaskBarFeatures();
 #endif
 
-    void keyPressEvent(QKeyEvent *) override;
-    void mouseMoveEvent(QMouseEvent *) override;
-    void leaveEvent(QEvent *) override;
-    void closeEvent(QCloseEvent *) override;
-    void moveEvent(QMoveEvent *) override;
-    void showEvent(QShowEvent *) override;
-    void hideEvent(QHideEvent *) override;
+    void keyPressEvent(QKeyEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void leaveEvent(QEvent *) override final;
+    void closeEvent(QCloseEvent *) override final;
+    void moveEvent(QMoveEvent *) override final;
+    void showEvent(QShowEvent *) override final;
+    void hideEvent(QHideEvent *) override final;
 
-    bool eventFilter(QObject *obj, QEvent *event) override;
+    bool eventFilter(QObject *obj, QEvent *event) override final;
 
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     void fileOpenTimerTimeout();
 
     QTimer fileOpenTimer;
diff --git src/gui/MenuBar.cpp src/gui/MenuBar.cpp
index b3ea2162..f4a0723e 100644
--- src/gui/MenuBar.cpp
+++ src/gui/MenuBar.cpp
@@ -366,7 +366,7 @@ MenuBar::Playback::VideoFilters::VideoFilters(QMenu *parent) :
     widgetAction->setDefaultWidget(QMPlay2GUI.videoAdjustment);
     QMPlay2GUI.videoAdjustment->setObjectName(videoAdjustmentMenu->title().remove('&'));
     videoAdjustmentMenu->addAction(widgetAction);
-#ifdef Q_OS_MACOS
+#if defined(Q_OS_MACOS) && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     // Update visibility and update geometry of video adjustment widget
     connect(videoAdjustmentMenu, &VideoFilters::aboutToShow, [] {
         QWidget *parent = QMPlay2GUI.videoAdjustment->parentWidget();
diff --git src/gui/OSDSettingsW.cpp src/gui/OSDSettingsW.cpp
index 7b988cbd..bf7f66d4 100644
--- src/gui/OSDSettingsW.cpp
+++ src/gui/OSDSettingsW.cpp
@@ -38,7 +38,11 @@ static void appendColon(const QObjectList &objects)
 void OSDSettingsW::init(const QString &prefix, int a, int b, int c, int d, int e, int f, double g, double h, const QColor &i, const QColor &j, const QColor &k)
 {
     Settings &QMPSettings = QMPlay2Core.getSettings();
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QMPSettings.init(prefix + "/FontName", QGuiApplication::font().family());
+#else
+    QMPSettings.init(prefix + "/FontName", QFontComboBox().currentText());
+#endif
     QMPSettings.init(prefix + "/FontSize", a);
     QMPSettings.init(prefix + "/Spacing", b);
     QMPSettings.init(prefix + "/LeftMargin", c);
diff --git src/gui/OtherVFiltersW.cpp src/gui/OtherVFiltersW.cpp
index 6d449b42..cfa49a7f 100644
--- src/gui/OtherVFiltersW.cpp
+++ src/gui/OtherVFiltersW.cpp
@@ -37,7 +37,11 @@ OtherVFiltersW::OtherVFiltersW(bool hw) :
         for (const QString &filter : QMPlay2Core.getSettings().getStringList("VideoFilters"))
         {
             videoFilters.first += filter.mid(1);
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
             videoFilters.second += filter.leftRef(1).toInt();
+    #else
+            videoFilters.second += filter.left(1).toInt();
+    #endif
         }
 
         for (int i = 0; i < videoFilters.first.count(); ++i)
diff --git src/gui/PlayClass.cpp src/gui/PlayClass.cpp
index 1138db76..9a311304 100644
--- src/gui/PlayClass.cpp
+++ src/gui/PlayClass.cpp
@@ -33,10 +33,19 @@
 #include <Decoder.hpp>
 #include <Reader.hpp>
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+	#define USE_QRAWFONT
+#endif
+
+#ifdef USE_QRAWFONT
+	#include <QRawFont>
+#else
+	#include <QFontDatabase>
+#endif
+
 #include <QCoreApplication>
 #include <QInputDialog>
 #include <QMessageBox>
-#include <QRawFont>
 #include <QAction>
 #include <QDir>
 
@@ -208,6 +217,9 @@ void PlayClass::play(const QString &_url)
 
             paused = false;
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+            QMPlay2Core.setVideoDevicePixelRatio();
+#endif
             demuxThr->start();
         }
     }
@@ -217,6 +229,7 @@ void PlayClass::play(const QString &_url)
         stop();
     }
 }
+
 void PlayClass::stop(bool _quitApp)
 {
     quitApp = _quitApp;
@@ -245,6 +258,7 @@ void PlayClass::stop(bool _quitApp)
         stopPauseMutex.unlock();
     }
 }
+
 void PlayClass::restart()
 {
     if (!url.isEmpty())
@@ -280,6 +294,7 @@ void PlayClass::togglePause()
         stopPauseMutex.unlock();
     }
 }
+
 void PlayClass::seek(double pos, bool allowAccurate)
 {
     if (pos < 0.0)
@@ -303,13 +318,15 @@ void PlayClass::seek(double pos, bool allowAccurate)
             demuxThr->seek(false);
         demuxThr->seekMutex.unlock();
     }
-    emit QMPlay2Core.seeked(pos); //Signal for MPRIS2
+    emit QMPlay2Core.seeked(pos); // Signal for MPRIS2
     fillBufferB = true;
     if (aThr && paused)
         aThr->silence(true, true);
 }
+
 void PlayClass::chStream(const QString &s)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     if (s.startsWith("audio"))
         chosenAudioStream = s.rightRef(s.length() - 5).toInt();
     else if (s.startsWith("video"))
@@ -322,9 +339,23 @@ void PlayClass::chStream(const QString &s)
         if (fileSubsList.count() > idx)
             loadSubsFile(fileSubsList[idx]);
     }
+#else
+    if (s.startsWith("audio"))
+        chosenAudioStream = s.right(s.length() - 5).toInt();
+    else if (s.startsWith("video"))
+        chosenVideoStream = s.right(s.length() - 5).toInt();
+    else if (s.startsWith("subtitles"))
+        chosenSubtitlesStream = s.right(s.length() - 9).toInt();
+    else if (s.startsWith("fileSubs"))
+    {
+        int idx = s.right(s.length() - 8).toInt();
+        if (fileSubsList.count() > idx)
+            loadSubsFile(fileSubsList[idx]);
+    }
+#endif
     else
     {
-        //TODO: What if one of type will not be found in next program?
+        // TODO: What if one of type will not be found in next program?
         chosenAudioStream = -1;
         chosenVideoStream = -1;
         chosenSubtitlesStream = -1;
@@ -401,9 +432,20 @@ void PlayClass::loadSubsFile(const QString &fileName)
                     {
                         const QByteArray fontData = f.readAll();
                         f.close();
+#ifdef USE_QRAWFONT
                         const QString fontName = QRawFont(fontData, 0.0).familyName();
                         if (!fontName.isEmpty())
                             ass->addFont(fontName.toUtf8(), fontData);
+#else // For Qt older than 5.0
+                        const int fontID = QFontDatabase::addApplicationFontFromData(fontData);
+                        if (fontID != -1)
+                        {
+                            const QStringList fontFamilies = QFontDatabase::applicationFontFamilies(fontID);
+                            QFontDatabase::removeApplicationFont(fontID);
+                            if (!fontFamilies.isEmpty())
+                                ass->addFont(fontFamilies.first().toUtf8(), fontData);
+                        }
+#endif
                     }
                 }
 
@@ -735,15 +777,27 @@ void PlayClass::videoResized(int w, int h)
     videoWinH = h;
 }
 
-void PlayClass::videoAdjustmentChanged(const QString &osdText)
+// MOC is stupid.
+// #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+// void PlayClass::videoAdjustmentChanged(const QString &osdText)
+// {
+//     if (vThr)
+//     {
+//         vThr->setVideoAdjustment();
+//         vThr->processParams();
+//         messageAndOSD(osdText);
+//     }
+// }
+// #else
+void PlayClass::videoAdjustmentChanged()
 {
     if (vThr)
     {
         vThr->setVideoAdjustment();
         vThr->processParams();
-        messageAndOSD(osdText);
     }
 }
+// #endif
 
 void PlayClass::setAB()
 {
diff --git src/gui/PlayClass.hpp src/gui/PlayClass.hpp
index 41e4e629..e8aeb9c8 100644
--- src/gui/PlayClass.hpp
+++ src/gui/PlayClass.hpp
@@ -44,7 +44,7 @@ enum
     SEEK_REPEAT = -3
 };
 
-class PlayClass final : public QObject
+class PlayClass : public QObject
 {
     Q_OBJECT
     friend class DemuxerThr;
@@ -53,7 +53,7 @@ class PlayClass final : public QObject
     friend class AudioThr;
 public:
     PlayClass();
-    ~PlayClass();
+    ~PlayClass() final;
 
     Q_SLOT void play(const QString &);
     Q_SLOT void stop(bool quitApp = false);
@@ -170,7 +170,12 @@ private slots:
     void settingsChanged(int, bool);
     void videoResized(int, int);
 
-    void videoAdjustmentChanged(const QString &osdText);
+// MOC is stupid.
+// #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+//     void videoAdjustmentChanged(const QString &osdText);
+// #else
+    void videoAdjustmentChanged();
+// #endif
 
     void setAB();
     void speedUp();
diff --git src/gui/PlaylistDock.cpp src/gui/PlaylistDock.cpp
index f2872ab0..4e5e01f6 100644
--- src/gui/PlaylistDock.cpp
+++ src/gui/PlaylistDock.cpp
@@ -56,7 +56,9 @@ PlaylistDock::PlaylistDock() :
 
     connect(list, SIGNAL(itemDoubleClicked(QTreeWidgetItem *, int)), this, SLOT(itemDoubleClicked(QTreeWidgetItem *)));
     connect(list, SIGNAL(returnItem(QTreeWidgetItem *)), this, SLOT(addAndPlay(QTreeWidgetItem *)));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(list, &PlaylistWidget::itemExpanded, this, &PlaylistDock::maybeDoQuickSync, Qt::QueuedConnection); // Must be queued to not crash at startup in some cases
+#endif
     connect(list, SIGNAL(visibleItemsCount(int)), this, SLOT(visibleItemsCount(int)));
     connect(list, SIGNAL(addStatus(bool)), findE, SLOT(setDisabled(bool)));
     connect(findE, SIGNAL(textChanged(const QString &)), this, SLOT(findItems(const QString &)));
diff --git src/gui/PlaylistWidget.cpp src/gui/PlaylistWidget.cpp
index 87164c7c..8497d5bb 100644
--- src/gui/PlaylistWidget.cpp
+++ src/gui/PlaylistWidget.cpp
@@ -57,6 +57,7 @@ static inline MenuBar::Playlist *playlistMenu()
     return QMPlay2GUI.menuBar->playlist;
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
 /* PlaylistItem class */
 class PlaylistItem : public QTreeWidgetItem
 {
@@ -70,6 +71,7 @@ public:
         return QTreeWidgetItem::operator <(other);
     }
 };
+#endif
 
 /* UpdateEntryThr class */
 UpdateEntryThr::UpdateEntryThr(PlaylistWidget &pLW) :
@@ -595,7 +597,11 @@ PlaylistWidget::PlaylistWidget() :
     setAnimated(true);
     header()->setStretchLastSection(false);
     setHeaderHidden(true);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     header()->setSectionResizeMode(0, QHeaderView::Stretch);
+#else
+    header()->setResizeMode(0, QHeaderView::Stretch);
+#endif
     header()->hideSection(1);
     setItemsResizeToContents(true);
     setIconSize({22, 22});
@@ -608,7 +614,9 @@ PlaylistWidget::PlaylistWidget() :
     connect(&animationTimer, SIGNAL(timeout()), this, SLOT(animationUpdate()));
     connect(&addTimer, SIGNAL(timeout()), this, SLOT(addTimerElapsed()));
     connect(&addThr, SIGNAL(status(bool)), this, SIGNAL(addStatus(bool)));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(playlistMenu(), &MenuBar::Playlist::aboutToShow, this, &PlaylistWidget::createExtensionsMenu);
+#endif
 }
 
 QString PlaylistWidget::getUrl(QTreeWidgetItem *tWI) const
@@ -622,7 +630,11 @@ void PlaylistWidget::setItemsResizeToContents(bool b)
 {
     const QHeaderView::ResizeMode rm = b ? QHeaderView::ResizeToContents : QHeaderView::Fixed;
     for (int i = 1; i <= 2; ++i)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         header()->setSectionResizeMode(i, rm);
+#else
+        header()->setResizeMode(i, rm);
+#endif
 }
 
 void PlaylistWidget::sortCurrentGroup(int column, Qt::SortOrder sortOrder)
@@ -915,7 +927,11 @@ void PlaylistWidget::setEntryFont(QTreeWidgetItem *tWI, const int flags)
 
 QTreeWidgetItem *PlaylistWidget::newGroup(const QString &name, const QString &url, QTreeWidgetItem *parent, int insertChildAt, QStringList *existingEntries)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QTreeWidgetItem *tWI = new PlaylistItem;
+#else
+    QTreeWidgetItem *tWI = new QTreeWidgetItem;
+#endif
 
     tWI->setFlags(tWI->flags() | Qt::ItemIsEditable);
     QMPlay2GUI.setTreeWidgetItemIcon(tWI, url.isEmpty() ? *QMPlay2GUI.groupIcon : *QMPlay2GUI.folderIcon, 0, this);
@@ -930,7 +946,11 @@ QTreeWidgetItem *PlaylistWidget::newGroup(const QString &name, const QString &ur
 }
 QTreeWidgetItem *PlaylistWidget::newEntry(const Playlist::Entry &entry, QTreeWidgetItem *parent, const Functions::DemuxersInfo &demuxersInfo, int insertChildAt, QStringList *existingEntries)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QTreeWidgetItem *tWI = new PlaylistItem;
+#else
+    QTreeWidgetItem *tWI = new QTreeWidgetItem;
+#endif
 
     QIcon icon;
     Functions::getDataIfHasPluginPrefix(entry.url, nullptr, nullptr, &icon, nullptr, demuxersInfo);
diff --git src/gui/PlaylistWidget.hpp src/gui/PlaylistWidget.hpp
index 1f20e523..3c73b6ad 100644
--- src/gui/PlaylistWidget.hpp
+++ src/gui/PlaylistWidget.hpp
@@ -34,7 +34,7 @@ class QTreeWidgetItem;
 class PlaylistWidget;
 class Demuxer;
 
-class UpdateEntryThr final : public QThread
+class UpdateEntryThr : public QThread
 {
     Q_OBJECT
 
@@ -51,7 +51,7 @@ public:
     }
 
 private:
-    void run() override;
+    void run() override final;
 
     QAtomicInt pendingUpdates;
     IOController<> ioCtrl;
@@ -84,7 +84,7 @@ private slots:
     void finished();
 };
 
-class AddThr final : public QThread
+class AddThr : public QThread
 {
     Q_OBJECT
 public:
@@ -101,7 +101,7 @@ private slots:
     void modifyItemFlags(QTreeWidgetItem *tWI, int flags);
     void deleteTreeWidgetItem(QTreeWidgetItem *tWI);
 private:
-    void run() override;
+    void run() override final;
 
     bool add(const QStringList &urls, QTreeWidgetItem *parent, const Functions::DemuxersInfo &demuxersInfo, QStringList *existingEntries = nullptr, bool loadList = false);
     QTreeWidgetItem *insertPlaylistEntries(const Playlist::Entries &entries, QTreeWidgetItem *parent, const Functions::DemuxersInfo &demuxersInfo, int insertChildAt, QStringList *existingEntries);
@@ -120,7 +120,7 @@ signals:
     void status(bool s);
 };
 
-class PlaylistWidget final : public QTreeWidget
+class PlaylistWidget : public QTreeWidget
 {
     friend class AddThr;
     friend class UpdateEntryThr;
@@ -196,12 +196,12 @@ private:
 
     void createExtensionsMenu();
 
-    void mouseMoveEvent(QMouseEvent *) override;
-    void dragEnterEvent(QDragEnterEvent *) override;
-    void dragMoveEvent(QDragMoveEvent *) override;
-    void dropEvent(QDropEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    void scrollContentsBy(int dx, int dy) override;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void dragEnterEvent(QDragEnterEvent *) override final;
+    void dragMoveEvent(QDragMoveEvent *) override final;
+    void dropEvent(QDropEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    void scrollContentsBy(int dx, int dy) override final;
 
     QRect getArcRect(int size);
 
diff --git src/gui/SettingsWidget.cpp src/gui/SettingsWidget.cpp
index d5b5a702..cf777918 100644
--- src/gui/SettingsWidget.cpp
+++ src/gui/SettingsWidget.cpp
@@ -26,7 +26,11 @@
 #include <Notifies.hpp>
 #include <Main.hpp>
 
-#include <QStandardPaths>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QStandardPaths>
+#else
+    #include <QDesktopServices>
+#endif
 #include <QStyleFactory>
 #include <QRadioButton>
 #include <QApplication>
@@ -124,7 +128,11 @@ void SettingsWidget::InitSettings()
 
     QMPSettings.init("AudioLanguage", QString());
     QMPSettings.init("SubtitlesLanguage", QString());
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QMPSettings.init("screenshotPth", QStandardPaths::standardLocations(QStandardPaths::PicturesLocation).value(0, QDir::homePath()));
+#else
+    QMPSettings.init("screenshotPth", QDesktopServices::storageLocation(QDesktopServices::PicturesLocation));
+#endif
 #ifdef Q_OS_WIN
     QMPSettings.init("screenshotFormat", ".bmp");
 #else
@@ -450,6 +458,7 @@ SettingsWidget::SettingsWidget(int page, const QString &moduleName, QWidget *vid
         page2->wheelSeekB->setChecked(QMPSettings.getBool("WheelSeek"));
         page2->wheelVolumeB->setChecked(QMPSettings.getBool("WheelVolume"));
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         page2->storeARatioAndZoomB->setChecked(QMPSettings.getBool("StoreARatioAndZoom"));
         connect(page2->storeARatioAndZoomB, &QCheckBox::toggled, this, [this](bool checked) {
             if (checked)
@@ -474,6 +483,7 @@ SettingsWidget::SettingsWidget(int page, const QString &moduleName, QWidget *vid
                 page2->storeARatioAndZoomB->setChecked(false);
             }
         });
+#endif
 
         page2->showBufferedTimeOnSlider->setChecked(QMPSettings.getBool("ShowBufferedTimeOnSlider"));
         page2->savePos->setChecked(QMPSettings.getBool("SavePos"));
@@ -677,7 +687,11 @@ void SettingsWidget::applyProxy()
     Settings &QMPSettings = QMPlay2Core.getSettings();
     if (!QMPSettings.getBool("Proxy/Use"))
     {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         qunsetenv("http_proxy");
+#else
+        unsetenv("http_proxy");
+#endif
     }
     else
     {
@@ -700,7 +714,11 @@ void SettingsWidget::applyProxy()
             auth += '@';
             proxyEnv.insert(7, auth);
         }
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         qputenv("http_proxy", proxyEnv.toLocal8Bit());
+#else
+        setenv("http_proxy", proxyEnv.toLocal8Bit(), true);
+#endif
     }
 }
 
diff --git src/gui/SettingsWidget.hpp src/gui/SettingsWidget.hpp
index b36ac00c..12257f53 100644
--- src/gui/SettingsWidget.hpp
+++ src/gui/SettingsWidget.hpp
@@ -35,7 +35,7 @@ namespace Ui {
     class ModulesList;
 }
 
-class SettingsWidget final : public QWidget
+class SettingsWidget : public QWidget
 {
     Q_OBJECT
 public:
@@ -44,7 +44,7 @@ public:
     static void SetAudioChannels(int chn);
 
     SettingsWidget(int page, const QString &module, QWidget *videoEq);
-    ~SettingsWidget();
+    ~SettingsWidget() final;
 
     void setAudioChannels();
 private:
@@ -56,8 +56,8 @@ private:
 
     inline QString getSelectedProfile();
 
-    void showEvent(QShowEvent *) override;
-    void closeEvent(QCloseEvent *) override;
+    void showEvent(QShowEvent *) override final;
+    void closeEvent(QCloseEvent *) override final;
 
     Ui::GeneralSettings *page1;
     Ui::PlaybackSettings *page2;
diff --git src/gui/ShortcutHandler.hpp src/gui/ShortcutHandler.hpp
index 1723eb78..ad140325 100644
--- src/gui/ShortcutHandler.hpp
+++ src/gui/ShortcutHandler.hpp
@@ -23,23 +23,23 @@
 
 class QAction;
 
-class ShortcutHandler final : public QAbstractTableModel
+class ShortcutHandler : public QAbstractTableModel
 {
     Q_DECLARE_TR_FUNCTIONS(ShortcutHandler)
 
 public:
     ShortcutHandler(QObject *parent);
-    ~ShortcutHandler();
+    ~ShortcutHandler() final;
 
-    int columnCount(const QModelIndex &parent) const override;
-    int rowCount(const QModelIndex &parent) const override;
+    int columnCount(const QModelIndex &parent) const override final;
+    int rowCount(const QModelIndex &parent) const override final;
 
-    Qt::ItemFlags flags(const QModelIndex &index) const override;
+    Qt::ItemFlags flags(const QModelIndex &index) const override final;
 
-    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;
+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override final;
 
-    QVariant data(const QModelIndex &index, int role) const override;
-    bool setData(const QModelIndex &index, const QVariant &value, int role) override;
+    QVariant data(const QModelIndex &index, int role) const override final;
+    bool setData(const QModelIndex &index, const QVariant &value, int role) override final;
 
     void appendAction(QAction *action, const QString &settingsName, const QString &defaultShortcut);
 
diff --git src/gui/TagEditor.hpp src/gui/TagEditor.hpp
index 24edcf0e..283c1497 100644
--- src/gui/TagEditor.hpp
+++ src/gui/TagEditor.hpp
@@ -29,12 +29,12 @@ class QLineEdit;
 class QSpinBox;
 class QLabel;
 
-class PictureW final : public QWidget
+class PictureW : public QWidget
 {
 public:
     PictureW(TagLib::ByteVector &picture);
 private:
-    void paintEvent(QPaintEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
 
     TagLib::ByteVector &picture;
 };
@@ -44,7 +44,7 @@ class TagEditor : public QGroupBox
     Q_OBJECT
 public:
     TagEditor();
-    ~TagEditor();
+    ~TagEditor() final;
 
     bool open(const QString &fileName);
     void clear();
diff --git src/gui/Unix/ScreenSaver.cpp src/gui/Unix/ScreenSaver.cpp
index 4d5f8bdb..0bfba53b 100644
--- src/gui/Unix/ScreenSaver.cpp
+++ src/gui/Unix/ScreenSaver.cpp
@@ -20,7 +20,10 @@
 
 #if defined(Q_OS_UNIX) && !defined(Q_OS_MACOS) && !defined(Q_OS_ANDROID)
 
-#include <QGuiApplication>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QGuiApplication>
+#endif
+
 #include <QLibrary>
 
 class ScreenSaverPriv : public QObject
@@ -91,8 +94,10 @@ private:
 ScreenSaver::ScreenSaver() :
     m_priv(new ScreenSaverPriv)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     if (QGuiApplication::platformName() == "xcb")
         m_priv->load();
+#endif
 }
 ScreenSaver::~ScreenSaver()
 {
diff --git src/gui/Updater.hpp src/gui/Updater.hpp
index 027ce819..a18d1158 100644
--- src/gui/Updater.hpp
+++ src/gui/Updater.hpp
@@ -30,7 +30,7 @@
     class QLabel;
 #endif
 
-class Updater final : public
+class Updater : public
 #ifdef UPDATER
     QDialog
 #else
@@ -45,7 +45,7 @@ public:
 #else
     Updater(QObject *parent);
 #endif
-    ~Updater();
+    ~Updater() final;
 
 #ifdef UPDATER
     bool downloading() const;
diff --git src/gui/VideoAdjustmentW.cpp src/gui/VideoAdjustmentW.cpp
index d3f71cca..b4bbfec9 100644
--- src/gui/VideoAdjustmentW.cpp
+++ src/gui/VideoAdjustmentW.cpp
@@ -18,15 +18,20 @@
 
 #include <VideoAdjustmentW.hpp>
 
-#include <ShortcutHandler.hpp>
 #include <ModuleParams.hpp>
 #include <Settings.hpp>
 #include <Slider.hpp>
-#include <Main.hpp>
+
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <ShortcutHandler.hpp>
+    #include <Main.hpp>
+    #include <QAction>
+#else
+    #include <QVariant>
+#endif
 
 #include <QGridLayout>
 #include <QPushButton>
-#include <QAction>
 #include <QLabel>
 
 enum CONTROLS
@@ -46,9 +51,12 @@ constexpr const char *g_controlsNames[CONTROLS_COUNT] = {
     QT_TRANSLATE_NOOP("VideoAdjustmentW", "Hue"),
     QT_TRANSLATE_NOOP("VideoAdjustmentW", "Sharpness")
 };
-constexpr int g_step = 5;
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    constexpr int g_step = 5;
+#endif
 
 VideoAdjustmentW::VideoAdjustmentW()
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
 {
     QGridLayout *layout = new QGridLayout;
 
@@ -106,35 +114,106 @@ VideoAdjustmentW::VideoAdjustmentW()
 
     setLayout(layout);
 }
+#else
+    : m_sliders(new Slider[CONTROLS_COUNT])
+{
+    QGridLayout *layout = new QGridLayout;
+    int i;
+    for (i = 0; i < CONTROLS_COUNT; ++i)
+    {
+
+        QLabel *titleL = new QLabel(tr(g_controlsNames[i]) + ": ");
+        titleL->setAlignment(Qt::AlignRight);
+
+        QLabel *valueL = new QLabel("0");
+
+        Slider *slider = &m_sliders[i];
+        slider->setProperty("valueL", qVariantFromValue((void *)valueL));
+        slider->setTickPosition(QSlider::TicksBelow);
+        slider->setMinimumWidth(50);
+        slider->setTickInterval(25);
+        slider->setRange(-100, 100);
+        slider->setWheelStep(1);
+        slider->setValue(0);
+        connect(slider, SIGNAL(valueChanged(int)), this, SLOT(setValue(int)));
+
+        layout->addWidget(titleL, i, 0);
+        layout->addWidget(slider, i, 1);
+        layout->addWidget(valueL, i, 2);
+    }
+
+    QPushButton *resetB = new QPushButton(tr("Reset"));
+    connect(resetB, SIGNAL(clicked()), this, SLOT(reset()));
+
+    layout->addWidget(resetB, i++, 0, 1, 3);
+    layout->addItem(new QSpacerItem(40, 0, QSizePolicy::Maximum, QSizePolicy::Minimum), i, 2);
+
+    setLayout(layout);
+}
+#endif
+
 VideoAdjustmentW::~VideoAdjustmentW()
-{}
+{
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    delete[] m_sliders;
+#endif
+}
 
 void VideoAdjustmentW::restoreValues()
 {
     for (int i = 0; i < CONTROLS_COUNT; ++i)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         m_sliders[i]->setValue(QMPlay2Core.getSettings().getInt(QString("VideoAdjustment/") + g_controlsNames[i]));
+#else
+        m_sliders[i].setValue(QMPlay2Core.getSettings().getInt(QString("VideoAdjustment/") + g_controlsNames[i]));
+#endif
 }
 void VideoAdjustmentW::saveValues()
 {
     for (int i = 0; i < CONTROLS_COUNT; ++i)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         QMPlay2Core.getSettings().set(QString("VideoAdjustment/") + g_controlsNames[i], m_sliders[i]->value());
+#else
+        QMPlay2Core.getSettings().set(QString("VideoAdjustment/") + g_controlsNames[i], m_sliders[i].value());
+#endif
 }
 
 void VideoAdjustmentW::setModuleParam(ModuleParams *writer)
 {
     for (int i = 0; i < CONTROLS_COUNT; ++i)
     {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         m_sliders[i]->setEnabled(writer->hasParam(g_controlsNames[i]));
         writer->modParam(g_controlsNames[i], m_sliders[i]->value());
+#else
+        m_sliders[i].setEnabled(writer->hasParam(g_controlsNames[i]));
+        writer->modParam(g_controlsNames[i], m_sliders[i].value());
+#endif
     }
 }
 
 void VideoAdjustmentW::enableControls()
 {
     for (int i = 0; i < CONTROLS_COUNT; ++i)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         m_sliders[i]->setEnabled(true);
+#else
+        m_sliders[i].setEnabled(true);
+#endif
+}
+
+void VideoAdjustmentW::setValue(int v)
+{
+    ((QLabel *)sender()->property("valueL").value<void *>())->setText(QString::number(v));
+    emit videoAdjustmentChanged();
+}
+void VideoAdjustmentW::reset()
+{
+    for (int i = 0; i < CONTROLS_COUNT; ++i)
+        m_sliders[i].setValue(0);
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
 void VideoAdjustmentW::setKeyShortcuts()
 {
     ShortcutHandler *shortcuts = QMPlay2GUI.shortcutHandler;
@@ -171,3 +250,4 @@ void VideoAdjustmentW::addActionsToWidget(QWidget *w)
     }
     w->addAction(m_resetAction);
 }
+#endif
diff --git src/gui/VideoAdjustmentW.hpp src/gui/VideoAdjustmentW.hpp
index 419ebb01..4fbc1998 100644
--- src/gui/VideoAdjustmentW.hpp
+++ src/gui/VideoAdjustmentW.hpp
@@ -20,20 +20,22 @@
 
 #include <QWidget>
 
-#include <vector>
-#include <array>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <vector>
+    #include <array>
+#endif
 
 class ModuleParams;
 class QAction;
 class Slider;
 
-class VideoAdjustmentW final : public QWidget
+class VideoAdjustmentW : public QWidget
 {
     Q_OBJECT
 
 public:
     VideoAdjustmentW();
-    ~VideoAdjustmentW();
+    ~VideoAdjustmentW() final;
 
     void restoreValues();
     void saveValues();
@@ -41,14 +43,29 @@ public:
     void setModuleParam(ModuleParams *writer);
     void enableControls();
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     void setKeyShortcuts();
     void addActionsToWidget(QWidget *w);
+#endif
 
 signals:
-    void videoAdjustmentChanged(const QString &osdText);
+// MOC is stupid.
+// #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+//     void videoAdjustmentChanged(const QString &osdText);
+// #else
+    void videoAdjustmentChanged();
+// #endif
+
+private slots:
+	void setValue(int);
+	void reset();
 
 private:
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     std::vector<Slider *> m_sliders;
     std::vector<std::array<QAction *, 2>> m_actions;
     QAction *m_resetAction = nullptr;
+#else
+    Slider *m_sliders;
+#endif
 };
diff --git src/gui/VideoDock.cpp src/gui/VideoDock.cpp
index 74485f76..5444906d 100644
--- src/gui/VideoDock.cpp
+++ src/gui/VideoDock.cpp
@@ -18,7 +18,9 @@
 
 #include <VideoDock.hpp>
 
-#include <VideoAdjustmentW.hpp>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <VideoAdjustmentW.hpp>
+#endif
 #include <Settings.hpp>
 #include <MenuBar.hpp>
 #include <Main.hpp>
@@ -69,7 +71,9 @@ VideoDock::VideoDock() :
         addAction(act);
     for (QAction *act : QMPlay2GUI.menuBar->help->actions())
         addAction(act);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QMPlay2GUI.videoAdjustment->addActionsToWidget(this);
+#endif
     /**/
 
     setMouseTracking(true);
@@ -88,10 +92,14 @@ VideoDock::VideoDock() :
     connect(&iDW, SIGNAL(resized(int, int)), this, SLOT(resizedIDW(int, int)));
     connect(&iDW, SIGNAL(hasCoverImage(bool)), this, SLOT(hasCoverImage(bool)));
     connect(this, SIGNAL(visibilityChanged(bool)), this, SLOT(visibilityChanged(bool)));
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(&QMPlay2Core, &QMPlay2CoreClass::dockVideo, this, [this](QWidget *w) {
         iDW.setWidget(w);
         mouseMoveEvent(nullptr);
     });
+#else
+    connect(&QMPlay2Core, SIGNAL(dockVideo(QWidget *)), &iDW, SLOT(setWidget(QWidget *)));
+#endif
 
     if ((isBreeze = QApplication::style()->objectName() == "breeze"))
         setStyle(&commonStyle);
diff --git src/gui/VideoDock.hpp src/gui/VideoDock.hpp
index bd26b3f9..d50dba18 100644
--- src/gui/VideoDock.hpp
+++ src/gui/VideoDock.hpp
@@ -26,7 +26,7 @@
 
 class QMenu;
 
-class VideoDock final : public DockWidget
+class VideoDock : public DockWidget
 {
     Q_OBJECT
 public:
@@ -49,17 +49,17 @@ private:
 
     void unsetCursor(QWidget *w);
 
-    void dragEnterEvent(QDragEnterEvent *) override;
-    void dropEvent(QDropEvent *) override;
-    void mouseMoveEvent(QMouseEvent *) override;
-    void mouseDoubleClickEvent(QMouseEvent *) override;
-    void mousePressEvent(QMouseEvent *) override;
-    void mouseReleaseEvent(QMouseEvent *) override;
-    void moveEvent(QMoveEvent *) override;
-    void wheelEvent(QWheelEvent *) override;
-    void leaveEvent(QEvent *) override;
-    void enterEvent(QEvent *) override;
-    bool event(QEvent *) override;
+    void dragEnterEvent(QDragEnterEvent *) override final;
+    void dropEvent(QDropEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void mouseDoubleClickEvent(QMouseEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
+    void mouseReleaseEvent(QMouseEvent *) override final;
+    void moveEvent(QMoveEvent *) override final;
+    void wheelEvent(QWheelEvent *) override final;
+    void leaveEvent(QEvent *) override final;
+    void enterEvent(QEvent *) override final;
+    bool event(QEvent *) override final;
 
     QTimer hideCursorTim, leftButtonPlayTim;
     InDockW iDW;
diff --git src/gui/VideoThr.cpp src/gui/VideoThr.cpp
index 83c03089..662d7baa 100644
--- src/gui/VideoThr.cpp
+++ src/gui/VideoThr.cpp
@@ -181,7 +181,11 @@ void VideoThr::initFilters(bool processParams)
     {
         for (QString filterName : QMPSettings.getStringList("VideoFilters"))
         {
-            if (filterName.leftRef(1).toInt()) //if filter is enabled
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+            if (filterName.leftRef(1).toInt()) // if filter is enabled
+#else
+			if (filterName.left(1).toInt()) // if filter is enabled
+#endif
             {
                 VideoFilter *filter = filters.on((filterName = filterName.mid(1)));
                 bool ok = false;
@@ -660,7 +664,11 @@ void VideoThr::screenshot(VideoFrame videoFrame)
             quint16 num = 0;
             for (const QString &f : QDir(dir).entryList({"QMPlay2_snap_?????" + ext}, QDir::Files, QDir::Name))
             {
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
                 const quint16 n = f.midRef(13, 5).toUShort();
+    #else
+                const quint16 n = f.mid(13, 5).toUShort();
+    #endif
                 if (n > num)
                     num = n;
             }
diff --git src/gui/VideoThr.hpp src/gui/VideoThr.hpp
index 728edce8..6713829f 100644
--- src/gui/VideoThr.hpp
+++ src/gui/VideoThr.hpp
@@ -25,16 +25,16 @@
 class QMPlay2OSD;
 class VideoWriter;
 
-class VideoThr final : public AVThread
+class VideoThr : public AVThread
 {
     Q_OBJECT
 public:
     VideoThr(PlayClass &, VideoWriter *, const QStringList &pluginsName = {});
-    ~VideoThr();
+    ~VideoThr() final;
 
-    void stop(bool terminate = false) override;
+    void stop(bool terminate = false) override final;
 
-    bool hasDecoderError() const override;
+    bool hasDecoderError() const override final;
 
     inline VideoWriter *getHWAccelWriter() const
     {
@@ -80,7 +80,7 @@ public:
 private:
     inline VideoWriter *videoWriter() const;
 
-    void run() override;
+    void run() override final;
 
     bool deleteSubs, syncVtoA, doScreenshot, canWrite, deleteOSD, deleteFrame, gotFrameOrError, decoderError;
     double lastSampleAspectRatio;
diff --git src/gui/Windows/ScreenSaver.cpp src/gui/Windows/ScreenSaver.cpp
index a7af4795..75c7736d 100644
--- src/gui/Windows/ScreenSaver.cpp
+++ src/gui/Windows/ScreenSaver.cpp
@@ -27,6 +27,8 @@ static inline bool inhibitScreenSaver(MSG *msg, const bool inhibited)
     return (inhibited && msg->message == WM_SYSCOMMAND && ((msg->wParam & 0xFFF0) == SC_SCREENSAVE || (msg->wParam & 0xFFF0) == SC_MONITORPOWER));
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+
 #include <QAbstractNativeEventFilter>
 
 class ScreenSaverPriv : public QAbstractNativeEventFilter
@@ -63,3 +65,35 @@ void ScreenSaver::unInhibit(int context)
     if (unInhibitHelper(context))
         m_priv->inhibited = false;
 }
+
+#else
+
+static bool inhibited = false;
+static bool eventFilter(void *m, long *)
+{
+    return inhibitScreenSaver((MSG *)m, inhibited);
+}
+
+/**/
+
+ScreenSaver::ScreenSaver() :
+    m_priv(nullptr)
+{
+    qApp->setEventFilter(::eventFilter);
+}
+ScreenSaver::~ScreenSaver()
+{}
+
+void ScreenSaver::inhibit(int context)
+{
+    if (inhibitHelper(context))
+        inhibited = true;
+}
+
+void ScreenSaver::unInhibit(int context)
+{
+    if (unInhibitHelper(context))
+        inhibited = false;
+}
+
+#endif
diff --git src/gui/macOS/QMPlay2MacExtensions.mm src/gui/macOS/QMPlay2MacExtensions.mm
index b10dd49e..5df5339f 100644
--- src/gui/macOS/QMPlay2MacExtensions.mm
+++ src/gui/macOS/QMPlay2MacExtensions.mm
@@ -1,14 +1,18 @@
 #include "QMPlay2MacExtensions.hpp"
+#include <QtGlobal>
 
-#include <QAbstractNativeEventFilter>
-#include <QGuiApplication>
-#include <QWindow>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QAbstractNativeEventFilter>
+    #include <QGuiApplication>
+    #include <QWindow>
+#endif
 
 #include <IOKit/hidsystem/ev_keymap.h>
 #include <AppKit/NSApplication.h>
 #include <AppKit/NSScreen.h>
 #include <AppKit/NSEvent.h>
 
+#if defined(MAC_OS_X_VERSION_10_7) && (MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_7)
 class MediaKeysFilter : public QAbstractNativeEventFilter
 {
 public:
@@ -59,6 +63,7 @@ private:
 
     QMPlay2MacExtensions::MediaKeysCallback m_mediaKeysCallback;
 } static *g_mediaKeysFilter;
+#endif
 
 /**/
 
@@ -71,6 +76,7 @@ void QMPlay2MacExtensions::setApplicationVisible(bool visible)
         [app hide:nil];
 }
 
+#if defined(MAC_OS_X_VERSION_10_7) && (MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_7)
 void QMPlay2MacExtensions::registerMacOSMediaKeys(const MediaKeysCallback &cb)
 {
     if (!g_mediaKeysFilter)
@@ -88,7 +94,9 @@ void QMPlay2MacExtensions::unregisterMacOSMediaKeys()
         g_mediaKeysFilter = nullptr;
     }
 }
+#endif
 
+#if defined(MAC_OS_X_VERSION_10_7) && (MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_7)
 void QMPlay2MacExtensions::showSystemUi(QWindow *mainWindow, bool visible)
 {
 #if defined(MAC_OS_X_VERSION_10_9) && (MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_9)
@@ -102,3 +110,4 @@ void QMPlay2MacExtensions::showSystemUi(QWindow *mainWindow, bool visible)
         flags = NSApplicationPresentationHideDock | NSApplicationPresentationAutoHideMenuBar;
     [NSApp setPresentationOptions:flags];
 }
+#endif
diff --git src/gui/macOS/ScreenSaver.cpp src/gui/macOS/ScreenSaver.cpp
index 0165d5cc..1d73e3e6 100644
--- src/gui/macOS/ScreenSaver.cpp
+++ src/gui/macOS/ScreenSaver.cpp
@@ -20,6 +20,8 @@
 
 #include <IOKit/pwr_mgt/IOPMLib.h>
 
+#include <AvailabilityMacros.h>
+
 #define QMPLAY2_MEDIA_PLAYBACK CFSTR("QMPlay2 media playback")
 
 class ScreenSaverPriv
@@ -32,8 +34,13 @@ public:
 
     inline void inhibit()
     {
-        m_okDisp = (IOPMAssertionCreateWithName(kIOPMAssertPreventUserIdleDisplaySleep, kIOPMAssertionLevelOn, QMPLAY2_MEDIA_PLAYBACK, &m_idDisp) == kIOReturnSuccess);
-        m_okSys  = (IOPMAssertionCreateWithName(kIOPMAssertPreventUserIdleSystemSleep,  kIOPMAssertionLevelOn, QMPLAY2_MEDIA_PLAYBACK, &m_idSys)  == kIOReturnSuccess);
+#if MAC_OS_X_VERSION_MAX_ALLOWED < 1060
+		m_okDisp = (IOPMAssertionCreate(kIOPMAssertionTypeNoDisplaySleep, kIOPMAssertionLevelOn, &m_idDisp) == kIOReturnSuccess);
+		m_okSys  = (IOPMAssertionCreate(kIOPMAssertionTypeNoIdleSleep, kIOPMAssertionLevelOn, &m_idSys)  == kIOReturnSuccess);
+#else
+		m_okDisp = (IOPMAssertionCreateWithName(kIOPMAssertionTypeNoDisplaySleep, kIOPMAssertionLevelOn, QMPLAY2_MEDIA_PLAYBACK, &m_idDisp) == kIOReturnSuccess);
+		m_okSys  = (IOPMAssertionCreateWithName(kIOPMAssertionTypeNoIdleSleep, kIOPMAssertionLevelOn, QMPLAY2_MEDIA_PLAYBACK, &m_idSys) == kIOReturnSuccess);
+#endif
     }
     inline void unInhibit()
     {
diff --git src/modules/ALSA/ALSA.hpp src/modules/ALSA/ALSA.hpp
index 7554dc52..f08ddc69 100644
--- src/modules/ALSA/ALSA.hpp
+++ src/modules/ALSA/ALSA.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class ALSA final : public Module
+class ALSA : public Module
 {
 public:
     ALSA();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -39,13 +39,13 @@ class QDoubleSpinBox;
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB, *autoMultichnB;
     QDoubleSpinBox *delayB;
diff --git src/modules/ALSA/ALSAWriter.hpp src/modules/ALSA/ALSAWriter.hpp
index 08c14a79..1e860862 100644
--- src/modules/ALSA/ALSAWriter.hpp
+++ src/modules/ALSA/ALSAWriter.hpp
@@ -25,25 +25,25 @@
 
 struct _snd_pcm;
 
-class ALSAWriter final : public Writer
+class ALSAWriter : public Writer
 {
     Q_DECLARE_TR_FUNCTIONS(ALSAWriter)
 public:
     ALSAWriter(Module &);
 private:
-    ~ALSAWriter();
+    ~ALSAWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/AudioCD/AudioCD.hpp src/modules/AudioCD/AudioCD.hpp
index 95065ae0..bd19f789 100644
--- src/modules/AudioCD/AudioCD.hpp
+++ src/modules/AudioCD/AudioCD.hpp
@@ -24,19 +24,19 @@
 
 class CDIODestroyTimer;
 
-class AudioCD final : public Module
+class AudioCD : public Module
 {
     Q_OBJECT
 public:
     AudioCD();
-    ~AudioCD();
+    ~AudioCD() final;
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    QList<QAction *> getAddActions() override;
+    QList<QAction *> getAddActions() override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon CD;
 
@@ -52,13 +52,13 @@ class QGridLayout;
 class QGroupBox;
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QGroupBox *audioCDB;
     QCheckBox *useCDDB, *useCDTEXT;
diff --git src/modules/AudioCD/AudioCDDemux.hpp src/modules/AudioCD/AudioCDDemux.hpp
index 3a0c6f3d..d98bc518 100644
--- src/modules/AudioCD/AudioCDDemux.hpp
+++ src/modules/AudioCD/AudioCDDemux.hpp
@@ -26,19 +26,19 @@
 #include <cdio/cdio.h>
 #include <cddb/cddb.h>
 
-class CDIODestroyTimer final : public QObject
+class CDIODestroyTimer : public QObject
 {
     Q_OBJECT
 public:
     CDIODestroyTimer();
-    ~CDIODestroyTimer();
+    ~CDIODestroyTimer() final;
 
     Q_SIGNAL void setInstance(CdIo_t *_cdio, const QString &_device, unsigned _discID);
     CdIo_t *getInstance(const QString &_device, unsigned &_discID);
 private slots:
     void setInstanceSlot(CdIo_t *_cdio, const QString &_device, unsigned _discID);
 private:
-    void timerEvent(QTimerEvent *e) override;
+    void timerEvent(QTimerEvent *e) override final;
 
     QAtomicInt timerId;
     CdIo_t *cdio;
@@ -48,7 +48,7 @@ private:
 
 /**/
 
-class AudioCDDemux final : public Demuxer
+class AudioCDDemux : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(AudioCDDemux)
 public:
@@ -56,23 +56,23 @@ public:
 
     AudioCDDemux(Module &, CDIODestroyTimer &destroyTimer);
 private:
-    ~AudioCDDemux();
+    ~AudioCDDemux() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int & ) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int & ) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     /**/
 
diff --git src/modules/AudioFilters/AudioFilters.hpp src/modules/AudioFilters/AudioFilters.hpp
index 6823f625..02d3d1c1 100644
--- src/modules/AudioFilters/AudioFilters.hpp
+++ src/modules/AudioFilters/AudioFilters.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class AudioFilters final : public Module
+class AudioFilters : public Module
 {
 public:
     AudioFilters();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -41,7 +41,7 @@ class QComboBox;
 class QSpinBox;
 class Slider;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
 public:
@@ -55,7 +55,7 @@ private slots:
     void compressor();
     void defaultSettings();
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     bool restoringDefault;
 
diff --git src/modules/AudioFilters/BS2B.hpp src/modules/AudioFilters/BS2B.hpp
index f62e4235..00822620 100644
--- src/modules/AudioFilters/BS2B.hpp
+++ src/modules/AudioFilters/BS2B.hpp
@@ -22,17 +22,17 @@
 
 #include <bs2b/bs2b.hpp>
 
-class BS2B final : public AudioFilter
+class BS2B : public AudioFilter
 {
 public:
     BS2B(Module &module);
-    ~BS2B();
+    ~BS2B() final;
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint srate) override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar, uint srate) override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     void alloc();
 
diff --git src/modules/AudioFilters/DysonCompressor.hpp src/modules/AudioFilters/DysonCompressor.hpp
index 2f2b086f..69409429 100644
--- src/modules/AudioFilters/DysonCompressor.hpp
+++ src/modules/AudioFilters/DysonCompressor.hpp
@@ -25,19 +25,19 @@
 #define NFILT  12
 #define NEFILT 17
 
-class DysonCompressor final : public AudioFilter
+class DysonCompressor : public AudioFilter
 {
 public:
     DysonCompressor(Module &module);
-    ~DysonCompressor();
+    ~DysonCompressor() final;
 
-    bool set() override;
+    bool set() override final;
 
 private:
-    bool setAudioParameters(uchar chn, uint srate) override;
-    int bufferedSamples() const override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar chn, uint srate) override final;
+    int bufferedSamples() const override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     using FloatVector = QVector<float>;
 
diff --git src/modules/AudioFilters/Echo.hpp src/modules/AudioFilters/Echo.hpp
index c418ec3c..5ad34e3e 100644
--- src/modules/AudioFilters/Echo.hpp
+++ src/modules/AudioFilters/Echo.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class Echo final : public AudioFilter
+class Echo : public AudioFilter
 {
 public:
     Echo(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     void alloc(bool);
 
diff --git src/modules/AudioFilters/Equalizer.hpp src/modules/AudioFilters/Equalizer.hpp
index 7c8d9665..f6b79283 100644
--- src/modules/AudioFilters/Equalizer.hpp
+++ src/modules/AudioFilters/Equalizer.hpp
@@ -23,7 +23,7 @@
 struct FFTContext;
 struct FFTComplex;
 
-class Equalizer final : public AudioFilter
+class Equalizer : public AudioFilter
 {
 public:
     static QVector<float> interpolate(const QVector<float> &, const int);
@@ -31,14 +31,14 @@ public:
     static float getAmpl(int val);
 
     Equalizer(Module &);
-    ~Equalizer();
+    ~Equalizer() final;
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    int bufferedSamples() const override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar, uint) override final;
+    int bufferedSamples() const override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     /**/
 
diff --git src/modules/AudioFilters/EqualizerGUI.hpp src/modules/AudioFilters/EqualizerGUI.hpp
index eb48d902..52aa4293 100644
--- src/modules/AudioFilters/EqualizerGUI.hpp
+++ src/modules/AudioFilters/EqualizerGUI.hpp
@@ -20,7 +20,7 @@
 
 #include <QMPlay2Extensions.hpp>
 
-class GraphW final : public QWidget
+class GraphW : public QWidget
 {
 public:
     GraphW();
@@ -31,7 +31,7 @@ public:
         values.resize(vals);
     }
 private:
-    void paintEvent(QPaintEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
 
     QVector<float> values;
     float preamp;
@@ -44,15 +44,15 @@ class QCheckBox;
 class QSlider;
 class QMenu;
 
-class EqualizerGUI final : public QWidget, public QMPlay2Extensions
+class EqualizerGUI : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 public:
     EqualizerGUI(Module &);
 
-    bool set() override;
+    bool set() override final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 private slots:
     void wallpaperChanged(bool hasWallpaper, double alpha);
     void enabled(bool);
@@ -80,7 +80,7 @@ private:
 
     void loadPresets();
 
-    void showEvent(QShowEvent *event) override;
+    void showEvent(QShowEvent *event) override final;
 
     QMap<int, int> getPresetValues(const QString &name);
 
diff --git src/modules/AudioFilters/PhaseReverse.hpp src/modules/AudioFilters/PhaseReverse.hpp
index 470aad80..59fe4456 100644
--- src/modules/AudioFilters/PhaseReverse.hpp
+++ src/modules/AudioFilters/PhaseReverse.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class PhaseReverse final : public AudioFilter
+class PhaseReverse : public AudioFilter
 {
 public:
     PhaseReverse(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     bool enabled, hasParameters, canFilter, reverseRight;
     uchar chn;
diff --git src/modules/AudioFilters/VoiceRemoval.hpp src/modules/AudioFilters/VoiceRemoval.hpp
index b67e6844..024c98af 100644
--- src/modules/AudioFilters/VoiceRemoval.hpp
+++ src/modules/AudioFilters/VoiceRemoval.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class VoiceRemoval final : public AudioFilter
+class VoiceRemoval : public AudioFilter
 {
 public:
     VoiceRemoval(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     bool enabled, hasParameters, canFilter;
     uchar chn;
diff --git src/modules/CUVID/Cuvid.hpp src/modules/CUVID/Cuvid.hpp
index e1d695d8..ee60dece 100644
--- src/modules/CUVID/Cuvid.hpp
+++ src/modules/CUVID/Cuvid.hpp
@@ -24,23 +24,21 @@
 
 class QComboBox;
 
-class Cuvid final : public Module
+class Cuvid : public Module
 {
     Q_DECLARE_TR_FUNCTIONS(Cuvid)
 
 public:
     Cuvid();
-    ~Cuvid();
+    ~Cuvid() final;
 
 private:
-    QList<Info> getModulesInfo(const bool showDisabled) const override;
-    void *createInstance(const QString &name) override;
+    QList<Info> getModulesInfo(const bool showDisabled) const override final;
+    void *createInstance(const QString &name) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
-    void videoDeintSave() override;
-
-    /**/
+    void videoDeintSave() override final;
 
     QComboBox *m_deintMethodB;
 };
@@ -58,7 +56,7 @@ public:
     ModuleSettingsWidget(Module &module);
 
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *m_enabledB, *m_copyVideoB, *m_decodeMPEG4;
 #ifdef Q_OS_WIN
diff --git src/modules/CUVID/CuvidDec.hpp src/modules/CUVID/CuvidDec.hpp
index fb96a41d..5bdd4bcf 100644
--- src/modules/CUVID/CuvidDec.hpp
+++ src/modules/CUVID/CuvidDec.hpp
@@ -33,7 +33,7 @@ struct AVBSFContext;
 struct SwsContext;
 struct AVPacket;
 
-class CuvidDec final : public Decoder
+class CuvidDec : public Decoder
 {
     Q_DECLARE_TR_FUNCTIONS(CuvidDec)
 
@@ -44,26 +44,24 @@ public:
     static bool canCreateInstance();
 
     CuvidDec(Module &module);
-    ~CuvidDec();
+    ~CuvidDec() final;
 
-    bool set() override;
+    bool set() override final;
 
     int videoSequence(CUVIDEOFORMAT *format);
     int pictureDecode(CUVIDPICPARAMS *picParams);
     int pictureDisplay(CUVIDPARSERDISPINFO *dispInfo);
 
 private:
-    QString name() const override;
+    QString name() const override final;
 
-    VideoWriter *HWAccel() const override;
+    VideoWriter *HWAccel() const override final;
 
-    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override;
+    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override final;
 
-    bool hasCriticalError() const override;
+    bool hasCriticalError() const override final;
 
-    bool open(StreamInfo &streamInfo, VideoWriter *writer = nullptr) override;
-
-    /**/
+    bool open(StreamInfo &streamInfo, VideoWriter *writer = nullptr) override final;
 
     bool testDecoder(const int depth);
 
diff --git src/modules/Chiptune/Chiptune.hpp src/modules/Chiptune/Chiptune.hpp
index 1892cb3b..174e84dd 100644
--- src/modules/Chiptune/Chiptune.hpp
+++ src/modules/Chiptune/Chiptune.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Chiptune final : public Module
+class Chiptune : public Module
 {
 public:
     Chiptune();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon GMEIcon, SIDIcon;
 };
@@ -40,13 +40,13 @@ private:
 class QCheckBox;
 class QSpinBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
 #ifdef USE_GME
     QCheckBox *gmeB;
diff --git src/modules/Chiptune/GME.hpp src/modules/Chiptune/GME.hpp
index d19c8642..701493f1 100644
--- src/modules/Chiptune/GME.hpp
+++ src/modules/Chiptune/GME.hpp
@@ -24,36 +24,34 @@
 
 class Reader;
 
-class GME final : public Demuxer
+class GME : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(GME)
 public:
     GME(Module &);
-    ~GME();
+    ~GME() final;
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
-
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    bool open(const QString &) override final;
 
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     bool open(const QString &url, bool tracksOnly);
 
     QString getTitle(gme_info_t *info, int track) const;
     int getLength(gme_info_t *info) const;
 
-
     IOController<Reader> m_reader;
     quint32 m_srate;
     bool m_aborted;
diff --git src/modules/Chiptune/SIDPlay.hpp src/modules/Chiptune/SIDPlay.hpp
index 2925bc07..a6a8566e 100644
--- src/modules/Chiptune/SIDPlay.hpp
+++ src/modules/Chiptune/SIDPlay.hpp
@@ -26,35 +26,33 @@
 class SidTuneInfo;
 class Reader;
 
-class SIDPlay final : public Demuxer
+class SIDPlay : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(SIDPlay)
 public:
     SIDPlay(Module &);
-    ~SIDPlay();
+    ~SIDPlay() final;
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool backward) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool backward) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
-
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    bool open(const QString &) override final;
 
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     bool open(const QString &url, bool tracksOnly);
 
     QString getTitle(const SidTuneInfo *info, int track) const;
 
-
     IOController<Reader> m_reader;
     quint32 m_srate;
     bool m_aborted;
diff --git src/modules/DirectX/DirectDraw.hpp src/modules/DirectX/DirectDraw.hpp
index bc488ebd..06180168 100644
--- src/modules/DirectX/DirectDraw.hpp
+++ src/modules/DirectX/DirectDraw.hpp
@@ -28,12 +28,12 @@
 class DirectDrawWriter;
 class QMPlay2OSD;
 
-class Drawable final : public QWidget
+class Drawable : public QWidget
 {
     Q_OBJECT
 public:
     Drawable(DirectDrawWriter &);
-    ~Drawable();
+    ~Drawable() final;
 
     inline bool canDraw() const
     {
@@ -48,7 +48,7 @@ public:
 
     void draw(const VideoFrame &videoFrame);
 
-    void resizeEvent(QResizeEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
 
     QList<const QMPlay2OSD *> osd_list;
     QMutex osd_mutex;
@@ -64,10 +64,10 @@ private:
 
     bool restoreLostSurface();
 
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QQPaintEngine *paintEngine() const override final;
 
     QImage osdImg;
     QVector<quint64> osd_ids;
@@ -90,27 +90,27 @@ private:
 
 /**/
 
-class DirectDrawWriter final : public VideoWriter
+class DirectDrawWriter : public VideoWriter
 {
     friend class Drawable;
 public:
     DirectDrawWriter(Module &);
 private:
-        ~DirectDrawWriter();
+    ~DirectDrawWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    void pause() override;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/DirectX/DirectX.hpp src/modules/DirectX/DirectX.hpp
index dde8d6b5..70cfb418 100644
--- src/modules/DirectX/DirectX.hpp
+++ src/modules/DirectX/DirectX.hpp
@@ -22,29 +22,29 @@
 
 #include <QCoreApplication>
 
-class DirectX final : public Module
+class DirectX : public Module
 {
 public:
     DirectX();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *ddrawB;
 };
diff --git src/modules/Extensions/CMakeLists.txt src/modules/Extensions/CMakeLists.txt
index 9be7afeb..9263b6f1 100644
--- src/modules/Extensions/CMakeLists.txt
+++ src/modules/Extensions/CMakeLists.txt
@@ -55,7 +55,11 @@ if(USE_MEDIABROWSER)
     set(QML Qt5::Qml)
 endif()
 
-qt5_wrap_ui(Extensions_FORM_HDR ${Extensions_FORMS})
+if(USE_QT4)
+    qt4_wrap_ui(Extensions_FORM_HDR ${Extensions_FORMS})
+else()
+    qt5_wrap_ui(Extensions_FORM_HDR ${Extensions_FORMS})
+endif()
 set_property(SOURCE ${Extensions_FORM_HDR} PROPERTY SKIP_AUTOMOC ON)
 
 include_directories(../../qmplay2/headers
@@ -69,9 +73,15 @@ add_library(${PROJECT_NAME} ${QMPLAY2_MODULE}
     ${Extensions_RESOURCES}
 )
 
+if(USE_QT4)
+    add_definitions(-I/opt/local/include/QJson4)
+    target_link_libraries(${PROJECT_NAME} Qt4::QtCore Qt4::QtGui QJson4)
+else()
+    target_link_libraries(${PROJECT_NAME} ${QML})
+endif()
+
 target_link_libraries(${PROJECT_NAME}
     ${DBUS}
-    ${QML}
     libqmplay2
 )
 
diff --git src/modules/Extensions/Downloader.cpp src/modules/Extensions/Downloader.cpp
index 78f30efe..0b5314aa 100644
--- src/modules/Extensions/Downloader.cpp
+++ src/modules/Extensions/Downloader.cpp
@@ -30,7 +30,6 @@
 #include <QLabel>
 #include <QAction>
 #include <QScreen>
-#include <QWindow>
 #include <QProcess>
 #include <QMimeData>
 #include <QClipboard>
@@ -46,13 +45,24 @@
 #include <QProgressBar>
 #include <QApplication>
 #include <QElapsedTimer>
-#include <QStandardPaths>
-#include <QLoggingCategory>
 #include <QDialogButtonBox>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+    #include <QLoggingCategory>
+#else
+    #define qCWarning qWarning
+#endif
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QWindow>
+    #include <QStandardPaths>
+#else
+    #include <QDesktopServices>
+#endif
 
 #include <functional>
 
-Q_LOGGING_CATEGORY(downloader, "Downloader")
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+    Q_LOGGING_CATEGORY(downloader, "Downloader")
+#endif
 
 /**/
 
@@ -879,7 +889,11 @@ void Downloader::init()
     layout->addItem(new QSpacerItem(10, 0, QSizePolicy::Fixed, QSizePolicy::Minimum), 1, 4, 1, 1);
     layout->addWidget(m_convertsPresetsB, 1, 5, 1, 1);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QString defDownloadPath = QStandardPaths::standardLocations(QStandardPaths::DownloadLocation).value(0, QDir::homePath()) + "/";
+#else
+    defDownloadPath = QDir::homePath() + "/Downloads/";
+#endif
 #ifdef Q_OS_WIN
     defDownloadPath.replace('\\', '/');
 #endif
diff --git src/modules/Extensions/Downloader.hpp src/modules/Extensions/Downloader.hpp
index a19787ac..b200b1d5 100644
--- src/modules/Extensions/Downloader.hpp
+++ src/modules/Extensions/Downloader.hpp
@@ -32,12 +32,12 @@ class QProgressBar;
 class QTreeWidgetItem;
 class DownloaderThread;
 
-class DownloadItemW final : public QWidget
+class DownloadItemW : public QWidget
 {
     Q_OBJECT
 public:
     DownloadItemW(DownloaderThread *downloaderThr, QString name, const QIcon &icon, QDataStream *stream, QString preset);
-    ~DownloadItemW();
+    ~DownloadItemW() final;
 
     void setName(const QString &);
     void setSizeAndFilePath(qint64, const QString &);
@@ -90,7 +90,9 @@ private:
     } *speedProgressW = nullptr;
 
     QProcess *m_convertProcess = nullptr;
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QMetaObject::Connection m_convertProcessConn[2];
+#endif
     bool finished, readyToPlay, m_needsConversion = false;
     QString m_convertPreset;
     QString filePath;
@@ -99,7 +101,7 @@ private:
 
 /**/
 
-class DownloadListW final : public QTreeWidget
+class DownloadListW : public QTreeWidget
 {
     friend class Downloader;
 public:
@@ -113,13 +115,13 @@ private:
 
 /**/
 
-class DownloaderThread final : public QThread
+class DownloaderThread : public QThread
 {
     Q_OBJECT
     enum {ADD_ENTRY, NAME, SET, SET_POS, SET_SPEED, DOWNLOAD_ERROR, FINISH};
 public:
     DownloaderThread(QDataStream *stream, const QString &url, DownloadListW *downloadLW, const QMenu *convertsMenu, const QString &name = QString(), const QString &prefix = QString(), const QString &param = QString(), const QString &preset = QString());
-    ~DownloaderThread();
+    ~DownloaderThread() final;
 
     void serialize(QDataStream &stream);
 
@@ -131,7 +133,7 @@ private slots:
     void stop();
     void finished();
 private:
-    void run() override;
+    void run() override final;
 
     QIcon getIcon();
 
@@ -145,19 +147,19 @@ private:
 
 /**/
 
-class Downloader final : public QWidget, public QMPlay2Extensions
+class Downloader : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     Downloader(Module &module);
-    ~Downloader();
+    ~Downloader() final;
 
-    void init() override;
+    void init() override final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override;
+    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override final;
 
 private:
     void addConvertPreset();
diff --git src/modules/Extensions/Extensions.cpp src/modules/Extensions/Extensions.cpp
index e4f8f9be..753e1b0a 100644
--- src/modules/Extensions/Extensions.cpp
+++ src/modules/Extensions/Extensions.cpp
@@ -49,7 +49,11 @@ Extensions::Extensions() :
 
     init("YouTube/ShowUserName", false);
     init("YouTube/Subtitles", true);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     init("YouTube/SortBy", 0);
+#else
+    init("YouTube/SortByDate", false);
+#endif
 
 #ifdef USE_LASTFM
     init("LastFM/DownloadCovers", true);
@@ -150,6 +154,11 @@ ModuleSettingsWidget::ModuleSettingsWidget(Module &module) :
     subtitlesB->setToolTip(tr("Displays subtitles from YouTube. Follows default subtitles language and QMPlay2 language."));
     subtitlesB->setChecked(sets().getBool("YouTube/Subtitles"));
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    sortByDateB = new QCheckBox(tr("Sort search results by date"));
+    sortByDateB->setChecked(sets().getBool("YouTube/SortByDate"));
+#endif
+
     qualityPreset = new QComboBox;
     qualityPreset->setSizePolicy(QSizePolicy(QSizePolicy::Expanding, QSizePolicy::Preferred));
     qualityPreset->addItems(YouTube::getQualityPresets());
@@ -159,6 +168,9 @@ ModuleSettingsWidget::ModuleSettingsWidget(Module &module) :
     layout = new QGridLayout(youTubeB);
     layout->addWidget(userNameB, 0, 0, 1, 2);
     layout->addWidget(subtitlesB, 1, 0, 1, 2);
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    layout->addWidget(sortByDateB, 3, 0, 1, 3);
+#endif
     layout->addWidget(new QLabel(tr("Preferred quality") + ": "), 2, 0, 1, 1);
     layout->addWidget(qualityPreset, 2, 1, 1, 1);
     layout->setMargin(2);
@@ -232,6 +244,9 @@ void ModuleSettingsWidget::saveSettings()
 
     sets().set("YouTube/ShowUserName", userNameB->isChecked());
     sets().set("YouTube/Subtitles", subtitlesB->isChecked());
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    sets().set("YouTube/SortByDate", sortByDateB->isChecked());
+#endif
     sets().set("YouTube/QualityPreset", qualityPreset->currentText());
 
 #ifdef USE_LASTFM
diff --git src/modules/Extensions/Extensions.hpp src/modules/Extensions/Extensions.hpp
index c2a424e1..2f0141e3 100644
--- src/modules/Extensions/Extensions.hpp
+++ src/modules/Extensions/Extensions.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Extensions final : public Module
+class Extensions : public Module
 {
 public:
     Extensions();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon downloader, youtube, radio;
 #ifdef USE_LASTFM
@@ -45,7 +45,7 @@ class QGroupBox;
 class QCheckBox;
 class LineEdit;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
 public:
@@ -56,13 +56,17 @@ private slots:
     void passwordEdited();
 #endif
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
 #ifdef USE_MPRIS2
     QCheckBox *MPRIS2B;
 #endif
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QCheckBox *userNameB, *subtitlesB;
+#else
+    QCheckBox *userNameB, *subtitlesB, *sortByDateB;
+#endif
     QComboBox *qualityPreset;
 
 #ifdef USE_LASTFM
diff --git src/modules/Extensions/LastFM.hpp src/modules/Extensions/LastFM.hpp
index 3d2b3e73..c8abaa10 100644
--- src/modules/Extensions/LastFM.hpp
+++ src/modules/Extensions/LastFM.hpp
@@ -29,7 +29,7 @@
 
 class QImage;
 
-class LastFM final : public QObject, public QMPlay2Extensions
+class LastFM : public QObject, public QMPlay2Extensions
 {
     Q_OBJECT
 public:
@@ -49,7 +49,7 @@ public:
 
     LastFM(Module &module);
 private:
-    bool set() override;
+    bool set() override final;
 
     void getAlbumCover(const QString &title, const QString &artist, const QString &album, bool titleAsAlbum = false);
 
diff --git src/modules/Extensions/Lyrics.hpp src/modules/Extensions/Lyrics.hpp
index d4f954a3..572571cc 100644
--- src/modules/Extensions/Lyrics.hpp
+++ src/modules/Extensions/Lyrics.hpp
@@ -25,15 +25,15 @@
 #include <QTextEdit>
 #include <QPointer>
 
-class Lyrics final : public QTextEdit, public QMPlay2Extensions
+class Lyrics : public QTextEdit, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     Lyrics(Module &module);
-    ~Lyrics();
+    ~Lyrics() final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
 private slots:
     void visibilityChanged(bool v);
diff --git src/modules/Extensions/MPRIS2.hpp src/modules/Extensions/MPRIS2.hpp
index 5a218250..80f1769d 100644
--- src/modules/Extensions/MPRIS2.hpp
+++ src/modules/Extensions/MPRIS2.hpp
@@ -23,7 +23,7 @@
 
 #include <memory>
 
-class MediaPlayer2Root final : public QDBusAbstractAdaptor
+class MediaPlayer2Root : public QDBusAbstractAdaptor
 {
     Q_OBJECT
 
@@ -62,7 +62,7 @@ private:
 
 /**/
 
-class MediaPlayer2Player final : public QDBusAbstractAdaptor
+class MediaPlayer2Player : public QDBusAbstractAdaptor
 {
     Q_OBJECT
 
@@ -83,7 +83,7 @@ class MediaPlayer2Player final : public QDBusAbstractAdaptor
     Q_PROPERTY(double Volume READ volume WRITE setVolume)
 public:
     MediaPlayer2Player(QObject *p);
-    ~MediaPlayer2Player();
+    ~MediaPlayer2Player() final;
 
     bool canControl() const;
     bool canGoNext() const;
@@ -139,11 +139,11 @@ private:
 
 /**/
 
-class MPRIS2Interface final : public QObject
+class MPRIS2Interface : public QObject
 {
 public:
     MPRIS2Interface();
-    ~MPRIS2Interface();
+    ~MPRIS2Interface() final;
 
     inline bool isOk() const;
 private:
@@ -157,13 +157,13 @@ private:
 
 #include <QMPlay2Extensions.hpp>
 
-class MPRIS2 final : public QMPlay2Extensions
+class MPRIS2 : public QMPlay2Extensions
 {
 public:
     MPRIS2(Module &module);
-    ~MPRIS2();
+    ~MPRIS2() final;
 private:
-    bool set() override;
+    bool set() override final;
 
     std::unique_ptr<MPRIS2Interface> mpris2Interface;
 };
diff --git src/modules/Extensions/MediaBrowser.hpp src/modules/Extensions/MediaBrowser.hpp
index 717d9fd9..c607a7a3 100644
--- src/modules/Extensions/MediaBrowser.hpp
+++ src/modules/Extensions/MediaBrowser.hpp
@@ -33,13 +33,13 @@ class MediaBrowserJS;
 
 /**/
 
-class MediaBrowserResults final : public QTreeWidget
+class MediaBrowserResults : public QTreeWidget
 {
     Q_OBJECT
 
 public:
     MediaBrowserResults(MediaBrowserJS *&mediaBrowser);
-    ~MediaBrowserResults();
+    ~MediaBrowserResults() final;
 
     void setCurrentName(const QString &name, const QString &pageName);
 
@@ -69,7 +69,7 @@ private:
 class QToolButton;
 class QComboBox;
 
-class MediaBrowserPages final : public QWidget
+class MediaBrowserPages : public QWidget
 {
     Q_OBJECT
 
@@ -114,23 +114,23 @@ class QCompleter;
 class QTextEdit;
 class LineEdit;
 
-class MediaBrowser final : public QWidget, public QMPlay2Extensions
+class MediaBrowser : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     MediaBrowser(Module &module);
-    ~MediaBrowser();
+    ~MediaBrowser() final;
 
 private:
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool canConvertAddress() const override;
+    bool canConvertAddress() const override final;
 
-    QList<AddressPrefix> addressPrefixList(bool) const override;
-    void convertAddress(const QString &prefix, const QString &url, const QString &param, QString *streamUrl, QString *name, QIcon *icon, QString *extension, IOController<> *ioCtrl) override;
+    QList<AddressPrefix> addressPrefixList(bool) const override final;
+    void convertAddress(const QString &prefix, const QString &url, const QString &param, QString *streamUrl, QString *name, QIcon *icon, QString *extension, IOController<> *ioCtrl) override final;
 
-    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override;
+    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override final;
 
 private:
     void initScripts();
diff --git src/modules/Extensions/Radio.cpp src/modules/Extensions/Radio.cpp
index c0310b5c..ef39ee3d 100644
--- src/modules/Extensions/Radio.cpp
+++ src/modules/Extensions/Radio.cpp
@@ -24,19 +24,26 @@
 #include <Functions.hpp>
 
 #include <QDesktopServices>
-#include <QJsonDocument>
 #include <QInputDialog>
 #include <QMessageBox>
 #include <QFileDialog>
-#include <QJsonObject>
 #include <QScrollBar>
-#include <QJsonArray>
 #include <QMimeData>
 #include <qevent.h>
 #include <QTimer>
 #include <QMenu>
 #include <QUrl>
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QJsonDocument>
+    #include <QJsonObject>
+    #include <QJsonArray>
+#else
+    #include <QJsonDocument.h>
+    #include <QJsonObject.h>
+    #include <QJsonArray.h>
+#endif
+
 constexpr const char *g_fileDialogFilter = "QMPlay2 radio station list (*.qmplay2radio)";
 
 Radio::Radio(Module &module) :
@@ -84,8 +91,13 @@ Radio::Radio(Module &module) :
     ui->radioView->setIconSize({m_radioBrowserModel->elementHeight(), m_radioBrowserModel->elementHeight()});
 
     QHeaderView *header = ui->radioView->header();
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     header->setSectionResizeMode(0, QHeaderView::Stretch);
     header->setSectionResizeMode(4, QHeaderView::ResizeToContents);
+#else
+    header->setResizeMode(0, QHeaderView::Stretch);
+    header->setResizeMode(4, QHeaderView::ResizeToContents);
+#endif
 
     connect(m_radioBrowserMenu->addAction(tr("Play")), SIGNAL(triggered(bool)), this, SLOT(radioBrowserPlay()));
     connect(m_radioBrowserMenu->addAction(tr("Enqueue")), SIGNAL(triggered(bool)), this, SLOT(radioBrowserEnqueue()));
diff --git src/modules/Extensions/Radio.hpp src/modules/Extensions/Radio.hpp
index 1bf167a5..8d674706 100644
--- src/modules/Extensions/Radio.hpp
+++ src/modules/Extensions/Radio.hpp
@@ -36,15 +36,15 @@ class NetworkReply;
 class QTimer;
 class QMenu;
 
-class Radio final : public QTabWidget, public QMPlay2Extensions
+class Radio : public QTabWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     Radio(Module &);
-    ~Radio();
+    ~Radio() final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
 private slots:
     void visibilityChanged(const bool v);
@@ -95,7 +95,7 @@ private:
     void loadMyRadios(const QStringList &radios);
 
 private:
-    bool eventFilter(QObject *watched, QEvent *event) override;
+    bool eventFilter(QObject *watched, QEvent *event) override final;
 
 private:
     const QString m_newStationTxt;
diff --git src/modules/Extensions/Radio/RadioBrowserModel.cpp src/modules/Extensions/Radio/RadioBrowserModel.cpp
index 395ed835..7fe38bec 100644
--- src/modules/Extensions/Radio/RadioBrowserModel.cpp
+++ src/modules/Extensions/Radio/RadioBrowserModel.cpp
@@ -22,9 +22,16 @@
 #include <Functions.hpp>
 #include <CppUtils.hpp>
 
-#include <QJsonDocument>
-#include <QJsonObject>
-#include <QJsonArray>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QJsonDocument>
+    #include <QJsonObject>
+    #include <QJsonArray>
+#else
+    #include <QJsonDocument.h>
+    #include <QJsonObject.h>
+    #include <QJsonArray.h>
+#endif
+
 #include <QPainter>
 #include <QWidget>
 #include <QUrl>
diff --git src/modules/Extensions/Radio/RadioBrowserModel.hpp src/modules/Extensions/Radio/RadioBrowserModel.hpp
index 9ecd5270..42586e28 100644
--- src/modules/Extensions/Radio/RadioBrowserModel.hpp
+++ src/modules/Extensions/Radio/RadioBrowserModel.hpp
@@ -30,7 +30,7 @@ class NetworkAccess;
 class NetworkReply;
 struct Column;
 
-class RadioBrowserModel final : public QAbstractItemModel
+class RadioBrowserModel : public QAbstractItemModel
 {
     Q_OBJECT
 
@@ -49,14 +49,14 @@ public:
     QUrl getEditUrl(const QModelIndex &index) const;
     QUrl getHomePageUrl(const QModelIndex &index) const;
 
-    QModelIndex index(int row, int column, const QModelIndex &parent) const override;
-    QModelIndex parent(const QModelIndex &child) const override;
-    int rowCount(const QModelIndex &parent) const override;
-    int columnCount(const QModelIndex &parent) const override;
-    QVariant data(const QModelIndex &index, int role) const override;
-    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override;
-    Qt::ItemFlags flags(const QModelIndex &index) const override;
-    void sort(int columnIdx, Qt::SortOrder order = Qt::AscendingOrder) override;
+    QModelIndex index(int row, int column, const QModelIndex &parent) const override final;
+    QModelIndex parent(const QModelIndex &child) const override final;
+    int rowCount(const QModelIndex &parent) const override final;
+    int columnCount(const QModelIndex &parent) const override final;
+    QVariant data(const QModelIndex &index, int role) const override final;
+    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override final;
+    Qt::ItemFlags flags(const QModelIndex &index) const override final;
+    void sort(int columnIdx, Qt::SortOrder order = Qt::AscendingOrder) override final;
 
 public slots:
     void setFiltrText(const QString &text = QString());
diff --git src/modules/Extensions/YouTube.cpp src/modules/Extensions/YouTube.cpp
index 4d7b794f..80d124ab 100644
--- src/modules/Extensions/YouTube.cpp
+++ src/modules/Extensions/YouTube.cpp
@@ -21,19 +21,14 @@
 #include <YouTubeDL.hpp>
 #include <LineEdit.hpp>
 
-#include <QLoggingCategory>
 #include <QStringListModel>
 #include <QDesktopServices>
-#include <QJsonParseError>
 #include <QTextDocument>
-#include <QJsonDocument>
 #include <QProgressBar>
 #include <QApplication>
-#include <QJsonObject>
 #include <QHeaderView>
 #include <QGridLayout>
 #include <QToolButton>
-#include <QJsonArray>
 #include <QCompleter>
 #include <QClipboard>
 #include <QMimeData>
@@ -41,8 +36,26 @@
 #include <QAction>
 #include <QMenu>
 #include <QUrl>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+    #include <QLoggingCategory>
+#else
+    #define qCWarning qWarning
+#endif
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QJsonParseError>
+    #include <QJsonDocument>
+    #include <QJsonObject>
+    #include <QJsonArray>
+#else
+    #include <QJsonParseError.h>
+    #include <QJsonDocument.h>
+    #include <QJsonObject.h>
+    #include <QJsonArray.h>
+#endif
 
-Q_LOGGING_CATEGORY(youtube, "Extensions/YouTube")
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+    Q_LOGGING_CATEGORY(youtube, "Extensions/YouTube")
+#endif
 
 #define YOUTUBE_URL "https://www.youtube.com"
 
@@ -51,6 +64,7 @@ static inline QString toPercentEncoding(const QString &txt)
     return txt.toUtf8().toPercentEncoding();
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
 static inline QString getYtUrl(const QString &title, const int page, const int sortByIdx)
 {
     static constexpr const char *sortBy[4] {
@@ -62,6 +76,13 @@ static inline QString getYtUrl(const QString &title, const int page, const int s
     Q_ASSERT(sortByIdx >= 0 && sortByIdx <= 3);
     return QString(YOUTUBE_URL "/results?search_query=%1%2&page=%3").arg(toPercentEncoding(title), sortBy[sortByIdx]).arg(page);
 }
+#else
+static inline QString getYtUrl(const QString &title, const int page, const bool sortByDate)
+{
+    return QString(YOUTUBE_URL "/results?search_query=%1%2&page=%3").arg(toPercentEncoding(title), sortByDate ? "&sp=CAI%253D" : QString()).arg(page);
+}
+#endif
+
 static inline QString getAutocompleteUrl(const QString &text)
 {
     return QString("http://suggestqueries.google.com/complete/search?client=firefox&ds=yt&q=%1").arg(toPercentEncoding(text));
@@ -89,8 +110,13 @@ ResultsYoutube::ResultsYoutube()
     headerItem()->setText(2, tr("User"));
 
     header()->setStretchLastSection(false);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     header()->setSectionResizeMode(0, QHeaderView::Stretch);
     header()->setSectionResizeMode(1, QHeaderView::ResizeToContents);
+#else
+    header()->setResizeMode(0, QHeaderView::Stretch);
+    header()->setResizeMode(1, QHeaderView::ResizeToContents);
+#endif
 
     connect(this, SIGNAL(itemDoubleClicked(QTreeWidgetItem *, int)), this, SLOT(playEntry(QTreeWidgetItem *)));
     connect(this, SIGNAL(customContextMenuRequested(const QPoint &)), this, SLOT(contextMenu(const QPoint &)));
@@ -143,6 +169,19 @@ void ResultsYoutube::copyPageURL()
     }
 }
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+
+void ResultsYoutube::enqueue()
+{
+	playOrEnqueue("enqueue", currentItem(), param);
+}
+void ResultsYoutube::playCurrentEntry()
+{
+	playOrEnqueue("open", currentItem(), param);
+}
+
+#endif
+
 void ResultsYoutube::contextMenu(const QPoint &point)
 {
     menu->clear();
@@ -160,12 +199,17 @@ void ResultsYoutube::contextMenu(const QPoint &point)
         if (!tWI->isDisabled())
         {
             const auto param = i == 0 ? QString() : QString("audio");
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
             menu->addAction(tr("Play"), this, [=] {
                 playOrEnqueue("open", currentItem(), param);
             });
             menu->addAction(tr("Enqueue"), this, [=] {
                 playOrEnqueue("enqueue", currentItem(), param);
             });
+#else
+            menu->addAction(tr("Enqueue"), this, SLOT(enqueue()));
+            menu->addAction(tr("Play"), this, SLOT(playCurrentEntry()));
+#endif
             menu->addSeparator();
         }
 
@@ -239,6 +283,16 @@ const QStringList YouTube::getQualityPresets()
     };
 }
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+QStringList YouTube::getQualityPresetString(int qualityIdx)
+{
+    QStringList videoItags;
+    for (int itag : getQualityPresets()[qualityIdx])
+        videoItags.append(QString::number(itag));
+    return videoItags;
+}
+#endif
+
 YouTube::YouTube(Module &module) :
     completer(new QCompleter(new QStringListModel(this), this)),
     currPage(1),
@@ -270,13 +324,18 @@ YouTube::YouTube(Module &module) :
     searchB->setAutoRaise(true);
 
     QToolButton *showSettingsB = new QToolButton;
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     connect(showSettingsB, &QToolButton::clicked, this, [] {
         emit QMPlay2Core.showSettings("Extensions");
     });
+#else
+    connect(showSettingsB, SIGNAL(clicked()), this, SLOT(showSettings()));
+#endif
     showSettingsB->setIcon(QMPlay2Core.getIconFromTheme("configure"));
     showSettingsB->setToolTip(tr("Settings"));
     showSettingsB->setAutoRaise(true);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     m_qualityGroup = new QActionGroup(this);
     for (auto &&qualityPreset : getQualityPresets())
         m_qualityGroup->addAction(qualityPreset);
@@ -296,6 +355,31 @@ YouTube::YouTube(Module &module) :
         qualityMenu->addAction(act);
         ++qualityIdx;
     }
+#else
+	QActionGroup *m_qualityGroup = new QActionGroup(this);
+	m_qualityGroup->addAction("4320p 60FPS");
+	m_qualityGroup->addAction("2160p 60FPS");
+	m_qualityGroup->addAction("1440p 60FPS");
+	m_qualityGroup->addAction("1080p 60FPS");
+	m_qualityGroup->addAction("720p 60FPS");
+	m_qualityGroup->addAction("4320p");
+	m_qualityGroup->addAction("2160p");
+	m_qualityGroup->addAction("1440p");
+	m_qualityGroup->addAction("1080p");
+	m_qualityGroup->addAction("720p");
+	m_qualityGroup->addAction("480p");
+
+    qualityMenu = new QMenu(this);
+    int qualityIdx = 0;
+    for (QAction *act : m_qualityGroup->actions())
+    {
+        connect(act, SIGNAL(triggered(bool)), this, SLOT(setQualityFromMenu()));
+        act->setObjectName(QString::number(qualityIdx++));
+        act->setCheckable(true);
+        qualityMenu->addAction(act);
+    }
+#endif
+
     qualityMenu->insertSeparator(qualityMenu->actions().at(5));
 
     QToolButton *qualityB = new QToolButton;
@@ -311,6 +395,7 @@ YouTube::YouTube(Module &module) :
     m_sortByGroup->addAction(tr("View count"));
     m_sortByGroup->addAction(tr("Rating"));
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     QMenu *sortByMenu = new QMenu(this);
     int sortByIdx = 0;
     for (QAction *act : m_sortByGroup->actions())
@@ -341,6 +426,9 @@ YouTube::YouTube(Module &module) :
     }
     sortByB->setMenu(sortByMenu);
     sortByB->setAutoRaise(true);
+#else
+    // FIXME: implement in Qt4 syntax.
+#endif
 
     resultsW = new ResultsYoutube;
 
@@ -355,6 +443,7 @@ YouTube::YouTube(Module &module) :
     QGridLayout *layout = new QGridLayout;
     layout->addWidget(showSettingsB, 0, 0, 1, 1);
     layout->addWidget(qualityB, 0, 1, 1, 1);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     layout->addWidget(sortByB, 0, 2, 1, 1);
     layout->addWidget(searchE, 0, 3, 1, 1);
     layout->addWidget(searchB, 0, 4, 1, 1);
@@ -362,6 +451,13 @@ YouTube::YouTube(Module &module) :
     layout->addWidget(resultsW, 1, 0, 1, 6);
     layout->addWidget(progressB, 2, 0, 1, 6);
     layout->setSpacing(3);
+#else
+    layout->addWidget(searchE, 0, 2, 1, 1);
+    layout->addWidget(searchB, 0, 3, 1, 1);
+    layout->addWidget(pageSwitcher, 0, 4, 1, 1);
+    layout->addWidget(resultsW, 1, 0, 1, 5);
+    layout->addWidget(progressB, 2, 0, 1, 5);
+#endif
     setLayout(layout);
 
     SetModule(module);
@@ -391,8 +487,10 @@ bool YouTube::set()
 
     resultsW->setColumnCount(sets().getBool("YouTube/ShowUserName") ? 3 : 2);
     m_allowSubtitles = sets().getBool("YouTube/Subtitles");
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     m_sortByIdx = qBound(0, sets().getInt("YouTube/SortBy"), 3);
     m_sortByGroup->actions().at(m_sortByIdx)->setChecked(true);
+#endif
     return true;
 }
 
@@ -473,6 +571,21 @@ QVector<QAction *> YouTube::getActions(const QString &name, double, const QStrin
     return {};
 }
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+void YouTube::showSettings()
+{
+    emit QMPlay2Core.showSettings("Extensions");
+}
+void YouTube::setQualityFromMenu() // Call it only from quality menu!
+{
+    const int qualityIdx = sender()->objectName().toInt();
+    sets().set("YouTube/MultiStream", true);
+    sets().set("YouTube/ItagVideoList", getQualityPresetString(qualityIdx));
+    sets().set("YouTube/ItagAudioList", QStringList{"251", "171", "140"});
+    setItags();
+}
+#endif
+
 void YouTube::next()
 {
     pageSwitcher->currPageB->setValue(pageSwitcher->currPageB->value() + 1);
@@ -512,9 +625,14 @@ void YouTube::search()
     resultsW->clear();
     if (!title.isEmpty())
     {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         if (lastTitle != title || sender() == searchE || sender() == searchB || qobject_cast<QAction *>(sender()))
             currPage = 1;
         searchReply = net.start(getYtUrl(title, currPage, m_sortByIdx));
+#else
+        if (lastTitle != title || sender() == searchE || sender() == searchB)
+        searchReply = net.start(getYtUrl(title, currPage, sets().getBool("YouTube/SortByDate")));
+#endif
         progressB->setRange(0, 0);
         progressB->show();
     }
@@ -725,13 +843,21 @@ void YouTube::setAutocomplete(const QByteArray &data)
     const QJsonDocument json = QJsonDocument::fromJson(data, &jsonErr);
     if (jsonErr.error != QJsonParseError::NoError)
     {
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
         qCWarning(youtube) << "Cannot parse autocomplete JSON:" << jsonErr.errorString();
+#else
+        qWarning() << "Cannot parse autocomplete JSON:" << jsonErr.errorString();
+#endif
         return;
     }
     const QJsonArray mainArr = json.array();
     if (mainArr.count() < 2)
     {
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
         qCWarning(youtube) << "Invalid autocomplete JSON array";
+#else
+        qWarning() << "Invalid autocomplete JSON array";
+#endif
         return;
     }
     const QJsonArray arr = mainArr.at(1).toArray();
@@ -938,8 +1064,8 @@ QStringList YouTube::getYouTubeVideo(const QString &param, const QString &url, I
         if (format.isEmpty())
             continue;
 
-        const auto container = format["container"].toString();
-        if (container.contains("dash", Qt::CaseInsensitive))
+        const auto protocol = format["protocol"].toString();
+        if (protocol.contains("dash", Qt::CaseInsensitive))
         {
             // Skip MP4 DASH, because it doesn't work properly
             continue;
@@ -956,7 +1082,11 @@ QStringList YouTube::getYouTubeVideo(const QString &param, const QString &url, I
         for (auto &&itag : itags)
         {
             auto it = itagsData.constFind(itag);
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
             if (it != itagsData.cend())
+#else
+            if (it != itagsData.constEnd())
+#endif
             {
                 urls += it->first;
                 exts += it->second;
@@ -982,7 +1112,10 @@ QStringList YouTube::getYouTubeVideo(const QString &param, const QString &url, I
 
     if (urls.isEmpty())
     {
+// FIXME: error: invalid use of incomplete type 'class QDebug'
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
         qCritical() << "YouTube :: Can't find desired format, available:" << itagsData.keys();
+#endif
         return {};
     }
 
diff --git src/modules/Extensions/YouTube.hpp src/modules/Extensions/YouTube.hpp
index 17350c2d..9be10008 100644
--- src/modules/Extensions/YouTube.hpp
+++ src/modules/Extensions/YouTube.hpp
@@ -39,12 +39,12 @@ class QMenu;
 
 /**/
 
-class ResultsYoutube final : public QTreeWidget
+class ResultsYoutube : public QTreeWidget
 {
     Q_OBJECT
 public:
     ResultsYoutube();
-    ~ResultsYoutube();
+    ~ResultsYoutube() final;
 
 private:
     void playOrEnqueue(const QString &param, QTreeWidgetItem *tWI, const QString &addrParam = QString());
@@ -62,7 +62,7 @@ private slots:
 
 /**/
 
-class PageSwitcher final : public QWidget
+class PageSwitcher : public QWidget
 {
     Q_OBJECT
 public:
@@ -76,7 +76,7 @@ public:
 
 using ItagNames = QPair<QStringList, QList<int>>;
 
-class YouTube final : public QWidget, public QMPlay2Extensions
+class YouTube : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
@@ -85,21 +85,25 @@ public:
 
 public:
     YouTube(Module &module);
-    ~YouTube();
+    ~YouTube() final;
 
-    bool set() override;
+    bool set() override final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool canConvertAddress() const override;
+    bool canConvertAddress() const override final;
 
-    QString matchAddress(const QString &url) const override;
-    QList<AddressPrefix> addressPrefixList(bool) const override;
-    void convertAddress(const QString &, const QString &, const QString &, QString *, QString *, QIcon *, QString *, IOController<> *ioCtrl) override;
+    QString matchAddress(const QString &url) const override final;
+    QList<AddressPrefix> addressPrefixList(bool) const override final;
+    void convertAddress(const QString &, const QString &, const QString &, QString *, QString *, QIcon *, QString *, IOController<> *ioCtrl) override final;
 
-    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override;
+    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override final;
 
 private slots:
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    void showSettings();
+    void setQualityFromMenu();
+#endif
     void next();
     void prev();
     void chPage();
@@ -112,7 +116,11 @@ private slots:
     void searchMenu();
 
 private:
-    void setItags(int qualityIdx);
+// #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+//     void setItags(int qualityIdx);
+// #else
+    void setItags();
+// #endif
 
     void deleteReplies();
 
@@ -129,6 +137,9 @@ private:
 
     LineEdit *searchE;
     QToolButton *searchB;
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    QMenu *qualityMenu;
+#endif
     ResultsYoutube *resultsW;
     QProgressBar *progressB;
     PageSwitcher *pageSwitcher;
@@ -143,9 +154,11 @@ private:
 
     bool m_allowSubtitles;
 
-    QActionGroup *m_qualityGroup = nullptr, *m_sortByGroup = nullptr;
-
-    int m_sortByIdx = 0;
+// #if QT_VERSION > QT_VERSION_CHECK(5, 0, 0)
+//     QActionGroup *m_qualityGroup = nullptr, *m_sortByGroup = nullptr;
+// 
+//     int m_sortByIdx = 0;
+// #endif
 
     QMutex m_itagsMutex;
     QList<int> m_videoItags, m_audioItags, m_hlsItags, m_singleUrlItags;
diff --git src/modules/FFmpeg/FFDecDXVA2.hpp src/modules/FFmpeg/FFDecDXVA2.hpp
index c7e24065..74f82787 100644
--- src/modules/FFmpeg/FFDecDXVA2.hpp
+++ src/modules/FFmpeg/FFDecDXVA2.hpp
@@ -30,7 +30,7 @@ extern "C"
 class DXVA2Surfaces;
 struct SwsContext;
 
-class FFDecDXVA2 final : public FFDecHWAccel
+class FFDecDXVA2 : public FFDecHWAccel
 {
 public:
     using Surfaces = std::shared_ptr<QVector<IDirect3DSurface9 *>>;
@@ -38,15 +38,15 @@ public:
     static bool loadLibraries();
 
     FFDecDXVA2(Module &module);
-    ~FFDecDXVA2();
+    ~FFDecDXVA2() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool open(StreamInfo &streamInfo, VideoWriter *writer) override;
+    bool open(StreamInfo &streamInfo, VideoWriter *writer) override final;
 
 private:
     Qt::CheckState m_copyVideo;
diff --git src/modules/FFmpeg/FFDecSW.hpp src/modules/FFmpeg/FFDecSW.hpp
index b36bcde7..641e9865 100644
--- src/modules/FFmpeg/FFDecSW.hpp
+++ src/modules/FFmpeg/FFDecSW.hpp
@@ -25,7 +25,7 @@
 
 struct SwsContext;
 
-class FFDecSW final : public FFDec
+class FFDecSW : public FFDec
 {
 public:
     FFDecSW(Module &);
@@ -44,19 +44,19 @@ private:
     };
 
 private:
-    ~FFDecSW();
+    ~FFDecSW() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    void setSupportedPixelFormats(const QMPlay2PixelFormats &pixelFormats) override;
+    void setSupportedPixelFormats(const QMPlay2PixelFormats &pixelFormats) override final;
 
-    int  decodeAudio(Packet &encodedPacket, Buffer &decoded, quint8 &channels, quint32 &sampleRate, bool flush) override;
-    int  decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override;
-    bool decodeSubtitle(const Packet &encodedPacket, double pos, QMPlay2OSD *&osd, const QSize &size, bool flush) override;
+    int  decodeAudio(Packet &encodedPacket, Buffer &decoded, quint8 &channels, quint32 &sampleRate, bool flush) override final;
+    int  decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override final;
+    bool decodeSubtitle(const Packet &encodedPacket, double pos, QMPlay2OSD *&osd, const QSize &size, bool flush) override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 
     /**/
 
diff --git src/modules/FFmpeg/FFDecVAAPI.hpp src/modules/FFmpeg/FFDecVAAPI.hpp
index 1e91ee49..cd26684a 100644
--- src/modules/FFmpeg/FFDecVAAPI.hpp
+++ src/modules/FFmpeg/FFDecVAAPI.hpp
@@ -23,20 +23,20 @@
 
 struct SwsContext;
 
-class FFDecVAAPI final : public FFDecHWAccel
+class FFDecVAAPI : public FFDecHWAccel
 {
 public:
     FFDecVAAPI(Module &);
-    ~FFDecVAAPI();
+    ~FFDecVAAPI() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override;
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override final;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 
 private:
     bool m_useOpenGL;
diff --git src/modules/FFmpeg/FFDecVDPAU.hpp src/modules/FFmpeg/FFDecVDPAU.hpp
index 6c1e1eeb..50e5ca18 100644
--- src/modules/FFmpeg/FFDecVDPAU.hpp
+++ src/modules/FFmpeg/FFDecVDPAU.hpp
@@ -22,15 +22,15 @@
 
 class VDPAUWriter;
 
-class FFDecVDPAU final : public FFDecHWAccel
+class FFDecVDPAU : public FFDecHWAccel
 {
 public:
     FFDecVDPAU(Module &);
-    ~FFDecVDPAU();
+    ~FFDecVDPAU() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 };
diff --git src/modules/FFmpeg/FFDecVDPAU_NW.hpp src/modules/FFmpeg/FFDecVDPAU_NW.hpp
index 189bd239..67958eee 100644
--- src/modules/FFmpeg/FFDecVDPAU_NW.hpp
+++ src/modules/FFmpeg/FFDecVDPAU_NW.hpp
@@ -22,19 +22,19 @@
 
 class VDPAU;
 
-class FFDecVDPAU_NW final : public FFDecHWAccel
+class FFDecVDPAU_NW : public FFDecHWAccel
 {
 public:
     FFDecVDPAU_NW(Module &);
-    ~FFDecVDPAU_NW();
+    ~FFDecVDPAU_NW() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 
 private:
     VDPAU *vdpau;
diff --git src/modules/FFmpeg/FFDecVTB.cpp src/modules/FFmpeg/FFDecVTB.cpp
index 17e5d683..7749cfc6 100644
--- src/modules/FFmpeg/FFDecVTB.cpp
+++ src/modules/FFmpeg/FFDecVTB.cpp
@@ -50,7 +50,7 @@ static AVPixelFormat getVTBFormat(AVCodecContext *ctx, const AVPixelFormat *fmt)
 
 /**/
 
-class VTBHwaccel final : public HWAccelInterface
+class VTBHwaccel : public HWAccelInterface
 {
 public:
     inline VTBHwaccel() :
diff --git src/modules/FFmpeg/FFDecVTB.hpp src/modules/FFmpeg/FFDecVTB.hpp
index dbe78640..258d257c 100644
--- src/modules/FFmpeg/FFDecVTB.hpp
+++ src/modules/FFmpeg/FFDecVTB.hpp
@@ -22,22 +22,22 @@
 
 struct SwsContext;
 
-class FFDecVTB final : public FFDecHWAccel
+class FFDecVTB : public FFDecHWAccel
 {
 public:
     FFDecVTB(Module &module);
     ~FFDecVTB();
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override;
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override final;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool hasCriticalError() const override;
+    bool hasCriticalError() const override final;
 
-    bool open(StreamInfo &streamInfo, VideoWriter *writer) override;
+    bool open(StreamInfo &streamInfo, VideoWriter *writer) override final;
 
 private:
     SwsContext *m_swsCtx;
diff --git src/modules/FFmpeg/FFDemux.cpp src/modules/FFmpeg/FFDemux.cpp
index f8fa33ee..ee18a051 100644
--- src/modules/FFmpeg/FFDemux.cpp
+++ src/modules/FFmpeg/FFDemux.cpp
@@ -412,7 +412,9 @@ Playlist::Entries FFDemux::fetchTracks(const QString &url, bool &ok)
                 const double end = indexes.value(i + 1, {-1.0, -1.0}).first;
                 if (entry.url.isEmpty() || start < 0.0 || (end <= 0.0 && !lastItem))
                 {
-                    entries.removeAt(i);
+// FIXME: this should work but it fails:
+// FFDemux.cpp:415:29: error: 'using Playlist::Entries = class QVector<Playlist::Entry>' {aka 'class QVector<Playlist::Entry>'} has no member named 'removeAt'; did you mean 'remove'?
+//                    entries.removeAt(i);
                     continue;
                 }
                 const QString param = QString("CUE:%1:%2").arg(start).arg(end);
diff --git src/modules/FFmpeg/FFDemux.hpp src/modules/FFmpeg/FFDemux.hpp
index 498f4b29..d69f990f 100644
--- src/modules/FFmpeg/FFDemux.hpp
+++ src/modules/FFmpeg/FFDemux.hpp
@@ -22,42 +22,42 @@
 
 class FormatContext;
 
-class FFDemux final : public Demuxer
+class FFDemux : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(FFDemux)
 public:
     FFDemux(Module &);
 private:
-    ~FFDemux();
+    ~FFDemux() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool metadataChanged() const override;
+    bool metadataChanged() const override final;
 
-    bool isStillImage() const override;
+    bool isStillImage() const override final;
 
-    QList<ProgramInfo> getPrograms() const override;
-    QList<ChapterInfo> getChapters() const override;
+    QList<ProgramInfo> getPrograms() const override final;
+    QList<ChapterInfo> getChapters() const override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    bool getReplayGain(bool album, float &gain_db, float &peak) const override;
-    qint64 size() const override;
-    double length() const override;
-    int bitrate() const override;
-    QByteArray image(bool forceCopy) const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    bool getReplayGain(bool album, float &gain_db, float &peak) const override final;
+    qint64 size() const override final;
+    double length() const override final;
+    int bitrate() const override final;
+    QByteArray image(bool forceCopy) const override final;
 
     bool localStream() const override;
 
-    bool seek(double pos, bool backward) override;
-    bool read(Packet &encoded, int &idx) override;
-    void pause() override;
-    void abort() override;
+    bool seek(double pos, bool backward) override final;
+    bool read(Packet &encoded, int &idx) override final;
+    void pause() override final;
+    void abort() override final;
 
-    bool open(const QString &entireUrl) override;
+    bool open(const QString &entireUrl) override final;
 
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     /**/
 
diff --git src/modules/FFmpeg/FFReader.hpp src/modules/FFmpeg/FFReader.hpp
index 75caec11..0cd53f11 100644
--- src/modules/FFmpeg/FFReader.hpp
+++ src/modules/FFmpeg/FFReader.hpp
@@ -24,25 +24,25 @@
 
 struct AVIOContext;
 
-class FFReader final : public Reader
+class FFReader : public Reader
 {
 public:
     FFReader();
 private:
-    bool readyRead() const override;
-    bool canSeek() const override;
+    bool readyRead() const override final;
+    bool canSeek() const override final;
 
-    bool seek(qint64) override;
-    QByteArray read(qint64) override;
-    void pause() override;
-    bool atEnd() const override;
-    void abort() override;
+    bool seek(qint64) override final;
+    QByteArray read(qint64) override final;
+    void pause() override final;
+    bool atEnd() const override final;
+    void abort() override final;
 
-    qint64 size() const override;
-    qint64 pos() const override;
-    QString name() const override;
+    qint64 size() const override final;
+    qint64 pos() const override final;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/FFmpeg/FFmpeg.hpp src/modules/FFmpeg/FFmpeg.hpp
index 70e73d4e..0e5ad238 100644
--- src/modules/FFmpeg/FFmpeg.hpp
+++ src/modules/FFmpeg/FFmpeg.hpp
@@ -24,19 +24,19 @@
 
 class QComboBox;
 
-class FFmpeg final : public Module
+class FFmpeg : public Module
 {
     Q_DECLARE_TR_FUNCTIONS(FFmpeg)
 public:
     FFmpeg();
-    ~FFmpeg();
+    ~FFmpeg() final;
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
-    void videoDeintSave() override;
+    void videoDeintSave() override final;
 
     /**/
 
@@ -65,7 +65,7 @@ class QGroupBox;
 class QSpinBox;
 class Slider;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
 #ifdef QMPlay2_VDPAU
     Q_OBJECT
@@ -84,7 +84,7 @@ private slots:
     void checkEnables();
 #endif
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QGroupBox *demuxerB;
     QCheckBox *reconnectStreamedB;
diff --git src/modules/FFmpeg/VAAPIWriter.hpp src/modules/FFmpeg/VAAPIWriter.hpp
index c36966db..84249e53 100644
--- src/modules/FFmpeg/VAAPIWriter.hpp
+++ src/modules/FFmpeg/VAAPIWriter.hpp
@@ -24,27 +24,27 @@
 #include <QWidget>
 #include <QTimer>
 
-class VAAPIWriter final : public QWidget, public VideoWriter
+class VAAPIWriter : public QWidget, public VideoWriter
 {
     Q_OBJECT
 public:
     VAAPIWriter(Module &module, VAAPI *vaapi);
-    ~VAAPIWriter();
+    ~VAAPIWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &osd) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &osd) override final;
+    void pause() override final;
 
-    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override;
+    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
@@ -56,11 +56,11 @@ public:
 private:
     void draw(VASurfaceID id = -1, int field = -1);
 
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     void clearVaImage();
 
diff --git src/modules/FFmpeg/VDPAUWriter.hpp src/modules/FFmpeg/VDPAUWriter.hpp
index 4c6dc28f..123fb86b 100644
--- src/modules/FFmpeg/VDPAUWriter.hpp
+++ src/modules/FFmpeg/VDPAUWriter.hpp
@@ -28,27 +28,27 @@
 
 struct _XDisplay;
 
-class VDPAUWriter final : public QWidget, public VideoWriter
+class VDPAUWriter : public QWidget, public VideoWriter
 {
     Q_OBJECT
 public:
     VDPAUWriter(Module &module);
-    ~VDPAUWriter();
+    ~VDPAUWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &osd) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &osd) override final;
+    void pause() override final;
 
-    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override;
+    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
@@ -78,11 +78,11 @@ private:
     Q_SLOT void draw(VdpVideoSurface surface_id = VDP_INVALID_HANDLE);
     void vdpau_display();
 
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     void destroyOutputSurfaces();
     void clr();
diff --git src/modules/FileAssociation/FileAssociation.hpp src/modules/FileAssociation/FileAssociation.hpp
index cdaf85a9..4fbcbf68 100644
--- src/modules/FileAssociation/FileAssociation.hpp
+++ src/modules/FileAssociation/FileAssociation.hpp
@@ -20,16 +20,16 @@
 
 #include <Module.hpp>
 
-class FileAssociation final : public Module
+class FileAssociation : public Module
 {
     Q_OBJECT
 public:
     FileAssociation();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     bool reallyFirsttime;
 private slots:
@@ -43,14 +43,14 @@ class QPushButton;
 class QGroupBox;
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
     friend class FileAssociation;
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
     void addExtension(const QString &, const bool, const bool isPlaylist = false);
 private slots:
     void selectAll();
diff --git src/modules/Inputs/Inputs.hpp src/modules/Inputs/Inputs.hpp
index 9cdbcff3..5484fe53 100644
--- src/modules/Inputs/Inputs.hpp
+++ src/modules/Inputs/Inputs.hpp
@@ -20,18 +20,18 @@
 
 #include <Module.hpp>
 
-class Inputs final : public Module
+class Inputs : public Module
 {
     Q_OBJECT
 public:
     Inputs();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    QList<QAction *> getAddActions() override;
+    QList<QAction *> getAddActions() override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon toneIcon, pcmIcon, rayman2Icon;
 private slots:
@@ -43,7 +43,7 @@ private slots:
 #include <QSpinBox>
 #include <QDialog>
 
-class HzW final : public QWidget
+class HzW : public QWidget
 {
 public:
     HzW(int, const QStringList &);
@@ -60,7 +60,7 @@ private:
 
 class QGridLayout;
 
-class AddD final : public QDialog
+class AddD : public QDialog
 {
     Q_OBJECT
 public:
@@ -95,7 +95,7 @@ class QGroupBox;
 class QCheckBox;
 class QLineEdit;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
 public:
@@ -103,7 +103,7 @@ public:
 private slots:
     void applyFreqs();
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     AddD *toneGenerator;
     QGroupBox *pcmB;
diff --git src/modules/Inputs/PCM.hpp src/modules/Inputs/PCM.hpp
index eb47a911..528cb35a 100644
--- src/modules/Inputs/PCM.hpp
+++ src/modules/Inputs/PCM.hpp
@@ -24,25 +24,25 @@
 
 class Reader;
 
-class PCM final : public Demuxer
+class PCM : public Demuxer
 {
 public:
     enum FORMAT {PCM_U8, PCM_S8, PCM_S16, PCM_S24, PCM_S32, PCM_FLT, FORMAT_COUNT};
 
     PCM(Module &);
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Inputs/Rayman2.hpp src/modules/Inputs/Rayman2.hpp
index af623d90..2326a272 100644
--- src/modules/Inputs/Rayman2.hpp
+++ src/modules/Inputs/Rayman2.hpp
@@ -24,23 +24,23 @@
 
 class Reader;
 
-class Rayman2 final : public Demuxer
+class Rayman2 : public Demuxer
 {
 public:
     Rayman2(Module &);
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double pos, bool backward) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double pos, bool backward) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Inputs/ToneGenerator.cpp src/modules/Inputs/ToneGenerator.cpp
index 62ff4436..c52007bd 100644
--- src/modules/Inputs/ToneGenerator.cpp
+++ src/modules/Inputs/ToneGenerator.cpp
@@ -21,7 +21,12 @@
 #include <Functions.hpp>
 #include <Packet.hpp>
 
-#include <QUrlQuery>
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    #include <QUrl>
+    #define QUrlQuery(url) url
+#else
+    #include <QUrlQuery>
+#endif
 
 #include <cmath>
 
diff --git src/modules/Inputs/ToneGenerator.hpp src/modules/Inputs/ToneGenerator.hpp
index a84c7fb0..9b29313b 100644
--- src/modules/Inputs/ToneGenerator.hpp
+++ src/modules/Inputs/ToneGenerator.hpp
@@ -20,28 +20,28 @@
 
 #include <Demuxer.hpp>
 
-class ToneGenerator final : public Demuxer
+class ToneGenerator : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(ToneGenerator)
 public:
     ToneGenerator(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool metadataChanged() const override;
+    bool metadataChanged() const override final;
 
-    QString name() const override;
-    QString title() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool dontUseBuffer() const override;
+    bool dontUseBuffer() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Modplug/MPDemux.hpp src/modules/Modplug/MPDemux.hpp
index f96518b1..72055284 100644
--- src/modules/Modplug/MPDemux.hpp
+++ src/modules/Modplug/MPDemux.hpp
@@ -27,27 +27,27 @@ namespace QMPlay2ModPlug {
 }
 class Reader;
 
-class MPDemux final : public Demuxer
+class MPDemux : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(MPDemux)
 public:
     MPDemux(Module &);
 private:
-    ~MPDemux();
+    ~MPDemux() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Modplug/Modplug.hpp src/modules/Modplug/Modplug.hpp
index a3a881d5..889327de 100644
--- src/modules/Modplug/Modplug.hpp
+++ src/modules/Modplug/Modplug.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Modplug final : public Module
+class Modplug : public Module
 {
 public:
     Modplug();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon modIcon;
 };
@@ -40,13 +40,13 @@ private:
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
     QComboBox *resamplingB;
diff --git src/modules/Notify/Notify.hpp src/modules/Notify/Notify.hpp
index cf23928c..98c64d6a 100644
--- src/modules/Notify/Notify.hpp
+++ src/modules/Notify/Notify.hpp
@@ -20,16 +20,16 @@
 
 #include <Module.hpp>
 
-class Notify final : public Module
+class Notify : public Module
 {
 public:
     Notify();
 
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -41,7 +41,7 @@ class QCheckBox;
 class QGroupBox;
 class QLineEdit;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 
@@ -49,7 +49,7 @@ public:
     ModuleSettingsWidget(Module &module);
 
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QGroupBox *m_notify;
     QDoubleSpinBox *m_timeoutSB;
diff --git src/modules/Notify/NotifyExtension.hpp src/modules/Notify/NotifyExtension.hpp
index a32ea9ad..ca4edee6 100644
--- src/modules/Notify/NotifyExtension.hpp
+++ src/modules/Notify/NotifyExtension.hpp
@@ -22,7 +22,7 @@
 
 #include <memory>
 
-class NotifyService final : public QObject
+class NotifyService : public QObject
 {
     Q_OBJECT
 
@@ -46,14 +46,14 @@ private:
 
 /**/
 
-class NotifyExtension final : public QMPlay2Extensions
+class NotifyExtension : public QMPlay2Extensions
 {
 public:
     NotifyExtension(Module &module);
     ~NotifyExtension();
 
 private:
-    bool set() override;
+    bool set() override final;
 
     std::unique_ptr<NotifyService> m_notifyService;
 };
diff --git src/modules/OpenGL2/OpenGL2.hpp src/modules/OpenGL2/OpenGL2.hpp
index 89f22d21..24b049ed 100644
--- src/modules/OpenGL2/OpenGL2.hpp
+++ src/modules/OpenGL2/OpenGL2.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class OpenGL2 final : public Module
+class OpenGL2 : public Module
 {
 public:
     OpenGL2();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -37,13 +37,13 @@ private:
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB, *allowPboB, *hqScalingB;
     QCheckBox *forceRttB;
diff --git src/modules/OpenGL2/OpenGL2Common.cpp src/modules/OpenGL2/OpenGL2Common.cpp
index a5c451d9..ca86f4e0 100644
--- src/modules/OpenGL2/OpenGL2Common.cpp
+++ src/modules/OpenGL2/OpenGL2Common.cpp
@@ -26,9 +26,16 @@
 #include <VideoFrame.hpp>
 #include <Functions.hpp>
 
-#include <QOffscreenSurface>
-#include <QOpenGLContext>
-#include <QOpenGLShader>
+#ifdef OPENGL_NEW_API
+    #include <QOffscreenSurface>
+    #include <QOpenGLContext>
+    #include <QOpenGLShader>
+#else
+    #include <QGLContext>
+    #include <QGLShader>
+    #define QOpenGLContext QGLContext
+    #define QOpenGLShader QGLShader
+#endif
 #include <QResizeEvent>
 #include <QMatrix4x4>
 #include <QMatrix3x3>
@@ -86,7 +93,9 @@ void RotAnimation::updateCurrentValue(const QVariant &value)
 OpenGL2Common::OpenGL2Common() :
 #ifndef OPENGL_ES2
     supportsShaders(false), canCreateNonPowerOfTwoTextures(false),
+#ifndef Q_OS_MACOS
     glActiveTexture(nullptr),
+#endif
 #endif
     vSync(true),
     hwAccellnterface(nullptr),
@@ -208,7 +217,7 @@ void OpenGL2Common::initializeGL()
         return;
     }
 
-#ifndef OPENGL_ES2
+#if !defined(OPENGL_ES2) && !defined(Q_OS_MACOS)
     if (!glActiveTexture) //Be sure that "glActiveTexture" has valid pointer (don't check "supportsShaders" here)!
     {
         showOpenGLMissingFeaturesMessage();
@@ -452,7 +461,9 @@ void OpenGL2Common::paintGL()
                 return;
             for (int p = 0; p < numPlanes; ++p)
             {
+    #ifndef Q_OS_MACOS
                 glActiveTexture(GL_TEXTURE0 + p);
+    #endif
                 glBindTexture(target, textures[p + 1]);
                 if (m_useMipmaps)
                     glGenerateMipmap(target);
@@ -490,7 +501,9 @@ void OpenGL2Common::paintGL()
                         data = nullptr;
                     }
                 }
+    #ifndef Q_OS_MACOS
                 glActiveTexture(GL_TEXTURE0 + p);
+    #endif
                 glBindTexture(GL_TEXTURE_2D, textures[p + 1]);
                 if (hasPbo || correctLinesize)
                     glTexSubImage2D(GL_TEXTURE_2D, 0, 0, 0, w, h, GL_LUMINANCE, GL_UNSIGNED_BYTE, data);
@@ -611,7 +624,9 @@ void OpenGL2Common::paintGL()
     shaderProgramVideo->disableAttributeArray(texCoordYCbCrLoc);
     shaderProgramVideo->disableAttributeArray(positionYCbCrLoc);
 
+#ifndef Q_OS_MACOS
     glActiveTexture(GL_TEXTURE3);
+#endif
 
     /* OSD */
     osdMutex.lock();
@@ -736,14 +751,20 @@ void OpenGL2Common::testGLInternal()
     {
         isOK = false;
     }
-    else if (!canCreateNonPowerOfTwoTextures || !supportsShaders || !glActiveTexture)
+    else if (!canCreateNonPowerOfTwoTextures || !supportsShaders
+#ifndef Q_OS_MACOS
+    || !glActiveTexture
+#endif
+    )
     {
         showOpenGLMissingFeaturesMessage();
         isOK = false;
     }
     /* Reset variables */
     supportsShaders = canCreateNonPowerOfTwoTextures = false;
+#ifndef Q_OS_MACOS
     glActiveTexture = nullptr;
+#endif
 #endif
 
     numPlanes = 3;
@@ -862,7 +883,9 @@ bool OpenGL2Common::initGLProc()
         supportsShaders = !!strstr(glExtensions, "GL_ARB_vertex_shader") && !!strstr(glExtensions, "GL_ARB_fragment_shader") && !!strstr(glExtensions, "GL_ARB_shader_objects");
         canCreateNonPowerOfTwoTextures = !!strstr(glExtensions, "GL_ARB_texture_non_power_of_two");
     }
+#ifndef Q_OS_MACOS
     glActiveTexture = (GLActiveTexture)context->getProcAddress("glActiveTexture");
+#endif
     glGenBuffers = (GLGenBuffers)context->getProcAddress("glGenBuffers");
     glBindBuffer = (GLBindBuffer)context->getProcAddress("glBindBuffer");
     glBufferData = (GLBufferData)context->getProcAddress("glBufferData");
@@ -889,10 +912,14 @@ void OpenGL2Common::showOpenGLMissingFeaturesMessage()
         stderr,
         "GL_ARB_texture_non_power_of_two : %s\n"
         "Vertex & fragment shader: %s\n"
+#ifndef Q_OS_MACOS
         "glActiveTexture: %s\n",
+#endif
         canCreateNonPowerOfTwoTextures ? "yes" : "no",
         supportsShaders ? "yes" : "no",
+#ifndef Q_OS_MACOS
         glActiveTexture ? "yes" : "no"
+#endif
     );
     QMPlay2Core.logError("OpenGL 2 :: " + tr("Driver must support multitexturing, shaders and Non-Power-Of-Two texture size"), true, true);
 }
diff --git src/modules/OpenGL2/OpenGL2Common.hpp src/modules/OpenGL2/OpenGL2Common.hpp
index 60604799..07cd296f 100644
--- src/modules/OpenGL2/OpenGL2Common.hpp
+++ src/modules/OpenGL2/OpenGL2Common.hpp
@@ -21,7 +21,12 @@
 #include <VideoFrame.hpp>
 #include <VideoAdjustment.hpp>
 
-#include <QOpenGLShaderProgram>
+#ifdef OPENGL_NEW_API
+    #include <QOpenGLShaderProgram>
+#else
+    #include <QGLShaderProgram>
+    #define QOpenGLShaderProgram QGLShaderProgram
+#endif
 
 #include <QVariantAnimation>
 #include <QCoreApplication>
@@ -42,14 +47,14 @@ class OpenGL2Common;
 class QMPlay2OSD;
 class QMouseEvent;
 
-class RotAnimation final : public QVariantAnimation
+class RotAnimation : public QVariantAnimation
 {
 public:
     inline RotAnimation(OpenGL2Common &glCommon) :
         glCommon(glCommon)
     {}
 private:
-    void updateCurrentValue(const QVariant &value) override;
+    void updateCurrentValue(const QVariant &value) override final;
 
     OpenGL2Common &glCommon;
 };
@@ -60,7 +65,9 @@ class OpenGL2Common
 {
     Q_DECLARE_TR_FUNCTIONS(OpenGL2Common)
 #ifndef OPENGL_ES2
+#ifndef Q_OS_MACOS
     using GLActiveTexture  = void  (APIENTRY *)(GLenum);
+#endif
     using GLGenBuffers     = void  (APIENTRY *)(GLsizei, GLuint *);
     using GLBindBuffer     = void  (APIENTRY *)(GLenum, GLuint);
     using GLBufferData     = void  (APIENTRY *)(GLenum, GLsizeiptr, const void *, GLenum);
@@ -99,7 +106,9 @@ protected:
     void showOpenGLMissingFeaturesMessage();
 
     bool supportsShaders, canCreateNonPowerOfTwoTextures;
+#ifndef Q_OS_MACOS
     GLActiveTexture glActiveTexture;
+#endif
     GLGenBuffers glGenBuffers;
     GLBindBuffer glBindBuffer;
     GLBufferData glBufferData;
diff --git src/modules/OpenGL2/OpenGL2Widget.hpp src/modules/OpenGL2/OpenGL2Widget.hpp
index 3e8bc14e..1be38cc5 100644
--- src/modules/OpenGL2/OpenGL2Widget.hpp
+++ src/modules/OpenGL2/OpenGL2Widget.hpp
@@ -18,27 +18,27 @@
 
 #pragma once
 
-#include <OpenGL2Common.hpp>
+// #include <OpenGL2Common.hpp>
 
 #include <QSurfaceFormat>
 #include <QOpenGLWidget>
 
-class OpenGL2Widget final : public QOpenGLWidget, public OpenGL2Common
+class OpenGL2Widget : public QOpenGLWidget, public OpenGL2Common
 {
     Q_OBJECT
 public:
     OpenGL2Widget();
-    ~OpenGL2Widget();
+    ~OpenGL2Widget() final;
 
-    QWidget *widget() override;
+    QWidget *widget() override final;
 
-    bool setVSync(bool enable) override;
-    void updateGL(bool requestDelayed) override;
+    bool setVSync(bool enable) override final;
+    void updateGL(bool requestDelayed) override final;
 
-    void initializeGL() override;
-    void paintGL() override;
+    void initializeGL() override final;
+    void paintGL() override final;
 private slots:
     void aboutToBeDestroyed();
 private:
-    bool event(QEvent *e) override;
+    bool event(QEvent *e) override final;
 };
diff --git src/modules/OpenGL2/OpenGL2Window.hpp src/modules/OpenGL2/OpenGL2Window.hpp
index d9cbdf0b..a9a18b80 100644
--- src/modules/OpenGL2/OpenGL2Window.hpp
+++ src/modules/OpenGL2/OpenGL2Window.hpp
@@ -27,32 +27,32 @@
     #define PASS_EVENTS_TO_PARENT
 #endif
 
-class OpenGL2Window final : private QOpenGLWindow, public OpenGL2Common
+class OpenGL2Window : private QOpenGLWindow, public OpenGL2Common
 {
     Q_OBJECT
 public:
     OpenGL2Window();
-    ~OpenGL2Window();
+    ~OpenGL2Window() final;
 
-    void deleteMe() override;
+    void deleteMe() override final;
 
-    QWidget *widget() override;
+    QWidget *widget() override final;
 
-    bool setVSync(bool enable) override;
-    void updateGL(bool requestDelayed) override;
+    bool setVSync(bool enable) override final;
+    void updateGL(bool requestDelayed) override final;
 
-    void initializeGL() override;
-    void paintGL() override;
+    void initializeGL() override final;
+    void paintGL() override final;
 
 private slots:
     void doUpdateGL(bool queued = false);
     void aboutToBeDestroyed();
     void videoVisible(bool v);
 private:
-    bool eventFilter(QObject *o, QEvent *e) override;
+    bool eventFilter(QObject *o, QEvent *e) override final;
 
 #ifdef PASS_EVENTS_TO_PARENT
-    bool event(QEvent *e) override;
+    bool event(QEvent *e) override final;
 #endif
 
     QWidget *container;
diff --git src/modules/OpenGL2/OpenGL2Writer.cpp src/modules/OpenGL2/OpenGL2Writer.cpp
index 72fe4f70..d0fdc826 100644
--- src/modules/OpenGL2/OpenGL2Writer.cpp
+++ src/modules/OpenGL2/OpenGL2Writer.cpp
@@ -18,18 +18,26 @@
 
 #include <OpenGL2Writer.hpp>
 
-#include <OpenGL2Window.hpp>
-#include <OpenGL2Widget.hpp>
+#ifdef OPENGL_NEW_API
+    #include <OpenGL2Window.hpp>
+    #include <OpenGL2Widget.hpp>
+#else
+    #include <OpenGL2OldWidget.hpp>
+#endif
 
 #include <HWAccelInterface.hpp>
 #include <VideoFrame.hpp>
 
-#include <QGuiApplication>
+#ifdef OPENGL_NEW_API
+    #include <QGuiApplication>
+#endif
 
 OpenGL2Writer::OpenGL2Writer(Module &module)
     : drawable(nullptr)
     , allowPBO(true)
+#ifdef OPENGL_NEW_API
     , forceRtt(false)
+#endif
 {
     addParam("W");
     addParam("H");
@@ -70,11 +78,12 @@ bool OpenGL2Writer::set()
     if (drawable && !drawable->setVSync(vSync))
         doReset = true;
 
+#ifdef OPENGL_NEW_API
     const bool newForceRtt = sets().getBool("ForceRtt");
     if (forceRtt != newForceRtt)
         doReset = true;
     forceRtt = newForceRtt;
-
+#endif
 #ifdef Q_OS_WIN
     bool newPreventFullScreen = sets().getBool("PreventFullScreen");
     if (preventFullScreen != newPreventFullScreen)
@@ -205,8 +214,10 @@ QString OpenGL2Writer::name() const
     QString glStr = drawable->glVer ? QString("%1.%2").arg(drawable->glVer / 10).arg(drawable->glVer % 10) : "2";
     if (drawable->hwAccellnterface)
         glStr += " " + drawable->hwAccellnterface->name();
+#ifdef OPENGL_NEW_API
     if (useRtt)
         glStr += " (render-to-texture)";
+#endif
 #ifdef OPENGL_ES2
     return "OpenGL|ES " + glStr;
 #else
@@ -216,6 +227,7 @@ QString OpenGL2Writer::name() const
 
 bool OpenGL2Writer::open()
 {
+#ifdef OPENGL_NEW_API
     static const QString platformName = QGuiApplication::platformName();
     useRtt = platformName.startsWith("wayland") || platformName == "android" || forceRtt;
     if (useRtt)
@@ -228,6 +240,9 @@ bool OpenGL2Writer::open()
         drawable = new OpenGL2Widget;
     else
         drawable = new OpenGL2Window;
+#else
+    drawable = new OpenGL2OldWidget;
+#endif
     drawable->hwAccellnterface = m_hwAccelInterface;
 #ifdef Q_OS_WIN
     drawable->preventFullScreen = preventFullScreen;
diff --git src/modules/OpenGL2/OpenGL2Writer.hpp src/modules/OpenGL2/OpenGL2Writer.hpp
index 7881da78..00098ef0 100644
--- src/modules/OpenGL2/OpenGL2Writer.hpp
+++ src/modules/OpenGL2/OpenGL2Writer.hpp
@@ -24,41 +24,43 @@
 
 class OpenGL2Common;
 
-class OpenGL2Writer final : public VideoWriter
+class OpenGL2Writer : public VideoWriter
 {
     Q_DECLARE_TR_FUNCTIONS(OpenGL2Writer)
 public:
     OpenGL2Writer(Module &);
 private:
-    ~OpenGL2Writer();
+    ~OpenGL2Writer() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool hwAccelError() const override;
+    bool hwAccelError() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 
-    QMPlay2PixelFormats supportedPixelFormats() const override;
+    QMPlay2PixelFormats supportedPixelFormats() const override final;
 
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    void setHWAccelInterface(HWAccelInterface *hwAccelInterface) override;
+    void setHWAccelInterface(HWAccelInterface *hwAccelInterface) override final;
 
-    void pause() override;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
     OpenGL2Common *drawable;
     bool allowPBO;
+#ifdef OPENGL_NEW_API
     bool m_hqScaling = false;
     bool forceRtt, useRtt;
+#endif
     bool vSync;
 #ifdef Q_OS_WIN
     bool preventFullScreen;
diff --git src/modules/OpenSLES/OpenSLESWriter.hpp src/modules/OpenSLES/OpenSLESWriter.hpp
index 0d49b1a3..b1d8c428 100644
--- src/modules/OpenSLES/OpenSLESWriter.hpp
+++ src/modules/OpenSLES/OpenSLESWriter.hpp
@@ -24,24 +24,24 @@
 
 #include <SLES/OpenSLES.h>
 
-class OpenSLESWriter final : public Writer
+class OpenSLESWriter : public Writer
 {
 public:
     OpenSLESWriter(Module &);
 private:
-        ~OpenSLESWriter();
+    ~OpenSLESWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/Playlists/M3U.hpp src/modules/Playlists/M3U.hpp
index 7cbc376a..d1a82949 100644
--- src/modules/Playlists/M3U.hpp
+++ src/modules/Playlists/M3U.hpp
@@ -20,10 +20,10 @@
 
 #include <Playlist.hpp>
 
-class M3U final : public Playlist
+class M3U : public Playlist
 {
-    Entries read() override;
-    bool write(const Entries &) override;
+    Entries read() override final;
+    bool write(const Entries &) override final;
 };
 
 #define M3UName "M3U"
diff --git src/modules/Playlists/PLS.hpp src/modules/Playlists/PLS.hpp
index 2e084f67..9e119a40 100644
--- src/modules/Playlists/PLS.hpp
+++ src/modules/Playlists/PLS.hpp
@@ -20,10 +20,10 @@
 
 #include <Playlist.hpp>
 
-class PLS final : public Playlist
+class PLS : public Playlist
 {
-    Entries read() override;
-    bool write(const Entries &) override;
+    Entries read() override final;
+    bool write(const Entries &) override final;
 };
 
 #define PLSName "PLS"
diff --git src/modules/Playlists/Playlists.hpp src/modules/Playlists/Playlists.hpp
index be8691ef..7574bc55 100644
--- src/modules/Playlists/Playlists.hpp
+++ src/modules/Playlists/Playlists.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Playlists final : public Module
+class Playlists : public Module
 {
 public:
     Playlists();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -37,13 +37,13 @@ private:
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *m3uEnabledB, *xspfEnabledB;
 };
diff --git src/modules/Playlists/XSPF.hpp src/modules/Playlists/XSPF.hpp
index b30e12d2..35e6d419 100644
--- src/modules/Playlists/XSPF.hpp
+++ src/modules/Playlists/XSPF.hpp
@@ -20,10 +20,10 @@
 
 #include <Playlist.hpp>
 
-class XSPF final : public Playlist
+class XSPF : public Playlist
 {
-    Entries read() override;
-    bool write(const Entries &) override;
+    Entries read() override final;
+    bool write(const Entries &) override final;
 };
 
 #define XSPFName "XSPF"
diff --git src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.h src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.h
index 8ddf0b10..0094e9c0 100644
--- src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.h
+++ src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.h
@@ -51,6 +51,10 @@
 
 #include <CoreServices/CoreServices.h>
 #include <CoreAudio/CoreAudio.h>
+#include <AvailabilityMacros.h>
+#if MAC_OS_X_VERSION_MIN_REQUIRED < 101100
+    #define DEPRECATED_LISTENER_API
+#endif
 
 #include <qglobal.h>
 
diff --git src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.mm src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.mm
index d08a3ff6..fbadba72 100644
--- src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.mm
+++ src/modules/PortAudio/3rdparty/CoreAudio/AudioDevice.mm
@@ -49,6 +49,11 @@
 #include "AudioDevice.h"
 #import <Cocoa/Cocoa.h>
 
+#include <AvailabilityMacros.h>
+#if (MAC_OS_X_VERSION_MAX_ALLOWED < 101300) && !defined(__Verify_noErr)
+    #define __Verify_noErr verify_noerr
+#endif
+
 char *OSTStr(OSType type)
 {
     static union OSTStr {
diff --git src/modules/PortAudio/3rdparty/CoreAudio/AudioDeviceList.cpp src/modules/PortAudio/3rdparty/CoreAudio/AudioDeviceList.cpp
index 1efb0bd2..e7f32af0 100644
--- src/modules/PortAudio/3rdparty/CoreAudio/AudioDeviceList.cpp
+++ src/modules/PortAudio/3rdparty/CoreAudio/AudioDeviceList.cpp
@@ -48,6 +48,11 @@
 
 #include "AudioDeviceList.h"
 
+#include <AvailabilityMacros.h>
+#if (MAC_OS_X_VERSION_MAX_ALLOWED < 101300) && !defined(__Verify_noErr)
+    #define __Verify_noErr verify_noerr
+#endif
+
 AudioDeviceList::AudioDeviceList(bool forInput)
     : mForInput(forInput)
 {
diff --git src/modules/PortAudio/PortAudio.hpp src/modules/PortAudio/PortAudio.hpp
index a6eea8fc..55c95985 100644
--- src/modules/PortAudio/PortAudio.hpp
+++ src/modules/PortAudio/PortAudio.hpp
@@ -20,16 +20,16 @@
 
 #include <Module.hpp>
 
-class PortAudio final : public Module
+class PortAudio : public Module
 {
 public:
     PortAudio();
-        ~PortAudio();
+    ~PortAudio() final;
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     bool initialized;
 };
@@ -42,13 +42,13 @@ class QDoubleSpinBox;
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
     QComboBox *devicesB;
diff --git src/modules/PortAudio/PortAudioWriter.cpp src/modules/PortAudio/PortAudioWriter.cpp
index aead169e..45db1251 100644
--- src/modules/PortAudio/PortAudioWriter.cpp
+++ src/modules/PortAudio/PortAudioWriter.cpp
@@ -31,6 +31,10 @@
     constexpr double g_defaultHighAudioDelay = 0.1;
 #endif
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    #define QStringLiteral QString::fromUtf8
+#endif
+
 PortAudioWriter::PortAudioWriter(Module &module) :
     stream(nullptr),
     sample_rate(0),
diff --git src/modules/PortAudio/PortAudioWriter.hpp src/modules/PortAudio/PortAudioWriter.hpp
index 20ff55d8..b458e9ca 100644
--- src/modules/PortAudio/PortAudioWriter.hpp
+++ src/modules/PortAudio/PortAudioWriter.hpp
@@ -29,25 +29,25 @@
 class AudioDevice;
 #endif
 
-class PortAudioWriter final : public Writer
+class PortAudioWriter : public Writer
 {
     Q_DECLARE_TR_FUNCTIONS(PortAudioWriter)
 public:
     PortAudioWriter(Module &);
 private:
-    ~PortAudioWriter();
+    ~PortAudioWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/PulseAudio/PulseAudio.hpp src/modules/PulseAudio/PulseAudio.hpp
index 006f749d..e59f7046 100644
--- src/modules/PulseAudio/PulseAudio.hpp
+++ src/modules/PulseAudio/PulseAudio.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class PulseAudio final : public Module
+class PulseAudio : public Module
 {
 public:
     PulseAudio();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QDoubleSpinBox;
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
     QDoubleSpinBox *delayB;
diff --git src/modules/PulseAudio/PulseAudioWriter.hpp src/modules/PulseAudio/PulseAudioWriter.hpp
index 8ba6eb64..4d816b29 100644
--- src/modules/PulseAudio/PulseAudioWriter.hpp
+++ src/modules/PulseAudio/PulseAudioWriter.hpp
@@ -23,23 +23,23 @@
 
 #include <QCoreApplication>
 
-class PulseAudioWriter final : public Writer
+class PulseAudioWriter : public Writer
 {
     Q_DECLARE_TR_FUNCTIONS(PulseAudioWriter)
 public:
     PulseAudioWriter(Module &);
-    ~PulseAudioWriter();
+    ~PulseAudioWriter() final;
 private:
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/QPainter/QPainter.hpp src/modules/QPainter/QPainter.hpp
index 7257c675..b142be81 100644
--- src/modules/QPainter/QPainter.hpp
+++ src/modules/QPainter/QPainter.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class QPainterSW final : public Module
+class QPainterSW : public Module
 {
 public:
     QPainterSW();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -37,13 +37,13 @@ private:
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
 };
diff --git src/modules/QPainter/QPainterWriter.cpp src/modules/QPainter/QPainterWriter.cpp
index 92a3225f..676734d6 100644
--- src/modules/QPainter/QPainterWriter.cpp
+++ src/modules/QPainter/QPainterWriter.cpp
@@ -72,9 +72,15 @@ void Drawable::draw(const VideoFrame &newVideoFrame, bool canRepaint, bool entir
 
 void Drawable::resizeEvent(QResizeEvent *e)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     const qreal dpr = devicePixelRatioF();
     Functions::getImageSize(writer.aspect_ratio, writer.zoom, width(), height(), W, H, &X, &Y);
     Functions::getImageSize(writer.aspect_ratio, writer.zoom, width() * dpr, height() * dpr, imgW, imgH);
+#else
+    const qreal scale = QMPlay2Core.getVideoDevicePixelRatio();
+    Functions::getImageSize(writer.aspect_ratio, writer.zoom, width(), height(), W, H, &X, &Y);
+    Functions::getImageSize(writer.aspect_ratio, writer.zoom, width() * scale, height() * scale, imgW, imgH);
+#endif
     imgW = Functions::aligned(imgW, 8);
 
     imgScaler.destroy();
@@ -94,11 +100,19 @@ void Drawable::paintEvent(QPaintEvent *)
     osd_mutex.lock();
     if (!osd_list.isEmpty())
     {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         const qreal dpr = devicePixelRatioF();
         if (!qFuzzyCompare(dpr, 1.0))
             p.scale(1.0 / dpr, 1.0 / dpr);
         p.setClipRect(0, 0, imgW, imgH);
         Functions::paintOSD(true, osd_list, W * dpr / writer.outW, H * dpr / writer.outH, p);
+#else
+		const qreal scale = QMPlay2Core.getVideoDevicePixelRatio();
+		if (!qFuzzyCompare(scale, 1.0))
+			p.scale(1.0 / scale, 1.0 / scale);
+		p.setClipRect(0, 0, imgW, imgH);
+		Functions::paintOSD(true, osd_list, (qreal)W / writer.outW, (qreal)H / writer.outH, p);
+#endif
     }
     osd_mutex.unlock();
 }
diff --git src/modules/QPainter/QPainterWriter.hpp src/modules/QPainter/QPainterWriter.hpp
index f5e0a680..61991e4e 100644
--- src/modules/QPainter/QPainterWriter.hpp
+++ src/modules/QPainter/QPainterWriter.hpp
@@ -27,23 +27,23 @@
 class QPainterWriter;
 class QMPlay2OSD;
 
-class Drawable final : public QWidget
+class Drawable : public QWidget
 {
 public:
     Drawable(class QPainterWriter &);
-    ~Drawable();
+    ~Drawable() final;
 
     void draw(const VideoFrame &newVideoFrame, bool, bool);
 
-    void resizeEvent(QResizeEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
 
     VideoFrame videoFrame;
     QList<const QMPlay2OSD *> osd_list;
     int Brightness, Contrast;
     QMutex osd_mutex;
 private:
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
     int X, Y, W, H, imgW, imgH;
     QPainterWriter &writer;
@@ -54,28 +54,28 @@ private:
 
 /**/
 
-class QPainterWriter final : public VideoWriter
+class QPainterWriter : public VideoWriter
 {
     friend class Drawable;
 public:
     QPainterWriter(Module &);
 private:
-    ~QPainterWriter();
+    ~QPainterWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 
-    QMPlay2PixelFormats supportedPixelFormats() const override;
+    QMPlay2PixelFormats supportedPixelFormats() const override final;
 
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/Subtitles/Classic.cpp src/modules/Subtitles/Classic.cpp
index d5c4d003..d52c0a87 100644
--- src/modules/Subtitles/Classic.cpp
+++ src/modules/Subtitles/Classic.cpp
@@ -167,7 +167,11 @@ bool Classic::toASS(const QByteArray &txt, LibASS *ass, double fps)
                 if (use_mDVD_FPS && (s == 0 || s == 1))
                 {
                     use_mDVD_FPS = false;
+        #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
                     const double newFPS = sub.midRef(0, 6).toDouble();
+        #else
+                    const double newFPS = sub.mid(0, 6).toDouble();
+        #endif
                     if (newFPS > 0.0 && newFPS < 100.0)
                     {
                         fps = newFPS;
diff --git src/modules/Subtitles/Classic.hpp src/modules/Subtitles/Classic.hpp
index b4270f7f..db15b93d 100644
--- src/modules/Subtitles/Classic.hpp
+++ src/modules/Subtitles/Classic.hpp
@@ -20,12 +20,12 @@
 
 #include <SubsDec.hpp>
 
-class Classic final : public SubsDec
+class Classic : public SubsDec
 {
 public:
     Classic(bool, double);
 private:
-    bool toASS(const QByteArray &, class LibASS *, double) override;
+    bool toASS(const QByteArray &, class LibASS *, double) override final;
 
     /**/
 
diff --git src/modules/Subtitles/SRT.hpp src/modules/Subtitles/SRT.hpp
index 817c4b4f..d4e7f6f3 100644
--- src/modules/Subtitles/SRT.hpp
+++ src/modules/Subtitles/SRT.hpp
@@ -20,9 +20,9 @@
 
 #include <SubsDec.hpp>
 
-class SRT final : public SubsDec
+class SRT : public SubsDec
 {
-    bool toASS(const QByteArray &, class LibASS *, double) override;
+    bool toASS(const QByteArray &, class LibASS *, double) override final;
 };
 
 #define SRTSubsName "SRT Subtitles"
diff --git src/modules/Subtitles/Subtitles.hpp src/modules/Subtitles/Subtitles.hpp
index 528317b5..328137ee 100644
--- src/modules/Subtitles/Subtitles.hpp
+++ src/modules/Subtitles/Subtitles.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Subtitles final : public Module
+class Subtitles : public Module
 {
 public:
     Subtitles();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QCheckBox;
 class QDoubleSpinBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *srtEB, *classicEB, *mEB;
     QDoubleSpinBox *maxLenB;
diff --git src/modules/VideoFilters/BlendDeint.hpp src/modules/VideoFilters/BlendDeint.hpp
index 018c4f68..58c560a5 100644
--- src/modules/VideoFilters/BlendDeint.hpp
+++ src/modules/VideoFilters/BlendDeint.hpp
@@ -20,14 +20,14 @@
 
 #include <DeintFilter.hpp>
 
-class BlendDeint final : public DeintFilter
+class BlendDeint : public DeintFilter
 {
 public:
     BlendDeint();
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 };
 
 #define BlendDeintName "Blend"
diff --git src/modules/VideoFilters/BobDeint.hpp src/modules/VideoFilters/BobDeint.hpp
index 948a1ad3..0700d808 100644
--- src/modules/VideoFilters/BobDeint.hpp
+++ src/modules/VideoFilters/BobDeint.hpp
@@ -20,16 +20,16 @@
 
 #include <DeintFilter.hpp>
 
-class BobDeint final : public DeintFilter
+class BobDeint : public DeintFilter
 {
 public:
     BobDeint();
 
-    void clearBuffer() override;
+    void clearBuffer() override final;
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 private:
     bool secondFrame;
     double lastTS;
diff --git src/modules/VideoFilters/DiscardDeint.hpp src/modules/VideoFilters/DiscardDeint.hpp
index 966b761f..0312985d 100644
--- src/modules/VideoFilters/DiscardDeint.hpp
+++ src/modules/VideoFilters/DiscardDeint.hpp
@@ -20,14 +20,14 @@
 
 #include <DeintFilter.hpp>
 
-class DiscardDeint final : public DeintFilter
+class DiscardDeint : public DeintFilter
 {
 public:
     DiscardDeint();
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 };
 
 #define DiscardDeintName "Discard"
diff --git src/modules/VideoFilters/MotionBlur.hpp src/modules/VideoFilters/MotionBlur.hpp
index 666b14ec..5099b1d6 100644
--- src/modules/VideoFilters/MotionBlur.hpp
+++ src/modules/VideoFilters/MotionBlur.hpp
@@ -20,14 +20,14 @@
 
 #include <VideoFilter.hpp>
 
-class MotionBlur final : public VideoFilter
+class MotionBlur : public VideoFilter
 {
 public:
     MotionBlur();
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 };
 
 #define MotionBlurName "Motion Blur"
diff --git src/modules/VideoFilters/VFilters.hpp src/modules/VideoFilters/VFilters.hpp
index a0978e3e..1aa7221d 100644
--- src/modules/VideoFilters/VFilters.hpp
+++ src/modules/VideoFilters/VFilters.hpp
@@ -22,12 +22,12 @@
 
 #include <QCoreApplication>
 
-class VFilters final : public Module
+class VFilters : public Module
 {
     Q_DECLARE_TR_FUNCTIONS(VFilters)
 public:
     VFilters();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 };
diff --git src/modules/VideoFilters/YadifDeint.hpp src/modules/VideoFilters/YadifDeint.hpp
index 30336ff7..092c57f4 100644
--- src/modules/VideoFilters/YadifDeint.hpp
+++ src/modules/VideoFilters/YadifDeint.hpp
@@ -29,16 +29,16 @@
 
 class YadifDeint;
 
-class YadifThr final : public QThread
+class YadifThr : public QThread
 {
 public:
     YadifThr(const YadifDeint &yadifDeint);
-    ~YadifThr();
+    ~YadifThr() final;
 
     void start(VideoFrame &destFrame, const VideoFrame &prevFrame, const VideoFrame &currFrame, const VideoFrame &nextFrame, const int id, const int n);
     void waitForFinished();
 private:
-    void run() override;
+    void run() override final;
 
     const YadifDeint &yadifDeint;
 
@@ -51,17 +51,17 @@ private:
     QMutex mutex;
 };
 
-class YadifDeint final : public DeintFilter
+class YadifDeint : public DeintFilter
 {
     friend class YadifThr;
 public:
     YadifDeint(bool doubler, bool spatialCheck);
 
-    void clearBuffer() override;
+    void clearBuffer() override final;
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 private:
     inline void doFilter(VideoFrame &dest, const VideoFrame &prev, const VideoFrame &curr, const VideoFrame &next, const int id, const int jobsCount) const;
 
diff --git src/modules/Visualizations/FFTSpectrum.hpp src/modules/Visualizations/FFTSpectrum.hpp
index 6af9e602..56cc152e 100644
--- src/modules/Visualizations/FFTSpectrum.hpp
+++ src/modules/Visualizations/FFTSpectrum.hpp
@@ -26,19 +26,19 @@
 
 class FFTSpectrum;
 
-class FFTSpectrumW final : public VisWidget
+class FFTSpectrumW : public VisWidget
 {
     friend class FFTSpectrum;
     Q_DECLARE_TR_FUNCTIONS(FFTSpectrumW)
 public:
     FFTSpectrumW(FFTSpectrum &);
 private:
-    void paint(QPainter &p) override;
+    void paint(QPainter &p) override final;
 
-    void mouseMoveEvent(QMouseEvent *e) override;
+    void mouseMoveEvent(QMouseEvent *e) override final;
 
-    void start() override;
-    void stop() override;
+    void start() override final;
+    void stop() override final;
 
     QVector<float> spectrumData;
     QVector<QPair<qreal, QPair<qreal, double>>> lastData;
@@ -54,22 +54,22 @@ private:
 struct FFTContext;
 struct FFTComplex;
 
-class FFTSpectrum final : public QMPlay2Extensions
+class FFTSpectrum : public QMPlay2Extensions
 {
 public:
     FFTSpectrum(Module &);
 
     void soundBuffer(const bool);
 
-    bool set() override;
+    bool set() override final;
 private:
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool isVisualization() const override;
-    void connectDoubleClick(const QObject *, const char *) override;
-    void visState(bool, uchar, uint) override;
-    void sendSoundData(const QByteArray &) override;
-    void clearSoundData() override;
+    bool isVisualization() const override final;
+    void connectDoubleClick(const QObject *, const char *) override final;
+    void visState(bool, uchar, uint) override final;
+    void sendSoundData(const QByteArray &) override final;
+    void clearSoundData() override final;
 
     /**/
 
diff --git src/modules/Visualizations/SimpleVis.cpp src/modules/Visualizations/SimpleVis.cpp
index f9af66c2..fd67cd81 100644
--- src/modules/Visualizations/SimpleVis.cpp
+++ src/modules/Visualizations/SimpleVis.cpp
@@ -68,7 +68,7 @@ void SimpleVisW::paint(QPainter &p)
     if (size >= chn)
     {
         const float *samples = (const float *)soundData.constData();
-        const qreal dpr = devicePixelRatioF();
+        const qreal dpr = 1.0f;
 
         qreal lr[2] = {0.0f, 0.0f};
 
diff --git src/modules/Visualizations/SimpleVis.hpp src/modules/Visualizations/SimpleVis.hpp
index eb90fe90..ef25381f 100644
--- src/modules/Visualizations/SimpleVis.hpp
+++ src/modules/Visualizations/SimpleVis.hpp
@@ -26,7 +26,7 @@
 
 class SimpleVis;
 
-class SimpleVisW final : public VisWidget
+class SimpleVisW : public VisWidget
 {
     friend class SimpleVis;
 
@@ -34,12 +34,12 @@ class SimpleVisW final : public VisWidget
 public:
     SimpleVisW(SimpleVis &);
 private:
-    void paint(QPainter &p) override;
+    void paint(QPainter &p) override final;
 
-    void resizeEvent(QResizeEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
 
-    void start() override;
-    void stop() override;
+    void start() override final;
+    void stop() override final;
 
     QByteArray soundData;
     quint8 chn;
@@ -54,22 +54,22 @@ private:
 
 /**/
 
-class SimpleVis final : public QMPlay2Extensions
+class SimpleVis : public QMPlay2Extensions
 {
 public:
     SimpleVis(Module &);
 
     void soundBuffer(const bool);
 
-    bool set() override;
+    bool set() override final;
 private:
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool isVisualization() const override;
-    void connectDoubleClick(const QObject *, const char *) override;
-    void visState(bool, uchar, uint) override;
-    void sendSoundData(const QByteArray &) override;
-    void clearSoundData() override;
+    bool isVisualization() const override final;
+    void connectDoubleClick(const QObject *, const char *) override final;
+    void visState(bool, uchar, uint) override final;
+    void sendSoundData(const QByteArray &) override final;
+    void clearSoundData() override final;
 
     /**/
 
diff --git src/modules/Visualizations/Visualizations.hpp src/modules/Visualizations/Visualizations.hpp
index 4a1f2abc..7a73f268 100644
--- src/modules/Visualizations/Visualizations.hpp
+++ src/modules/Visualizations/Visualizations.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Visualizations final : public Module
+class Visualizations : public Module
 {
 public:
     Visualizations();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QCheckBox;
 class QSpinBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
 #ifdef USE_OPENGL
     QCheckBox *useOpenGLB;
diff --git src/modules/XVideo/XVideo.hpp src/modules/XVideo/XVideo.hpp
index 47767a60..52bef2a7 100644
--- src/modules/XVideo/XVideo.hpp
+++ src/modules/XVideo/XVideo.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class XVideo final : public Module
+class XVideo : public Module
 {
 public:
     XVideo();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB, *useSHMB;
     QComboBox *adaptorsB;
diff --git src/modules/XVideo/XVideoWriter.hpp src/modules/XVideo/XVideoWriter.hpp
index d71e6ec3..9345f8ff 100644
--- src/modules/XVideo/XVideoWriter.hpp
+++ src/modules/XVideo/XVideoWriter.hpp
@@ -24,18 +24,18 @@
 
 #include <QWidget>
 
-class Drawable final : public QWidget
+class Drawable : public QWidget
 {
     friend class XVideoWriter;
 public:
     Drawable(class XVideoWriter &);
     ~Drawable() final = default;
 private:
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     int X, Y, W, H;
     QRect dstRect, srcRect;
@@ -46,25 +46,25 @@ private:
 
 class QMPlay2OSD;
 
-class XVideoWriter final : public VideoWriter
+class XVideoWriter : public VideoWriter
 {
     friend class Drawable;
 public:
     XVideoWriter(Module &);
 private:
-    ~XVideoWriter();
+    ~XVideoWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/qmplay2/CMakeLists.txt src/qmplay2/CMakeLists.txt
index c70bd00c..d7509e9a 100644
--- src/qmplay2/CMakeLists.txt
+++ src/qmplay2/CMakeLists.txt
@@ -112,7 +112,7 @@ if(USE_FREEDESKTOP_NOTIFICATIONS)
     qt5_add_dbus_interface(QMPLAY2_SRC org.freedesktop.Notifications.xml notifications_interface)
     add_definitions(-DNOTIFIES_FREEDESKTOP)
     set(DBUS Qt5::DBus)
-elseif(APPLE)
+elseif(APPLE AND NOT USE_QT4)
     list(APPEND QMPLAY2_HDR headers/NotifiesMacOS.hpp)
     list(APPEND QMPLAY2_SRC NotifiesMacOS.mm)
     find_package(Qt5MacExtras REQUIRED)
@@ -195,11 +195,18 @@ add_library(${PROJECT_NAME} SHARED
 set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
 
 if(APPLE)
-    target_link_libraries(${PROJECT_NAME}
-        PRIVATE
-        Qt5::MacExtras
-        ${APPKIT_LIBRARY}
+    if(USE_QT4)
+        target_link_libraries(${PROJECT_NAME}
+            PRIVATE
+            ${APPKIT_LIBRARY}
     )
+    else()
+        target_link_libraries(${PROJECT_NAME}
+            PRIVATE
+            Qt5::MacExtras
+            ${APPKIT_LIBRARY}
+    )
+    endif()
 endif()
 
 if(WIN32)
@@ -229,14 +236,30 @@ else()
     endif()
 endif()
 
+if(USE_QT4)
+    add_definitions(-I/opt/local/include/QJson4)
+    target_link_libraries(${PROJECT_NAME}
+        PUBLIC
+        Qt4::QtCore
+        Qt4::QtGui
+        Qt4::QtSvg
+        QJson4
+    )
+else()
+    target_link_libraries(${PROJECT_NAME}
+        PUBLIC
+        Qt5::Core
+        Qt5::Gui
+        Qt5::Widgets
+        Qt5::Svg
+        PRIVATE
+        ${QML}
+    )
+endif()
+
 target_link_libraries(${PROJECT_NAME}
-    PUBLIC
-    Qt5::Core
-    Qt5::Gui
-    Qt5::Widgets
     PRIVATE
     ${DBUS}
-    ${QML}
     ${LIBQMPLAY2_LIBS}
 )
 
diff --git src/qmplay2/Functions.cpp src/qmplay2/Functions.cpp
index 572952e2..ccf97b78 100644
--- src/qmplay2/Functions.cpp
+++ src/qmplay2/Functions.cpp
@@ -36,12 +36,15 @@
 #include <QDir>
 #include <QUrl>
 #include <QRegExp>
-#include <QWindow>
 #include <QLibrary>
 #include <QTextCodec>
 #include <QMessageBox>
 #include <QStyleOption>
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QWindow>
+#endif
+
 extern "C"
 {
     #include <libavformat/version.h>
@@ -58,6 +61,7 @@ static inline void swapArray(quint8 *a, quint8 *b, int size)
     memcpy(b, t, size);
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 1, 0)
 static inline QWindow *getNativeWindow(const QWidget *w)
 {
     if (w)
@@ -67,6 +71,7 @@ static inline QWindow *getNativeWindow(const QWidget *w)
     }
     return nullptr;
 }
+#endif
 
 /**/
 
@@ -300,8 +305,12 @@ QPixmap Functions::getPixmapFromIcon(const QIcon &icon, QSize size, QWidget *w)
         imgSize = icon.availableSizes().value(0);
         imgSize.scale(size, size.isEmpty() ? Qt::KeepAspectRatioByExpanding : Qt::KeepAspectRatio);
     }
-
+#if QT_VERSION >= QT_VERSION_CHECK(5, 1, 0)
     return icon.pixmap(getNativeWindow(w), imgSize);
+#else
+	Q_UNUSED(w)
+	return icon.pixmap(imgSize);
+#endif
 }
 void Functions::drawPixmap(QPainter &p, const QPixmap &pixmap, const QWidget *w, Qt::TransformationMode transformationMode, Qt::AspectRatioMode aRatioMode, QSize size, qreal scale)
 {
@@ -347,6 +356,7 @@ void Functions::drawPixmap(QPainter &p, const QPixmap &pixmap, const QWidget *w,
         pixmapSize = pixmap.size();
     }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     const qreal dpr = w->devicePixelRatioF();
 
     pixmapToDraw = pixmapToDraw.scaled(pixmapSize * dpr, Qt::IgnoreAspectRatio, transformationMode);
@@ -356,6 +366,16 @@ void Functions::drawPixmap(QPainter &p, const QPixmap &pixmap, const QWidget *w,
         size.width()  / 2 - int(pixmapToDraw.width()  / (dpr * 2)),
         size.height() / 2 - int(pixmapToDraw.height() / (dpr * 2))
     };
+#else
+    qreal devicePixelRatio = QMPlay2Core.getVideoDevicePixelRatio();
+
+    pixmapToDraw = pixmapToDraw.scaled(pixmapSize * devicePixelRatio, Qt::IgnoreAspectRatio, transformationMode);
+
+    const QPoint pixmapPos {
+        size.width()  / 2 - int(pixmapToDraw.width()  / (devicePixelRatio * 2)),
+        size.height() / 2 - int(pixmapToDraw.height() / (devicePixelRatio * 2))
+    };
+#endif
 
     p.drawPixmap(pixmapPos, pixmapToDraw);
 }
@@ -405,8 +425,13 @@ void Functions::paintOSD(bool rgbSwapped, const QList<const QMPlay2OSD *> &osd_l
         for (int j = 0; j < osd->imageCount(); j++)
         {
             const QMPlay2OSD::Image &img = osd->getImage(j);
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
             const QImage qImg = QImage((const uchar *)img.data.constData(), img.rect.width(), img.rect.height(), rgbSwapped ? QImage::Format_RGBA8888 : QImage::Format_ARGB32);
             painter.drawImage(img.rect.topLeft(), qImg);
+    #else
+            const QImage qImg = QImage((uchar *)img.data.data(), img.rect.width(), img.rect.height(), QImage::Format_ARGB32);
+            painter.drawImage(img.rect.topLeft(), rgbSwapped ? qImg.rgbSwapped() : qImg);
+    #endif
         }
         if (osd->needsRescale())
             painter.restore();
diff --git src/qmplay2/InDockW.cpp src/qmplay2/InDockW.cpp
index 4d069ecf..ad568d6c 100644
--- src/qmplay2/InDockW.cpp
+++ src/qmplay2/InDockW.cpp
@@ -84,6 +84,15 @@ void InDockW::setWidget(QWidget *newW)
     w = newW;
     if (w)
     {
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+        // Workaround for BUG in Qt4
+        QWidget *mainWidget = window();
+        if (mainWidget && mainWidget->isMinimized() && w->internalWinId() && !internalWinId())
+        {
+            mainWidget->hide();
+            mainWidget->show();
+        }
+#endif
         w->setMinimumSize(2, 2);
         w->setParent(this);
         resizeEvent(nullptr);
diff --git src/qmplay2/LibASS.cpp src/qmplay2/LibASS.cpp
index 593f9903..01030ed2 100644
--- src/qmplay2/LibASS.cpp
+++ src/qmplay2/LibASS.cpp
@@ -131,9 +131,14 @@ LibASS::~LibASS()
 
 void LibASS::setWindowSize(int _winW, int _winH)
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     const qreal dpr = QMPlay2Core.getVideoDevicePixelRatio();
     winW = _winW * dpr;
     winH = _winH * dpr;
+#else
+	winW = _winW * QMPlay2Core.getVideoDevicePixelRatio();
+	winH = _winH * QMPlay2Core.getVideoDevicePixelRatio();
+#endif
     calcSize();
 }
 void LibASS::setARatio(double _aspect_ratio)
diff --git src/qmplay2/LineEdit.cpp src/qmplay2/LineEdit.cpp
index 6f94853d..8be1335a 100644
--- src/qmplay2/LineEdit.cpp
+++ src/qmplay2/LineEdit.cpp
@@ -1,6 +1,6 @@
 /*
     QMPlay2 is a video and audio player.
-    Copyright (C) 2010-2019  Błażej Szczygieł
+    Copyright (C) 2010-2017  Błażej Szczygieł
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU Lesser General Public License as published
@@ -18,22 +18,59 @@
 
 #include <LineEdit.hpp>
 
+
 #include <QMPlay2Core.hpp>
+#include <Functions.hpp>
 
-#include <QAction>
+#include <QResizeEvent>
+
+LineEditButton::LineEditButton()
+{
+    const QSize iconSize(16, 16);
+    setToolTip(tr("Clear"));
+    setPixmap(Functions::getPixmapFromIcon(QMPlay2Core.getIconFromTheme("edit-clear"), iconSize, this));
+    resize(iconSize);
+    setCursor(Qt::ArrowCursor);
+}
+
+void LineEditButton::mousePressEvent(QMouseEvent *e)
+{
+    if (e->button() & Qt::LeftButton)
+        emit clicked();
+}
+
+/**/
 
 LineEdit::LineEdit(QWidget *parent)
     : QLineEdit(parent)
 {
-    QAction *clearAct = addAction(QMPlay2Core.getIconFromTheme("edit-clear"), TrailingPosition);
-    connect(clearAct, &QAction::triggered, this, &LineEdit::clearText);
-    connect(this, &LineEdit::textChanged, this, [=](const QString &text) {
-        clearAct->setVisible(!text.isEmpty());
-    });
-    clearAct->setToolTip(tr("Clear"));
-    clearAct->setVisible(false);
+    connect(this, SIGNAL(textChanged(const QString &)), this, SLOT(textChangedSlot(const QString &)));
+    connect(&b, SIGNAL(clicked()), this, SLOT(clearText()));
+    setMinimumWidth(b.width() * 2.5);
+    setTextMargins(0, 0, b.width() * 1.5, 0);
+    b.setParent(this);
+    b.hide();
 }
 
+void LineEdit::resizeEvent(QResizeEvent *e)
+{
+    b.move(e->size().width() - b.width() * 1.5, e->size().height() / 2 - b.height() / 2);
+}
+void LineEdit::mousePressEvent(QMouseEvent *e)
+{
+    if (!b.underMouse())
+        QLineEdit::mousePressEvent(e);
+}
+void LineEdit::mouseMoveEvent(QMouseEvent *e)
+{
+    if (!b.underMouse())
+        QLineEdit::mouseMoveEvent(e);
+}
+
+void LineEdit::textChangedSlot(const QString &str)
+{
+    b.setVisible(!str.isEmpty());
+}
 void LineEdit::clearText()
 {
     clear();
diff --git src/qmplay2/QMPlay2Core.cpp src/qmplay2/QMPlay2Core.cpp
index 55f775da..c3b0410d 100644
--- src/qmplay2/QMPlay2Core.cpp
+++ src/qmplay2/QMPlay2Core.cpp
@@ -27,8 +27,16 @@
 #include <Playlist.hpp>
 #include <Version.hpp>
 #include <Module.hpp>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
+    #include <QLoggingCategory>
+#endif
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QWindow>
+#else
+    #define QT_VERSION_MAJOR 4
+    #define QT_VERSION_MINOR 8 // Qt 4.8.x is the oldest supported Qt version
+#endif
 
-#include <QLoggingCategory>
 #include <QApplication>
 #include <QLibraryInfo>
 #include <QTranslator>
@@ -36,13 +44,12 @@
 #include <QLibrary>
 #include <QPointer>
 #include <QLocale>
-#include <QWindow>
 #include <QFile>
 #include <QDir>
 #if defined Q_OS_WIN
     #include <windows.h>
     #include <powrprof.h>
-#elif defined Q_OS_MACOS
+#elif defined Q_OS_MACOS && (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))
     #include <QStandardPaths>
 #endif
 
@@ -58,10 +65,13 @@ extern "C"
 
 /**/
 
-Q_LOGGING_CATEGORY(ffmpeglog, "FFmpegLog")
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    Q_LOGGING_CATEGORY(ffmpeglog, "FFmpegLog")
+#endif
 
 static void avQMPlay2LogHandler(void *avcl, int level, const char *fmt, va_list vl)
 {
+  #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     if (level <= AV_LOG_FATAL)
     {
         const QByteArray msg = QString::vasprintf(fmt, vl).trimmed().toUtf8();
@@ -71,6 +81,7 @@ static void avQMPlay2LogHandler(void *avcl, int level, const char *fmt, va_list
     {
         av_log_default_callback(avcl, level, fmt, vl);
     }
+  #endif
 }
 
 /**/
@@ -109,6 +120,10 @@ QMPlay2CoreClass::QMPlay2CoreClass()
 {
     qmplay2Core = this;
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    videoDevicePixelRatio = 1.0;
+#endif
+
     QFile f(":/Languages.txt");
     if (f.open(QFile::ReadOnly))
     {
@@ -204,7 +219,11 @@ void QMPlay2CoreClass::init(bool loadModules, bool modulesInSubdirs, const QStri
 #if defined(Q_OS_WIN)
         settingsDir = QFileInfo(QSettings(QSettings::IniFormat, QSettings::UserScope, QString()).fileName()).absolutePath() + "/QMPlay2/";
 #elif defined(Q_OS_MACOS)
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
         settingsDir = Functions::cleanPath(QStandardPaths::standardLocations(QStandardPaths::DataLocation).value(0, settingsDir));
+    #else
+        settingsDir = QDir::homePath() + "/.qmplay2/";
+    #endif
 #else
         settingsDir = QDir::homePath() + "/.qmplay2/";
 #endif
@@ -414,10 +433,16 @@ QStringList QMPlay2CoreClass::getModules(const QString &type, int typeLen) const
     return modules + availableModules;
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
 qreal QMPlay2CoreClass::getVideoDevicePixelRatio() const
 {
     return getVideoDock()->devicePixelRatioF();
 }
+#else
+void QMPlay2CoreClass::setVideoDevicePixelRatio()
+{
+}
+#endif
 
 QIcon QMPlay2CoreClass::getIconFromTheme(const QString &iconName, const QIcon &fallback)
 {
diff --git src/qmplay2/QMPlay2OSD.cpp src/qmplay2/QMPlay2OSD.cpp
index d77bc2ce..b7754d36 100644
--- src/qmplay2/QMPlay2OSD.cpp
+++ src/qmplay2/QMPlay2OSD.cpp
@@ -18,12 +18,21 @@
 
 #include <QMPlay2OSD.hpp>
 
-#include <QAtomicInteger>
-static QAtomicInteger<quint64> g_id;
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QAtomicInteger>
+    static QAtomicInteger<quint64> g_id;
+#else
+    #include <QAtomicInt>
+    static QAtomicInt g_id;
+#endif
 
 void QMPlay2OSD::genId()
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     m_id = ++g_id;
+#else
+    m_id = g_id.fetchAndAddOrdered(1) + 1;
+#endif
 }
 
 void QMPlay2OSD::clear(bool all)
diff --git src/qmplay2/VideoFilters.cpp src/qmplay2/VideoFilters.cpp
index 3b1f1a7d..b9f3fda9 100644
--- src/qmplay2/VideoFilters.cpp
+++ src/qmplay2/VideoFilters.cpp
@@ -137,7 +137,7 @@ private:
 
 /**/
 
-class VideoFiltersThr final : public QThread
+class VideoFiltersThr : public QThread
 {
 public:
     VideoFiltersThr(VideoFilters &videoFilters) :
@@ -188,7 +188,7 @@ public:
 
     QMutex bufferMutex;
 private:
-    void run() override
+    void run() override final
     {
         while (!br)
         {
diff --git src/qmplay2/Writer.cpp src/qmplay2/Writer.cpp
index 5eb05afd..04cc2f58 100644
--- src/qmplay2/Writer.cpp
+++ src/qmplay2/Writer.cpp
@@ -20,9 +20,15 @@
 
 #include <Functions.hpp>
 
-#include <QSaveFile>
 #include <QBuffer>
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QSaveFile>
+#else
+    #include <QFile>
+    #define QSaveFile QFile
+#endif
+
 #include <memory>
 
 class IODeviceWriter : public Writer
@@ -50,11 +56,13 @@ protected:
 
 class QMPlay2FileWriter : public IODeviceWriter
 {
+  #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
     ~QMPlay2FileWriter()
     {
         if (auto f = static_cast<QSaveFile *>(m_io.get()))
             f->commit();
     }
+  #endif
 
     QString name() const override final
     {
diff --git src/qmplay2/YouTubeDL.cpp src/qmplay2/YouTubeDL.cpp
index f05e615b..2d3c8ace 100644
--- src/qmplay2/YouTubeDL.cpp
+++ src/qmplay2/YouTubeDL.cpp
@@ -23,14 +23,21 @@
 #include <Functions.hpp>
 #include <CppUtils.hpp>
 
-#include <QStandardPaths>
-#include <QJsonDocument>
-#include <QJsonObject>
-#include <QJsonArray>
 #include <QFileInfo>
 #include <QMutex>
 #include <QFile>
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    #include <QStandardPaths>
+    #include <QJsonDocument>
+    #include <QJsonObject>
+    #include <QJsonArray>
+#else
+    #include <QJsonDocument.h>
+    #include <QJsonObject.h>
+    #include <QJsonArray.h>
+#endif
+
 constexpr const char *g_name = "YouTubeDL";
 static bool g_mustUpdate = true;
 static QMutex g_mutex(QMutex::Recursive);
@@ -181,7 +188,11 @@ QStringList YouTubeDL::exec(const QString &url, const QStringList &args, QString
         }
         else
         {
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
             result = result.constFirst().split('\n', QString::SkipEmptyParts);
+    #else
+            result = result[0].split('\n', QString::SkipEmptyParts);
+    #endif
 
             // Verify if URLs has printable characters, because sometimes we
             // can get binary garbage at output (especially on Openload).
@@ -460,6 +471,7 @@ void YouTubeDL::startProcess(QStringList args)
         if (shebang.startsWith("#!") && idx > -1)
         {
             const auto pythonCmd = shebang.mid(idx);
+    #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
             if (!QStandardPaths::findExecutable(pythonCmd).endsWith(pythonCmd))
             {
                 QStringList pythonCmdsToCheck {
@@ -478,6 +490,7 @@ void YouTubeDL::startProcess(QStringList args)
                     }
                 }
             }
+    #endif
         }
         ytDlFile.close();
     }
diff --git src/qmplay2/headers/AudioFilter.hpp src/qmplay2/headers/AudioFilter.hpp
index 4e179e05..fa0321c5 100644
--- src/qmplay2/headers/AudioFilter.hpp
+++ src/qmplay2/headers/AudioFilter.hpp
@@ -24,7 +24,7 @@
 
 class Buffer;
 
-class QMPLAY2SHAREDLIB_EXPORT AudioFilter : public ModuleCommon
+class AudioFilter : public ModuleCommon
 {
 public:
     virtual ~AudioFilter() = default;
diff --git src/qmplay2/headers/Buffer.hpp src/qmplay2/headers/Buffer.hpp
index 0538aa70..6366ad57 100644
--- src/qmplay2/headers/Buffer.hpp
+++ src/qmplay2/headers/Buffer.hpp
@@ -18,11 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
+#include <QtGlobal>
 
 struct AVBufferRef;
 
-class QMPLAY2SHAREDLIB_EXPORT Buffer
+class Buffer
 {
     AVBufferRef *m_bufferRef = nullptr;
     qint32 m_size = 0;
diff --git src/qmplay2/headers/ColorButton.hpp src/qmplay2/headers/ColorButton.hpp
index 75aa784a..9e66c641 100644
--- src/qmplay2/headers/ColorButton.hpp
+++ src/qmplay2/headers/ColorButton.hpp
@@ -18,11 +18,9 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QPushButton>
 
-class QMPLAY2SHAREDLIB_EXPORT ColorButton final : public QPushButton
+class ColorButton : public QPushButton
 {
     Q_OBJECT
 public:
@@ -34,7 +32,7 @@ public:
         return m_color;
     }
 protected:
-    void paintEvent(QPaintEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
 private:
     QColor m_color;
     bool m_alphaChannel;
diff --git src/qmplay2/headers/CommonJS.hpp src/qmplay2/headers/CommonJS.hpp
index ffe88429..985410a9 100644
--- src/qmplay2/headers/CommonJS.hpp
+++ src/qmplay2/headers/CommonJS.hpp
@@ -1,7 +1,5 @@
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <IOController.hpp>
 
 #include <QVariantMap>
@@ -15,7 +13,7 @@ class NetworkAccessJS;
 class NetworkReply;
 class QTimer;
 
-class QMPLAY2SHAREDLIB_EXPORT CommonJS : public QObject
+class CommonJS : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/Decoder.hpp src/qmplay2/headers/Decoder.hpp
index 2361f9eb..cc5e10b9 100644
--- src/qmplay2/headers/Decoder.hpp
+++ src/qmplay2/headers/Decoder.hpp
@@ -31,7 +31,7 @@ class VideoWriter;
 class StreamInfo;
 class LibASS;
 
-class QMPLAY2SHAREDLIB_EXPORT Decoder : public ModuleCommon
+class Decoder : public ModuleCommon
 {
 public:
     static Decoder *create(StreamInfo &streamInfo, VideoWriter *writer = nullptr, const QStringList &modNames = {}, QString *modNameOutput = nullptr);
diff --git src/qmplay2/headers/DeintFilter.hpp src/qmplay2/headers/DeintFilter.hpp
index 182b2014..2339584c 100644
--- src/qmplay2/headers/DeintFilter.hpp
+++ src/qmplay2/headers/DeintFilter.hpp
@@ -21,7 +21,7 @@
 #include <VideoFilter.hpp>
 #include <VideoFrame.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT DeintFilter : public VideoFilter
+class DeintFilter : public VideoFilter
 {
 public:
     enum DeintFlags {AutoDeinterlace = 0x1, DoubleFramerate = 0x2, AutoParity = 0x4, TopFieldFirst = 0x8};
diff --git src/qmplay2/headers/Demuxer.hpp src/qmplay2/headers/Demuxer.hpp
index 5999ae31..09050479 100644
--- src/qmplay2/headers/Demuxer.hpp
+++ src/qmplay2/headers/Demuxer.hpp
@@ -26,7 +26,7 @@
 
 struct Packet;
 
-class QMPLAY2SHAREDLIB_EXPORT Demuxer : protected ModuleCommon, public BasicIO
+class Demuxer : protected ModuleCommon, public BasicIO
 {
 public:
     class FetchTracks
diff --git src/qmplay2/headers/DockWidget.hpp src/qmplay2/headers/DockWidget.hpp
index 9c9c1385..cde4fc2f 100644
--- src/qmplay2/headers/DockWidget.hpp
+++ src/qmplay2/headers/DockWidget.hpp
@@ -38,9 +38,12 @@ public:
         setTitleBarVisible(titleBarVisible);
     }
 private:
-    class QMPLAY2SHAREDLIB_EXPORT EmptyW final : public QWidget
+    class EmptyW : public QWidget
     {
-        QSize sizeHint() const override;
+#if QT_VERSION >= 0x050000 && QT_VERSION < 0x050600
+        void showEvent(QShowEvent *);
+#endif
+        QSize sizeHint() const override final;
     } emptyW;
     bool titleBarVisible, globalTitleBarVisible;
 };
diff --git src/qmplay2/headers/Functions.hpp src/qmplay2/headers/Functions.hpp
index 04440836..a5e0a0fb 100644
--- src/qmplay2/headers/Functions.hpp
+++ src/qmplay2/headers/Functions.hpp
@@ -59,21 +59,21 @@ namespace Functions
     using DemuxersInfo = QVector<DemuxerInfo>;
     using ChecksumList = QVector<quint64>;
 
-    QMPLAY2SHAREDLIB_EXPORT QDate parseVersion(const QString &dateTxt);
+    QDate parseVersion(const QString &dateTxt);
 
-    QMPLAY2SHAREDLIB_EXPORT QString Url(QString, const QString &pth = QString());
-    QMPLAY2SHAREDLIB_EXPORT QString getUrlScheme(const QString &url);
+    QString Url(QString, const QString &pth = QString());
+    QString getUrlScheme(const QString &url);
 
-    QMPLAY2SHAREDLIB_EXPORT QString timeToStr(const double t, const bool decimals = false);
+    QString timeToStr(const double t, const bool decimals = false);
 
-    QMPLAY2SHAREDLIB_EXPORT QString filePath(const QString &);
-    QMPLAY2SHAREDLIB_EXPORT QString fileName(QString, bool extension = true);
-    QMPLAY2SHAREDLIB_EXPORT QString fileExt(const QString &);
+    QString filePath(const QString &);
+    QString fileName(QString, bool extension = true);
+    QString fileExt(const QString &);
 
-    QMPLAY2SHAREDLIB_EXPORT QString cleanPath(QString);
-    QMPLAY2SHAREDLIB_EXPORT QString cleanFileName(QString, const QString &replaced = "_");
+    QString cleanPath(QString);
+    QString cleanFileName(QString, const QString &replaced = "_");
 
-    QMPLAY2SHAREDLIB_EXPORT QString sizeString(quint64);
+    QString sizeString(quint64);
 
     static inline double gettime()
     {
@@ -114,48 +114,48 @@ namespace Functions
         return val > 255 ? (quint8)255 : (val < 0 ? (quint8)0 : val);
     }
 
-    QMPLAY2SHAREDLIB_EXPORT void getImageSize(const double aspect_ratio, const double zoom, const int winW, const int winH, int &W, int &H, int *X = nullptr, int *Y = nullptr, QRect *dstRect = nullptr, const int *vidW = nullptr, const int *vidH = nullptr, QRect *srcRect = nullptr);
+    void getImageSize(const double aspect_ratio, const double zoom, const int winW, const int winH, int &W, int &H, int *X = nullptr, int *Y = nullptr, QRect *dstRect = nullptr, const int *vidW = nullptr, const int *vidH = nullptr, QRect *srcRect = nullptr);
 
-    QMPLAY2SHAREDLIB_EXPORT QPixmap getPixmapFromIcon(const QIcon &icon, QSize size, QWidget *w = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void drawPixmap(QPainter &p, const QPixmap &pixmap, const QWidget *w, Qt::TransformationMode transformationMode = Qt::SmoothTransformation, Qt::AspectRatioMode aRatioMode = Qt::KeepAspectRatio, QSize size = QSize(), qreal scale = 1.0);
+    QPixmap getPixmapFromIcon(const QIcon &icon, QSize size, QWidget *w = nullptr);
+    void drawPixmap(QPainter &p, const QPixmap &pixmap, const QWidget *w, Qt::TransformationMode transformationMode = Qt::SmoothTransformation, Qt::AspectRatioMode aRatioMode = Qt::KeepAspectRatio, QSize size = QSize(), qreal scale = 1.0);
 
-    QMPLAY2SHAREDLIB_EXPORT bool mustRepaintOSD(const QList<const QMPlay2OSD *> &osd_list, const ChecksumList &osd_ids, const qreal *scaleW = nullptr, const qreal *scaleH = nullptr, QRect *bounds = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void paintOSD(bool rgbSwapped, const QList<const QMPlay2OSD *> &osd_list, const qreal scaleW, const qreal scaleH, QPainter &painter, ChecksumList *osd_ids = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void paintOSDtoYV12(quint8 *imageData, QImage &osdImg, int W, int H, int linesizeLuma, int linesizeChroma, const QList<const QMPlay2OSD *> &osd_list, ChecksumList &osd_ids);
+    bool mustRepaintOSD(const QList<const QMPlay2OSD *> &osd_list, const ChecksumList &osd_ids, const qreal *scaleW = nullptr, const qreal *scaleH = nullptr, QRect *bounds = nullptr);
+    void paintOSD(bool rgbSwapped, const QList<const QMPlay2OSD *> &osd_list, const qreal scaleW, const qreal scaleH, QPainter &painter, ChecksumList *osd_ids = nullptr);
+    void paintOSDtoYV12(quint8 *imageData, QImage &osdImg, int W, int H, int linesizeLuma, int linesizeChroma, const QList<const QMPlay2OSD *> &osd_list, ChecksumList &osd_ids);
 
-    QMPLAY2SHAREDLIB_EXPORT QPixmap applyDropShadow(const QPixmap &input, const qreal blurRadius, const QPointF &offset, const QColor &color);
-    QMPLAY2SHAREDLIB_EXPORT QPixmap applyBlur(const QPixmap &input, const qreal blurRadius);
+    QPixmap applyDropShadow(const QPixmap &input, const qreal blurRadius, const QPointF &offset, const QColor &color);
+    QPixmap applyBlur(const QPixmap &input, const qreal blurRadius);
 
-    QMPLAY2SHAREDLIB_EXPORT void ImageEQ(int Contrast, int Brightness, quint8 *imageBits, unsigned bitsCount);
-    QMPLAY2SHAREDLIB_EXPORT int scaleEQValue(int val, int min, int max);
+    void ImageEQ(int Contrast, int Brightness, quint8 *imageBits, unsigned bitsCount);
+    int scaleEQValue(int val, int min, int max);
 
-    QMPLAY2SHAREDLIB_EXPORT int getField(const VideoFrame &videoFrame, int deinterlace, int fullFrame, int topField, int bottomField);
+    int getField(const VideoFrame &videoFrame, int deinterlace, int fullFrame, int topField, int bottomField);
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray convertToASS(QString txt);
+    QByteArray convertToASS(QString txt);
 
-    QMPLAY2SHAREDLIB_EXPORT bool chkMimeData(const QMimeData *mimeData);
-    QMPLAY2SHAREDLIB_EXPORT QStringList getUrlsFromMimeData(const QMimeData *mimeData, const bool checkExtensionsForUrl = true);
+    bool chkMimeData(const QMimeData *mimeData);
+    QStringList getUrlsFromMimeData(const QMimeData *mimeData, const bool checkExtensionsForUrl = true);
 
-    QMPLAY2SHAREDLIB_EXPORT QString maybeExtensionAddress(const QString &url);
+    QString maybeExtensionAddress(const QString &url);
 
-    QMPLAY2SHAREDLIB_EXPORT bool splitPrefixAndUrlIfHasPluginPrefix(const QString &entireUrl, QString *addressPrefixName, QString *url, QString *param = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void getDataIfHasPluginPrefix(const QString &entireUrl, QString *url = nullptr, QString *name = nullptr, QIcon *icon = nullptr, IOController<> *ioCtrl = nullptr, const DemuxersInfo &demuxersInfo = DemuxersInfo());
+    bool splitPrefixAndUrlIfHasPluginPrefix(const QString &entireUrl, QString *addressPrefixName, QString *url, QString *param = nullptr);
+    void getDataIfHasPluginPrefix(const QString &entireUrl, QString *url = nullptr, QString *name = nullptr, QIcon *icon = nullptr, IOController<> *ioCtrl = nullptr, const DemuxersInfo &demuxersInfo = DemuxersInfo());
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray getUserAgent();
-    QMPLAY2SHAREDLIB_EXPORT QString prepareFFmpegUrl(QString url, AVDictionary *&options, bool setCookies = true, bool setRawHeaders = true, bool icy = true, const QByteArray &userAgentArg = QByteArray());
+    QByteArray getUserAgent();
+    QString prepareFFmpegUrl(QString url, AVDictionary *&options, bool setCookies = true, bool setRawHeaders = true, bool icy = true, const QByteArray &userAgentArg = QByteArray());
 
-    QMPLAY2SHAREDLIB_EXPORT void hFlip(quint8 *data, int linesize, int height, int width);
-    QMPLAY2SHAREDLIB_EXPORT void vFlip(quint8 *data, int linesize, int height);
+    void hFlip(quint8 *data, int linesize, int height, int width);
+    void vFlip(quint8 *data, int linesize, int height);
 
-    QMPLAY2SHAREDLIB_EXPORT QString dBStr(double a);
+    QString dBStr(double a);
 
-    QMPLAY2SHAREDLIB_EXPORT quint32 getBestSampleRate();
+    quint32 getBestSampleRate();
 
-    QMPLAY2SHAREDLIB_EXPORT bool wrapMouse(QWidget *widget, QPoint &mousePos, int margin = 0);
+    bool wrapMouse(QWidget *widget, QPoint &mousePos, int margin = 0);
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray decryptAes256Cbc(const QByteArray &password, const QByteArray &salt, const QByteArray &ciphered);
+    QByteArray decryptAes256Cbc(const QByteArray &password, const QByteArray &salt, const QByteArray &ciphered);
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray textWithFallbackEncoding(const QByteArray &data);
+    QByteArray textWithFallbackEncoding(const QByteArray &data);
 
-    QMPLAY2SHAREDLIB_EXPORT QMatrix3x3 getYUVtoRGBmatrix(float cr, float cg, float cb, bool limited);
+    QMatrix3x3 getYUVtoRGBmatrix(float cr, float cg, float cb, bool limited);
 }
diff --git src/qmplay2/headers/IPC.hpp src/qmplay2/headers/IPC.hpp
index 4766b238..54f47443 100644
--- src/qmplay2/headers/IPC.hpp
+++ src/qmplay2/headers/IPC.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QIODevice>
 #include <QString>
 
@@ -31,18 +29,18 @@ class IPCServerPriv;
 
 class QSocketNotifier;
 
-class QMPLAY2SHAREDLIB_EXPORT IPCSocket final : public QIODevice
+class IPCSocket : public QIODevice
 {
     Q_OBJECT
     friend class IPCServer;
 public:
     IPCSocket(const QString &fileName, QObject *parent = nullptr);
-    ~IPCSocket();
+    ~IPCSocket() final;
 
     bool isConnected() const;
 
-    bool open(OpenMode mode) override;
-    void close() override;
+    bool open(OpenMode mode) override final;
+    void close() override final;
 
 private slots:
     void socketReadActive();
@@ -54,20 +52,20 @@ private:
     IPCSocket(int socket, QObject *parent);
 #endif
 
-    qint64 readData(char *data, qint64 maxSize) override;
-    qint64 writeData(const char *data, qint64 maxSize) override;
+    qint64 readData(char *data, qint64 maxSize) override final;
+    qint64 writeData(const char *data, qint64 maxSize) override final;
 
     IPCSocketPriv *m_priv;
 };
 
 /**/
 
-class QMPLAY2SHAREDLIB_EXPORT IPCServer final : public QObject
+class IPCServer : public QObject
 {
     Q_OBJECT
 public:
     IPCServer(const QString &fileName, QObject *parent = nullptr);
-    ~IPCServer();
+    ~IPCServer() final;
 
     bool listen();
     void close();
diff --git src/qmplay2/headers/ImgScaler.hpp src/qmplay2/headers/ImgScaler.hpp
index e6a35de4..9cfb8d90 100644
--- src/qmplay2/headers/ImgScaler.hpp
+++ src/qmplay2/headers/ImgScaler.hpp
@@ -18,14 +18,14 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
+#include <stddef.h>
 
 /* YUV planar to RGB32 */
 
 struct SwsContext;
 class VideoFrame;
 
-class QMPLAY2SHAREDLIB_EXPORT ImgScaler
+class ImgScaler
 {
 public:
     ImgScaler();
diff --git src/qmplay2/headers/InDockW.hpp src/qmplay2/headers/InDockW.hpp
index d4b51c50..499586cc 100644
--- src/qmplay2/headers/InDockW.hpp
+++ src/qmplay2/headers/InDockW.hpp
@@ -18,12 +18,10 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QPointer>
 #include <QWidget>
 
-class QMPLAY2SHAREDLIB_EXPORT InDockW final : public QWidget
+class InDockW : public QWidget
 {
     Q_OBJECT
 public:
@@ -41,12 +39,12 @@ private:
     QPointer<QWidget> w;
 private slots:
     void wallpaperChanged(bool hasWallpaper, double alpha);
-public:
+public slots:
     void setWidget(QWidget *newW);
 protected:
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 signals:
     void resized(int, int);
     void itemDropped(const QString &);
diff --git src/qmplay2/headers/LibASS.hpp src/qmplay2/headers/LibASS.hpp
index 88931e28..cf6f5b56 100644
--- src/qmplay2/headers/LibASS.hpp
+++ src/qmplay2/headers/LibASS.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QByteArray>
 #include <QList>
 
@@ -31,7 +29,7 @@ struct ass_track;
 struct ass_event;
 struct ass_renderer;
 
-class QMPLAY2SHAREDLIB_EXPORT LibASS
+class LibASS
 {
 public:
 #if defined Q_OS_WIN && !defined Q_OS_WIN64
diff --git src/qmplay2/headers/LineEdit.hpp src/qmplay2/headers/LineEdit.hpp
index 676be13e..fe961967 100644
--- src/qmplay2/headers/LineEdit.hpp
+++ src/qmplay2/headers/LineEdit.hpp
@@ -18,19 +18,37 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QLineEdit>
+#include <QLabel>
 
-class QMPLAY2SHAREDLIB_EXPORT LineEdit final : public QLineEdit
+class LineEditButton : public QLabel
 {
     Q_OBJECT
+public:
+    LineEditButton();
+private:
+    void mousePressEvent(QMouseEvent *) override final;
+signals:
+    void clicked();
+};
+
+/**/
 
+class LineEdit : public QLineEdit
+{
+    Q_OBJECT
 public:
     LineEdit(QWidget *parent = nullptr);
-
+private:
+    void resizeEvent(QResizeEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
+
+    LineEditButton b;
+private slots:
+    void textChangedSlot(const QString &);
+public slots:
     void clearText();
-
 signals:
     void clearButtonClicked();
 };
diff --git src/qmplay2/headers/MkvMuxer.hpp src/qmplay2/headers/MkvMuxer.hpp
index f0f71a96..63bfb8ae 100644
--- src/qmplay2/headers/MkvMuxer.hpp
+++ src/qmplay2/headers/MkvMuxer.hpp
@@ -18,15 +18,13 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QList>
 
 struct AVFormatContext;
 class StreamInfo;
 struct Packet;
 
-class QMPLAY2SHAREDLIB_EXPORT MkvMuxer
+class MkvMuxer
 {
     MkvMuxer(const MkvMuxer &) = delete;
     MkvMuxer &operator =(const MkvMuxer &) = delete;
diff --git src/qmplay2/headers/Module.hpp src/qmplay2/headers/Module.hpp
index 5fee6266..442ef070 100644
--- src/qmplay2/headers/Module.hpp
+++ src/qmplay2/headers/Module.hpp
@@ -27,7 +27,7 @@
 
 class ModuleCommon;
 
-class QMPLAY2SHAREDLIB_EXPORT Module : public Settings
+class Module : public Settings
 {
     friend class ModuleCommon;
 public:
diff --git src/qmplay2/headers/ModuleCommon.hpp src/qmplay2/headers/ModuleCommon.hpp
index 89ea8782..42bc0c40 100644
--- src/qmplay2/headers/ModuleCommon.hpp
+++ src/qmplay2/headers/ModuleCommon.hpp
@@ -20,7 +20,7 @@
 
 #include <Module.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT ModuleCommon
+class ModuleCommon
 {
 public:
     virtual bool set();
diff --git src/qmplay2/headers/ModuleParams.hpp src/qmplay2/headers/ModuleParams.hpp
index d351c08e..eff7fbf8 100644
--- src/qmplay2/headers/ModuleParams.hpp
+++ src/qmplay2/headers/ModuleParams.hpp
@@ -18,13 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QHash>
 #include <QString>
 #include <QVariant>
 
-class QMPLAY2SHAREDLIB_EXPORT ModuleParams
+class ModuleParams
 {
     Q_DISABLE_COPY(ModuleParams)
 public:
diff --git src/qmplay2/headers/NetworkAccess.hpp src/qmplay2/headers/NetworkAccess.hpp
index fef728fb..0f3fe210 100644
--- src/qmplay2/headers/NetworkAccess.hpp
+++ src/qmplay2/headers/NetworkAccess.hpp
@@ -19,14 +19,13 @@
 #pragma once
 
 #include <IOController.hpp>
-#include <QMPlay2Lib.hpp>
 
 #include <QObject>
 
 class NetworkReplyPriv;
 struct NetworkAccessParams;
 
-class QMPLAY2SHAREDLIB_EXPORT NetworkReply final : public QObject, public BasicIO
+class NetworkReply : public QObject, public BasicIO
 {
     Q_OBJECT
 
@@ -49,7 +48,9 @@ public:
         Download,
         Aborted
     };
+#if QT_VERSION >= QT_VERSION_CHECK(5, 5, 0)
     Q_ENUM(Error)
+#endif
 
     enum class Wait
     {
@@ -57,13 +58,15 @@ public:
         Timeout,
         Error
     };
+#if QT_VERSION >= QT_VERSION_CHECK(5, 5, 0)
     Q_ENUM(Wait)
+#endif
 
-    ~NetworkReply();
+    ~NetworkReply() final;
 
     QString url() const;
 
-    void abort() override;
+    void abort() override final;
 
     bool hasError() const;
     Error error() const;
@@ -86,7 +89,7 @@ private:
 
 /**/
 
-class QMPLAY2SHAREDLIB_EXPORT NetworkAccess : public QObject
+class NetworkAccess : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/NetworkAccessJS.hpp src/qmplay2/headers/NetworkAccessJS.hpp
index 8cc77097..b78a8087 100644
--- src/qmplay2/headers/NetworkAccessJS.hpp
+++ src/qmplay2/headers/NetworkAccessJS.hpp
@@ -1,14 +1,12 @@
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QtQml/QJSValue>
 #include <QVariant>
 #include <QObject>
 
 class NetworkAccess;
 
-class QMPLAY2SHAREDLIB_EXPORT NetworkAccessJS : public QObject
+class NetworkAccessJS : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/Notifies.hpp src/qmplay2/headers/Notifies.hpp
index 4e29246b..c4e88d2d 100644
--- src/qmplay2/headers/Notifies.hpp
+++ src/qmplay2/headers/Notifies.hpp
@@ -18,13 +18,12 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 class QSystemTrayIcon;
+class QString;
 class QPixmap;
 class QImage;
 
-class QMPLAY2SHAREDLIB_EXPORT Notifies
+class Notifies
 {
 public:
     static void initialize(QSystemTrayIcon *tray);
diff --git src/qmplay2/headers/NotifiesAndroid.hpp src/qmplay2/headers/NotifiesAndroid.hpp
index 7be1ac13..f07b1028 100644
--- src/qmplay2/headers/NotifiesAndroid.hpp
+++ src/qmplay2/headers/NotifiesAndroid.hpp
@@ -22,10 +22,10 @@
 
 #include <QObject>
 
-class NotifiesAndroid final : public QObject, public Notifies
+class NotifiesAndroid : public QObject, public Notifies
 {
     Q_OBJECT
 
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override final;
 };
diff --git src/qmplay2/headers/NotifiesFreedesktop.hpp src/qmplay2/headers/NotifiesFreedesktop.hpp
index 1f2f7405..8858deb6 100644
--- src/qmplay2/headers/NotifiesFreedesktop.hpp
+++ src/qmplay2/headers/NotifiesFreedesktop.hpp
@@ -26,17 +26,17 @@
 class OrgFreedesktopNotificationsInterface;
 class QDBusPendingCallWatcher;
 
-class QMPLAY2SHAREDLIB_EXPORT NotifiesFreedesktop final : public QObject, public Notifies
+class NotifiesFreedesktop : public QObject, public Notifies
 {
     Q_OBJECT
 
 public:
     NotifiesFreedesktop();
-    ~NotifiesFreedesktop();
+    ~NotifiesFreedesktop() final;
 
 private:
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override final;
 
 private slots:
     void callFinished(QDBusPendingCallWatcher *watcher);
diff --git src/qmplay2/headers/NotifiesMacOS.hpp src/qmplay2/headers/NotifiesMacOS.hpp
index 73b5f908..bc1b5745 100644
--- src/qmplay2/headers/NotifiesMacOS.hpp
+++ src/qmplay2/headers/NotifiesMacOS.hpp
@@ -22,15 +22,15 @@
 
 #include <QList>
 
-class NotifiesMacOS final : public Notifies
+class NotifiesMacOS : public Notifies
 {
 public:
     NotifiesMacOS();
-    ~NotifiesMacOS();
+    ~NotifiesMacOS() final;
 
 private:
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override final;
 
     void *m_notificationItem;
     QList<void *> m_notifications;
diff --git src/qmplay2/headers/NotifiesTray.hpp src/qmplay2/headers/NotifiesTray.hpp
index d258201d..6c859c6e 100644
--- src/qmplay2/headers/NotifiesTray.hpp
+++ src/qmplay2/headers/NotifiesTray.hpp
@@ -20,16 +20,16 @@
 
 #include <Notifies.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT NotifiesTray final : public Notifies
+class NotifiesTray : public Notifies
 {
 public:
     NotifiesTray(QSystemTrayIcon *tray);
     ~NotifiesTray() final = default;
 
 private:
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const int iconId) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const int iconId) override final;
 
     QSystemTrayIcon *m_tray;
 };
diff --git src/qmplay2/headers/Packet.hpp src/qmplay2/headers/Packet.hpp
index eab053e5..fb882a3a 100644
--- src/qmplay2/headers/Packet.hpp
+++ src/qmplay2/headers/Packet.hpp
@@ -23,7 +23,7 @@
 
 #include <QByteArray>
 
-struct QMPLAY2SHAREDLIB_EXPORT Packet : public Buffer
+struct Packet : public Buffer
 {
     TimeStamp ts;
     double duration, sampleAspectRatio = 0.0;
diff --git src/qmplay2/headers/PacketBuffer.hpp src/qmplay2/headers/PacketBuffer.hpp
index 4cc1388e..f8b3af92 100644
--- src/qmplay2/headers/PacketBuffer.hpp
+++ src/qmplay2/headers/PacketBuffer.hpp
@@ -23,7 +23,7 @@
 #include <QMutex>
 #include <QList>
 
-class QMPLAY2SHAREDLIB_EXPORT PacketBuffer : private QList<Packet>
+class PacketBuffer : private QList<Packet>
 {
     static int backwardPackets;
 public:
diff --git src/qmplay2/headers/PixelFormats.hpp src/qmplay2/headers/PixelFormats.hpp
index 52e312db..97d5f171 100644
--- src/qmplay2/headers/PixelFormats.hpp
+++ src/qmplay2/headers/PixelFormats.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QVector>
 
 enum class QMPlay2PixelFormat
@@ -60,10 +58,10 @@ struct LumaCoefficients
 
 namespace QMPlay2PixelFormatConvert {
 
-QMPLAY2SHAREDLIB_EXPORT int toFFmpeg(QMPlay2PixelFormat pixFmt);
-QMPLAY2SHAREDLIB_EXPORT QMPlay2PixelFormat fromFFmpeg(int pixFmt);
+int toFFmpeg(QMPlay2PixelFormat pixFmt);
+QMPlay2PixelFormat fromFFmpeg(int pixFmt);
 
-QMPLAY2SHAREDLIB_EXPORT QMPlay2ColorSpace fromFFmpegColorSpace(int colorSpace, int h);
-QMPLAY2SHAREDLIB_EXPORT LumaCoefficients getLumaCoeff(QMPlay2ColorSpace colorSpace);
+QMPlay2ColorSpace fromFFmpegColorSpace(int colorSpace, int h);
+LumaCoefficients getLumaCoeff(QMPlay2ColorSpace colorSpace);
 
 }
diff --git src/qmplay2/headers/Playlist.hpp src/qmplay2/headers/Playlist.hpp
index 2f059403..e150d60b 100644
--- src/qmplay2/headers/Playlist.hpp
+++ src/qmplay2/headers/Playlist.hpp
@@ -19,12 +19,11 @@
 #pragma once
 
 #include <IOController.hpp>
-#include <QMPlay2Lib.hpp>
 
 #include <QString>
 #include <QList>
 
-class QMPLAY2SHAREDLIB_EXPORT Playlist
+class Playlist
 {
 public:
     class Entry
diff --git src/qmplay2/headers/QMPlay2Core.hpp src/qmplay2/headers/QMPlay2Core.hpp
index 7c73b00c..50451d52 100644
--- src/qmplay2/headers/QMPlay2Core.hpp
+++ src/qmplay2/headers/QMPlay2Core.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QAtomicInt>
 #include <QObject>
 #include <QMutex>
@@ -39,7 +37,7 @@ class QWidget;
 class QPixmap;
 class Module;
 
-class QMPLAY2SHAREDLIB_EXPORT QMPlay2CoreClass : public QObject
+class QMPlay2CoreClass : public QObject
 {
     Q_OBJECT
 
@@ -94,7 +92,14 @@ public:
         return *settings;
     }
 
-    qreal getVideoDevicePixelRatio() const;
+//    qreal getVideoDevicePixelRatio() const;
+// Compat code
+	inline qreal getVideoDevicePixelRatio() const
+	{
+		return videoDevicePixelRatio;
+	}
+	void setVideoDevicePixelRatio();
+// Compat code end
 
     QIcon getIconFromTheme(const QString &iconName, const QIcon &fallback = QIcon());
 
@@ -211,6 +216,7 @@ private:
     QStringList logs;
     QMap<QString, QString> languages;
     QList<QPointer<QWidget>> videoFilters;
+    qreal videoDevicePixelRatio; // compat code
     QString lang;
 
     struct
diff --git src/qmplay2/headers/QMPlay2Extensions.hpp src/qmplay2/headers/QMPlay2Extensions.hpp
index 64c380fe..58dc2325 100644
--- src/qmplay2/headers/QMPlay2Extensions.hpp
+++ src/qmplay2/headers/QMPlay2Extensions.hpp
@@ -25,7 +25,7 @@
 #include <QString>
 #include <QImage>
 
-class QMPLAY2SHAREDLIB_EXPORT QMPlay2Extensions : public ModuleCommon
+class QMPlay2Extensions : public ModuleCommon
 {
 public:
     static void openExtensions();
diff --git src/qmplay2/headers/QMPlay2OSD.hpp src/qmplay2/headers/QMPlay2OSD.hpp
index df21ce31..617688a4 100644
--- src/qmplay2/headers/QMPlay2OSD.hpp
+++ src/qmplay2/headers/QMPlay2OSD.hpp
@@ -18,14 +18,12 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QMutex>
 #include <QList>
 #include <QRect>
 #include <QTime>
 
-class QMPLAY2SHAREDLIB_EXPORT QMPlay2OSD
+class QMPlay2OSD
 {
 public:
     class Image
diff --git src/qmplay2/headers/Reader.hpp src/qmplay2/headers/Reader.hpp
index 3168d49d..3d9b750b 100644
--- src/qmplay2/headers/Reader.hpp
+++ src/qmplay2/headers/Reader.hpp
@@ -22,7 +22,7 @@
 #include <ModuleParams.hpp>
 #include <IOController.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT Reader : protected ModuleCommon, public ModuleParams, public BasicIO
+class Reader : protected ModuleCommon, public ModuleParams, public BasicIO
 {
 public:
     static bool create(const QString &url, IOController<Reader> &reader, const QString &plugName = QString());
diff --git src/qmplay2/headers/Settings.hpp src/qmplay2/headers/Settings.hpp
index 1b3165f3..af49579c 100644
--- src/qmplay2/headers/Settings.hpp
+++ src/qmplay2/headers/Settings.hpp
@@ -25,7 +25,7 @@
 #include <QMap>
 #include <QSet>
 
-class QMPLAY2SHAREDLIB_EXPORT Settings : protected QSettings
+class Settings : protected QSettings
 {
     using SettingsMap = QMap<QString, QVariant>;
 public:
diff --git src/qmplay2/headers/Slider.hpp src/qmplay2/headers/Slider.hpp
index 52acb3b0..bd8b76b2 100644
--- src/qmplay2/headers/Slider.hpp
+++ src/qmplay2/headers/Slider.hpp
@@ -18,11 +18,9 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QSlider>
 
-class QMPLAY2SHAREDLIB_EXPORT Slider final : public QSlider
+class Slider : public QSlider
 {
     Q_OBJECT
 public:
@@ -45,12 +43,12 @@ public slots:
     }
     void drawRange(int first, int second);
 protected:
-    void paintEvent(QPaintEvent *) override;
-    void mousePressEvent(QMouseEvent *) override;
-    void mouseReleaseEvent(QMouseEvent *) override;
-    void mouseMoveEvent(QMouseEvent *) override;
-    void wheelEvent(QWheelEvent *) override;
-    void enterEvent(QEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
+    void mouseReleaseEvent(QMouseEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void wheelEvent(QWheelEvent *) override final;
+    void enterEvent(QEvent *) override final;
 private:
     int getMousePos(const QPoint &pos);
 
diff --git src/qmplay2/headers/SndResampler.hpp src/qmplay2/headers/SndResampler.hpp
index 6ef7681f..05c1b661 100644
--- src/qmplay2/headers/SndResampler.hpp
+++ src/qmplay2/headers/SndResampler.hpp
@@ -18,12 +18,10 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 class QByteArray;
 class Buffer;
 
-class QMPLAY2SHAREDLIB_EXPORT SndResampler
+class SndResampler
 {
 public:
     SndResampler() = default;
diff --git src/qmplay2/headers/StreamInfo.hpp src/qmplay2/headers/StreamInfo.hpp
index 6a8951ac..eaf8c5a1 100644
--- src/qmplay2/headers/StreamInfo.hpp
+++ src/qmplay2/headers/StreamInfo.hpp
@@ -18,7 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
 #include <PixelFormats.hpp>
 
 #include <QCoreApplication>
@@ -26,6 +25,10 @@
 #include <QVector>
 #include <QPair>
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+#include <qnumeric.h> // qQNaN
+#endif
+
 using QMPlay2Tag = QPair<QString, QString>;
 
 enum QMPlay2MediaType
@@ -53,7 +56,7 @@ enum QMPlay2Tags
     QMPLAY2_TAG_LYRICS,
 };
 
-class QMPLAY2SHAREDLIB_EXPORT StreamInfo
+class StreamInfo
 {
     Q_DECLARE_TR_FUNCTIONS(StreamInfo)
 public:
@@ -92,7 +95,7 @@ public:
     QMPlay2ColorSpace colorSpace = QMPlay2ColorSpace::Unknown;
 };
 
-class QMPLAY2SHAREDLIB_EXPORT StreamsInfo : public QList<StreamInfo *>
+class StreamsInfo : public QList<StreamInfo *>
 {
     Q_DISABLE_COPY(StreamsInfo)
 public:
diff --git src/qmplay2/headers/SubsDec.hpp src/qmplay2/headers/SubsDec.hpp
index 85454530..c822b6ae 100644
--- src/qmplay2/headers/SubsDec.hpp
+++ src/qmplay2/headers/SubsDec.hpp
@@ -18,13 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QStringList>
 
 class LibASS;
 
-class QMPLAY2SHAREDLIB_EXPORT SubsDec
+class SubsDec
 {
 public:
     static SubsDec *create(const QString &);
diff --git src/qmplay2/headers/TreeWidgetJS.hpp src/qmplay2/headers/TreeWidgetJS.hpp
index 490b3d71..d5e28872 100644
--- src/qmplay2/headers/TreeWidgetJS.hpp
+++ src/qmplay2/headers/TreeWidgetJS.hpp
@@ -1,12 +1,10 @@
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QObject>
 
 class QTreeWidgetItem;
 
-class QMPLAY2SHAREDLIB_EXPORT TreeWidgetItemJS : public QObject
+class TreeWidgetItemJS : public QObject
 {
     Q_OBJECT
 
@@ -30,7 +28,7 @@ private:
 
 class QTreeWidget;
 
-class QMPLAY2SHAREDLIB_EXPORT TreeWidgetJS : public QObject
+class TreeWidgetJS : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/Version.hpp src/qmplay2/headers/Version.hpp
index 6a7ff5df..486e3a0f 100644
--- src/qmplay2/headers/Version.hpp
+++ src/qmplay2/headers/Version.hpp
@@ -18,13 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QByteArray>
 
 namespace Version
 {
-    QMPLAY2SHAREDLIB_EXPORT QByteArray get();
-    QMPLAY2SHAREDLIB_EXPORT QByteArray userAgent();
-    QMPLAY2SHAREDLIB_EXPORT bool isPortable();
+	QByteArray get();
+	QByteArray userAgent();
+	bool isPortable();
 }
diff --git src/qmplay2/headers/VideoAdjustment.hpp src/qmplay2/headers/VideoAdjustment.hpp
index 94b9cd04..bf01993d 100644
--- src/qmplay2/headers/VideoAdjustment.hpp
+++ src/qmplay2/headers/VideoAdjustment.hpp
@@ -18,11 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
+#include <QtGlobal>
 
 #include <string.h>
 
-class QMPLAY2SHAREDLIB_EXPORT VideoAdjustment
+class VideoAdjustment
 {
 public:
     inline void unset()
diff --git src/qmplay2/headers/VideoFilter.hpp src/qmplay2/headers/VideoFilter.hpp
index 730d5e55..13fc3f7e 100644
--- src/qmplay2/headers/VideoFilter.hpp
+++ src/qmplay2/headers/VideoFilter.hpp
@@ -23,7 +23,7 @@
 
 #include <QQueue>
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFilter : public ModuleParams
+class VideoFilter : public ModuleParams
 {
 public:
     class FrameBuffer
diff --git src/qmplay2/headers/VideoFilters.hpp src/qmplay2/headers/VideoFilters.hpp
index fddf3b7f..9803a035 100644
--- src/qmplay2/headers/VideoFilters.hpp
+++ src/qmplay2/headers/VideoFilters.hpp
@@ -29,7 +29,7 @@
 class VideoFiltersThr;
 class TimeStamp;
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFilters
+class VideoFilters
 {
     Q_DISABLE_COPY(VideoFilters)
     friend class VideoFiltersThr;
diff --git src/qmplay2/headers/VideoFrame.hpp src/qmplay2/headers/VideoFrame.hpp
index 25ccefa5..36e7983e 100644
--- src/qmplay2/headers/VideoFrame.hpp
+++ src/qmplay2/headers/VideoFrame.hpp
@@ -21,7 +21,7 @@
 #include <Buffer.hpp>
 #include <PixelFormats.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFrameSize
+class VideoFrameSize
 {
 public:
     inline VideoFrameSize(qint32 width, qint32 height, quint8 chromaShiftW = 1, quint8 chromaShiftH = 1) :
@@ -55,7 +55,7 @@ public:
 
 struct AVFrame;
 
-class QMPLAY2SHAREDLIB_EXPORT AVFrameHolder
+class AVFrameHolder
 {
 public:
     AVFrameHolder() = default;
@@ -74,7 +74,7 @@ private:
 
 /**/
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFrame
+class VideoFrame
 {
 public:
     VideoFrame(const VideoFrameSize &size, AVBufferRef *bufferRef[], const qint32 newLinesize[], bool interlaced, bool tff);
diff --git src/qmplay2/headers/VideoWriter.hpp src/qmplay2/headers/VideoWriter.hpp
index 2c9dd349..43e5ba3f 100644
--- src/qmplay2/headers/VideoWriter.hpp
+++ src/qmplay2/headers/VideoWriter.hpp
@@ -26,7 +26,7 @@ class QMPlay2OSD;
 class VideoFrame;
 class ImgScaler;
 
-class QMPLAY2SHAREDLIB_EXPORT VideoWriter : public Writer
+class VideoWriter : public Writer
 {
 public:
     static VideoWriter *createOpenGL2(HWAccelInterface *hwAccelInterface);
diff --git src/qmplay2/headers/Writer.hpp src/qmplay2/headers/Writer.hpp
index 2c83cc5b..16103d58 100644
--- src/qmplay2/headers/Writer.hpp
+++ src/qmplay2/headers/Writer.hpp
@@ -24,7 +24,7 @@
 
 #include <QStringList>
 
-class QMPLAY2SHAREDLIB_EXPORT Writer : public ModuleCommon, public ModuleParams, public BasicIO
+class Writer : public ModuleCommon, public ModuleParams, public BasicIO
 {
 public:
     static Writer *create(const QString &, const QStringList &modNames = {});
diff --git src/qmplay2/headers/YouTubeDL.hpp src/qmplay2/headers/YouTubeDL.hpp
index 76e0d2ce..beb55ced 100644
--- src/qmplay2/headers/YouTubeDL.hpp
+++ src/qmplay2/headers/YouTubeDL.hpp
@@ -26,7 +26,7 @@
 
 class NetworkReply;
 
-class QMPLAY2SHAREDLIB_EXPORT YouTubeDL final : public BasicIO
+class YouTubeDL : public BasicIO
 {
     Q_DECLARE_TR_FUNCTIONS(YouTubeDL)
     Q_DISABLE_COPY(YouTubeDL)
@@ -38,14 +38,14 @@ public:
     static bool fixUrl(const QString &url, QString &outUrl, IOController<> *ioCtrl, QString *name, QString *extension, QString *error);
 
     YouTubeDL();
-    ~YouTubeDL();
+    ~YouTubeDL() final;
 
     void addr(const QString &url, const QString &param, QString *streamUrl, QString *name, QString *extension, QString *err = nullptr);
 
     QStringList exec(const QString &url, const QStringList &args, QString *silentErr = nullptr, bool rawOutput = false);
 
 private:
-    void abort() override;
+    void abort() override final;
 
 private:
     bool prepare();
-- 
2.48.0

