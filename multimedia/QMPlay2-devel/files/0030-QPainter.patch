From b562499b1748556c937cf708251310ab2dc736e7 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Tue, 15 Apr 2025 22:12:42 +0800
Subject: [PATCH 30/60] QPainter*.*

---
 src/modules/QPainter/QPainter.hpp       | 12 +++++-----
 src/modules/QPainter/QPainterWriter.cpp | 14 +++++++-----
 src/modules/QPainter/QPainterWriter.hpp | 30 ++++++++++++-------------
 3 files changed, 29 insertions(+), 27 deletions(-)

diff --git a/src/modules/QPainter/QPainter.hpp b/src/modules/QPainter/QPainter.hpp
index 7257c675..b142be81 100644
--- a/src/modules/QPainter/QPainter.hpp
+++ b/src/modules/QPainter/QPainter.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class QPainterSW final : public Module
+class QPainterSW : public Module
 {
 public:
     QPainterSW();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -37,13 +37,13 @@ private:
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
 };
diff --git a/src/modules/QPainter/QPainterWriter.cpp b/src/modules/QPainter/QPainterWriter.cpp
index 92a3225f..fcb11587 100644
--- a/src/modules/QPainter/QPainterWriter.cpp
+++ b/src/modules/QPainter/QPainterWriter.cpp
@@ -72,9 +72,9 @@ void Drawable::draw(const VideoFrame &newVideoFrame, bool canRepaint, bool entir
 
 void Drawable::resizeEvent(QResizeEvent *e)
 {
-    const qreal dpr = devicePixelRatioF();
+    const qreal scale = QMPlay2Core.getVideoDevicePixelRatio();
     Functions::getImageSize(writer.aspect_ratio, writer.zoom, width(), height(), W, H, &X, &Y);
-    Functions::getImageSize(writer.aspect_ratio, writer.zoom, width() * dpr, height() * dpr, imgW, imgH);
+    Functions::getImageSize(writer.aspect_ratio, writer.zoom, width() * scale, height() * scale, imgW, imgH);
     imgW = Functions::aligned(imgW, 8);
 
     imgScaler.destroy();
@@ -82,6 +82,7 @@ void Drawable::resizeEvent(QResizeEvent *e)
 
     draw(VideoFrame(), e ? false : true, true);
 }
+
 void Drawable::paintEvent(QPaintEvent *)
 {
     QPainter p(this);
@@ -94,14 +95,15 @@ void Drawable::paintEvent(QPaintEvent *)
     osd_mutex.lock();
     if (!osd_list.isEmpty())
     {
-        const qreal dpr = devicePixelRatioF();
-        if (!qFuzzyCompare(dpr, 1.0))
-            p.scale(1.0 / dpr, 1.0 / dpr);
+        const qreal scale = QMPlay2Core.getVideoDevicePixelRatio();
+        if (!qFuzzyCompare(scale, 1.0))
+            p.scale(1.0 / scale, 1.0 / scale);
         p.setClipRect(0, 0, imgW, imgH);
-        Functions::paintOSD(true, osd_list, W * dpr / writer.outW, H * dpr / writer.outH, p);
+        Functions::paintOSD(true, osd_list, (qreal)W / writer.outW, (qreal)H / writer.outH, p);
     }
     osd_mutex.unlock();
 }
+
 bool Drawable::event(QEvent *e)
 {
     /* Pass gesture and touch event to the parent */
diff --git a/src/modules/QPainter/QPainterWriter.hpp b/src/modules/QPainter/QPainterWriter.hpp
index f5e0a680..61991e4e 100644
--- a/src/modules/QPainter/QPainterWriter.hpp
+++ b/src/modules/QPainter/QPainterWriter.hpp
@@ -27,23 +27,23 @@
 class QPainterWriter;
 class QMPlay2OSD;
 
-class Drawable final : public QWidget
+class Drawable : public QWidget
 {
 public:
     Drawable(class QPainterWriter &);
-    ~Drawable();
+    ~Drawable() final;
 
     void draw(const VideoFrame &newVideoFrame, bool, bool);
 
-    void resizeEvent(QResizeEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
 
     VideoFrame videoFrame;
     QList<const QMPlay2OSD *> osd_list;
     int Brightness, Contrast;
     QMutex osd_mutex;
 private:
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
     int X, Y, W, H, imgW, imgH;
     QPainterWriter &writer;
@@ -54,28 +54,28 @@ private:
 
 /**/
 
-class QPainterWriter final : public VideoWriter
+class QPainterWriter : public VideoWriter
 {
     friend class Drawable;
 public:
     QPainterWriter(Module &);
 private:
-    ~QPainterWriter();
+    ~QPainterWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 
-    QMPlay2PixelFormats supportedPixelFormats() const override;
+    QMPlay2PixelFormats supportedPixelFormats() const override final;
 
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
-- 
2.49.0

