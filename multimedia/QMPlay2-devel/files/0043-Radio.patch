From 61b8a5161e598e0526f96062e68b5a3cef26f524 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Wed, 16 Apr 2025 02:04:31 +0800
Subject: [PATCH 43/60] Radio.*

---
 src/modules/Extensions/Radio.cpp              | 23 ++++++++++++++++---
 src/modules/Extensions/Radio.hpp              | 11 +++++----
 .../Extensions/Radio/RadioBrowserModel.hpp    | 18 +++++++--------
 3 files changed, 36 insertions(+), 16 deletions(-)

diff --git a/src/modules/Extensions/Radio.cpp b/src/modules/Extensions/Radio.cpp
index 16b07f7b..92348b29 100644
--- a/src/modules/Extensions/Radio.cpp
+++ b/src/modules/Extensions/Radio.cpp
@@ -110,9 +110,7 @@ Radio::Radio(Module &module) :
     connect(m_net, SIGNAL(finished(NetworkReply *)), this, SLOT(replyFinished(NetworkReply *)));
 
     m_tabChangedOnVisibilityTimer->setSingleShot(true);
-    connect(m_tabChangedOnVisibilityTimer, &QTimer::timeout, this, [=] {
-        tabChanged(currentIndex());
-    });
+    connect(m_tabChangedOnVisibilityTimer, SIGNAL(timeout()), this, SLOT(triggerTabChanged()));
 }
 Radio::~Radio()
 {
@@ -222,6 +220,7 @@ void Radio::searchData()
     ui->radioView->setEnabled(false);
     ui->filterEdit->clear();
 }
+
 void Radio::searchFinished()
 {
     ui->radioView->setEnabled(true);
@@ -286,6 +285,7 @@ void Radio::on_addMyRadioStationButton_clicked()
             addMyRadioStation(name, address);
     }
 }
+
 void Radio::on_editMyRadioStationButton_clicked()
 {
     if (QListWidgetItem *item = ui->myRadioListWidget->currentItem())
@@ -301,10 +301,12 @@ void Radio::on_editMyRadioStationButton_clicked()
         }
     }
 }
+
 void Radio::on_removeMyRadioStationButton_clicked()
 {
     delete ui->myRadioListWidget->currentItem();
 }
+
 void Radio::on_loadMyRadioStationButton_clicked()
 {
     const QString filePath = QFileDialog::getOpenFileName(this, tr("Load radio station list"), QString(), g_fileDialogFilter);
@@ -313,6 +315,7 @@ void Radio::on_loadMyRadioStationButton_clicked()
         loadMyRadios(QSettings(filePath, QSettings::IniFormat).value("Radia").toStringList());
     }
 }
+
 void Radio::on_saveMyRadioStationButton_clicked()
 {
     QString filePath = QFileDialog::getSaveFileName(this, tr("Save radio station list"), QString(), g_fileDialogFilter);
@@ -328,6 +331,7 @@ void Radio::on_myRadioListWidget_itemDoubleClicked(QListWidgetItem *item)
 {
     firstTabItemDoubleClicked(item);
 }
+
 void Radio::on_qmplay2RadioListWidget_itemDoubleClicked(QListWidgetItem *item)
 {
     firstTabItemDoubleClicked(item);
@@ -371,14 +375,17 @@ void Radio::on_searchByComboBox_activated(int idx)
         ui->searchComboBox->setInsertPolicy(QComboBox::InsertAtBottom);
     }
 }
+
 void Radio::on_addRadioBrowserStationButton_clicked()
 {
     QDesktopServices::openUrl(QUrl("http://www.radio-browser.info/gui/#/add"));
 }
+
 void Radio::on_radioView_doubleClicked(const QModelIndex &index)
 {
     radioBrowserPlayOrEnqueue(index, "open");
 }
+
 void Radio::on_radioView_customContextMenuRequested(const QPoint &pos)
 {
     if (ui->radioView->currentIndex().isValid())
@@ -391,6 +398,7 @@ void Radio::radioBrowserPlay()
     if (index.isValid())
         radioBrowserPlayOrEnqueue(index, "open");
 }
+
 void Radio::radioBrowserAdd()
 {
     const QModelIndex index = ui->radioView->currentIndex();
@@ -401,18 +409,21 @@ void Radio::radioBrowserAdd()
         addMyRadioStation(title, url);
     }
 }
+
 void Radio::radioBrowserEnqueue()
 {
     const QModelIndex index = ui->radioView->currentIndex();
     if (index.isValid())
         radioBrowserPlayOrEnqueue(index, "enqueue");
 }
+
 void Radio::radioBrowserOpenHomePage()
 {
     const QModelIndex index = ui->radioView->currentIndex();
     if (index.isValid())
         QDesktopServices::openUrl(m_radioBrowserModel->getHomePageUrl(index));
 }
+
 void Radio::radioBrowserEdit()
 {
     const QModelIndex index = ui->radioView->currentIndex();
@@ -496,6 +507,7 @@ QStringList Radio::getMyRadios() const
         myRadios += item->text() + '\n' + item->data(Qt::UserRole).toString();
     return myRadios;
 }
+
 void Radio::loadMyRadios(const QStringList &radios)
 {
     ui->myRadioListWidget->clear();
@@ -540,3 +552,8 @@ bool Radio::eventFilter(QObject *watched, QEvent *event)
     }
     return QTabWidget::eventFilter(watched, event);
 }
+
+void Radio::triggerTabChanged()
+{
+    tabChanged(currentIndex());
+}
diff --git a/src/modules/Extensions/Radio.hpp b/src/modules/Extensions/Radio.hpp
index 1bf167a5..a5e95949 100644
--- a/src/modules/Extensions/Radio.hpp
+++ b/src/modules/Extensions/Radio.hpp
@@ -24,6 +24,7 @@
 #include <QPointer>
 #include <QIcon>
 #include <QMap>
+#include <QModelIndex>
 
 namespace Ui {
     class Radio;
@@ -36,21 +37,23 @@ class NetworkReply;
 class QTimer;
 class QMenu;
 
-class Radio final : public QTabWidget, public QMPlay2Extensions
+class Radio : public QTabWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     Radio(Module &);
-    ~Radio();
+    ~Radio() final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
 private slots:
     void visibilityChanged(const bool v);
 
     void tabChanged(int index);
 
+    void triggerTabChanged();
+
     void qmplay2RadioStationsFinished();
 
     void searchData();
@@ -95,7 +98,7 @@ private:
     void loadMyRadios(const QStringList &radios);
 
 private:
-    bool eventFilter(QObject *watched, QEvent *event) override;
+    bool eventFilter(QObject *watched, QEvent *event) override final;
 
 private:
     const QString m_newStationTxt;
diff --git a/src/modules/Extensions/Radio/RadioBrowserModel.hpp b/src/modules/Extensions/Radio/RadioBrowserModel.hpp
index 9ecd5270..42586e28 100644
--- a/src/modules/Extensions/Radio/RadioBrowserModel.hpp
+++ b/src/modules/Extensions/Radio/RadioBrowserModel.hpp
@@ -30,7 +30,7 @@ class NetworkAccess;
 class NetworkReply;
 struct Column;
 
-class RadioBrowserModel final : public QAbstractItemModel
+class RadioBrowserModel : public QAbstractItemModel
 {
     Q_OBJECT
 
@@ -49,14 +49,14 @@ public:
     QUrl getEditUrl(const QModelIndex &index) const;
     QUrl getHomePageUrl(const QModelIndex &index) const;
 
-    QModelIndex index(int row, int column, const QModelIndex &parent) const override;
-    QModelIndex parent(const QModelIndex &child) const override;
-    int rowCount(const QModelIndex &parent) const override;
-    int columnCount(const QModelIndex &parent) const override;
-    QVariant data(const QModelIndex &index, int role) const override;
-    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override;
-    Qt::ItemFlags flags(const QModelIndex &index) const override;
-    void sort(int columnIdx, Qt::SortOrder order = Qt::AscendingOrder) override;
+    QModelIndex index(int row, int column, const QModelIndex &parent) const override final;
+    QModelIndex parent(const QModelIndex &child) const override final;
+    int rowCount(const QModelIndex &parent) const override final;
+    int columnCount(const QModelIndex &parent) const override final;
+    QVariant data(const QModelIndex &index, int role) const override final;
+    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override final;
+    Qt::ItemFlags flags(const QModelIndex &index) const override final;
+    void sort(int columnIdx, Qt::SortOrder order = Qt::AscendingOrder) override final;
 
 public slots:
     void setFiltrText(const QString &text = QString());
-- 
2.49.0

