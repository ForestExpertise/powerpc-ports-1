From f826cf2d053b6f5081408da8444a0e6b82c1851d Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Wed, 16 Apr 2025 01:37:14 +0800
Subject: [PATCH 36/60] AudioFilters: override final

---
 src/modules/AudioFilters/AudioFilters.hpp    | 12 ++++++------
 src/modules/AudioFilters/BS2B.hpp            | 12 ++++++------
 src/modules/AudioFilters/DysonCompressor.hpp | 14 +++++++-------
 src/modules/AudioFilters/Echo.hpp            |  8 ++++----
 src/modules/AudioFilters/Equalizer.hpp       | 14 +++++++-------
 src/modules/AudioFilters/EqualizerGUI.hpp    | 12 ++++++------
 src/modules/AudioFilters/PhaseReverse.hpp    |  8 ++++----
 src/modules/AudioFilters/VoiceRemoval.hpp    |  8 ++++----
 8 files changed, 44 insertions(+), 44 deletions(-)

diff --git a/src/modules/AudioFilters/AudioFilters.hpp b/src/modules/AudioFilters/AudioFilters.hpp
index 6823f625..02d3d1c1 100644
--- a/src/modules/AudioFilters/AudioFilters.hpp
+++ b/src/modules/AudioFilters/AudioFilters.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class AudioFilters final : public Module
+class AudioFilters : public Module
 {
 public:
     AudioFilters();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -41,7 +41,7 @@ class QComboBox;
 class QSpinBox;
 class Slider;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
 public:
@@ -55,7 +55,7 @@ private slots:
     void compressor();
     void defaultSettings();
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     bool restoringDefault;
 
diff --git a/src/modules/AudioFilters/BS2B.hpp b/src/modules/AudioFilters/BS2B.hpp
index f62e4235..00822620 100644
--- a/src/modules/AudioFilters/BS2B.hpp
+++ b/src/modules/AudioFilters/BS2B.hpp
@@ -22,17 +22,17 @@
 
 #include <bs2b/bs2b.hpp>
 
-class BS2B final : public AudioFilter
+class BS2B : public AudioFilter
 {
 public:
     BS2B(Module &module);
-    ~BS2B();
+    ~BS2B() final;
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint srate) override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar, uint srate) override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     void alloc();
 
diff --git a/src/modules/AudioFilters/DysonCompressor.hpp b/src/modules/AudioFilters/DysonCompressor.hpp
index 2f2b086f..69409429 100644
--- a/src/modules/AudioFilters/DysonCompressor.hpp
+++ b/src/modules/AudioFilters/DysonCompressor.hpp
@@ -25,19 +25,19 @@
 #define NFILT  12
 #define NEFILT 17
 
-class DysonCompressor final : public AudioFilter
+class DysonCompressor : public AudioFilter
 {
 public:
     DysonCompressor(Module &module);
-    ~DysonCompressor();
+    ~DysonCompressor() final;
 
-    bool set() override;
+    bool set() override final;
 
 private:
-    bool setAudioParameters(uchar chn, uint srate) override;
-    int bufferedSamples() const override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar chn, uint srate) override final;
+    int bufferedSamples() const override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     using FloatVector = QVector<float>;
 
diff --git a/src/modules/AudioFilters/Echo.hpp b/src/modules/AudioFilters/Echo.hpp
index c418ec3c..5ad34e3e 100644
--- a/src/modules/AudioFilters/Echo.hpp
+++ b/src/modules/AudioFilters/Echo.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class Echo final : public AudioFilter
+class Echo : public AudioFilter
 {
 public:
     Echo(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     void alloc(bool);
 
diff --git a/src/modules/AudioFilters/Equalizer.hpp b/src/modules/AudioFilters/Equalizer.hpp
index 7c8d9665..f6b79283 100644
--- a/src/modules/AudioFilters/Equalizer.hpp
+++ b/src/modules/AudioFilters/Equalizer.hpp
@@ -23,7 +23,7 @@
 struct FFTContext;
 struct FFTComplex;
 
-class Equalizer final : public AudioFilter
+class Equalizer : public AudioFilter
 {
 public:
     static QVector<float> interpolate(const QVector<float> &, const int);
@@ -31,14 +31,14 @@ public:
     static float getAmpl(int val);
 
     Equalizer(Module &);
-    ~Equalizer();
+    ~Equalizer() final;
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    int bufferedSamples() const override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar, uint) override final;
+    int bufferedSamples() const override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     /**/
 
diff --git a/src/modules/AudioFilters/EqualizerGUI.hpp b/src/modules/AudioFilters/EqualizerGUI.hpp
index eb48d902..52aa4293 100644
--- a/src/modules/AudioFilters/EqualizerGUI.hpp
+++ b/src/modules/AudioFilters/EqualizerGUI.hpp
@@ -20,7 +20,7 @@
 
 #include <QMPlay2Extensions.hpp>
 
-class GraphW final : public QWidget
+class GraphW : public QWidget
 {
 public:
     GraphW();
@@ -31,7 +31,7 @@ public:
         values.resize(vals);
     }
 private:
-    void paintEvent(QPaintEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
 
     QVector<float> values;
     float preamp;
@@ -44,15 +44,15 @@ class QCheckBox;
 class QSlider;
 class QMenu;
 
-class EqualizerGUI final : public QWidget, public QMPlay2Extensions
+class EqualizerGUI : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 public:
     EqualizerGUI(Module &);
 
-    bool set() override;
+    bool set() override final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 private slots:
     void wallpaperChanged(bool hasWallpaper, double alpha);
     void enabled(bool);
@@ -80,7 +80,7 @@ private:
 
     void loadPresets();
 
-    void showEvent(QShowEvent *event) override;
+    void showEvent(QShowEvent *event) override final;
 
     QMap<int, int> getPresetValues(const QString &name);
 
diff --git a/src/modules/AudioFilters/PhaseReverse.hpp b/src/modules/AudioFilters/PhaseReverse.hpp
index 470aad80..59fe4456 100644
--- a/src/modules/AudioFilters/PhaseReverse.hpp
+++ b/src/modules/AudioFilters/PhaseReverse.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class PhaseReverse final : public AudioFilter
+class PhaseReverse : public AudioFilter
 {
 public:
     PhaseReverse(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     bool enabled, hasParameters, canFilter, reverseRight;
     uchar chn;
diff --git a/src/modules/AudioFilters/VoiceRemoval.hpp b/src/modules/AudioFilters/VoiceRemoval.hpp
index b67e6844..024c98af 100644
--- a/src/modules/AudioFilters/VoiceRemoval.hpp
+++ b/src/modules/AudioFilters/VoiceRemoval.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class VoiceRemoval final : public AudioFilter
+class VoiceRemoval : public AudioFilter
 {
 public:
     VoiceRemoval(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     bool enabled, hasParameters, canFilter;
     uchar chn;
-- 
2.49.0

