From c501cca32676635400f3ee76c9fb16b6ba80cb25 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Tue, 15 Apr 2025 22:02:37 +0800
Subject: [PATCH 28/60] PortAudioWriter.*

---
 src/modules/PortAudio/PortAudioWriter.cpp | 11 +++++++++++
 src/modules/PortAudio/PortAudioWriter.hpp | 18 +++++++++---------
 2 files changed, 20 insertions(+), 9 deletions(-)

diff --git a/src/modules/PortAudio/PortAudioWriter.cpp b/src/modules/PortAudio/PortAudioWriter.cpp
index aead169e..736945e7 100644
--- a/src/modules/PortAudio/PortAudioWriter.cpp
+++ b/src/modules/PortAudio/PortAudioWriter.cpp
@@ -23,6 +23,10 @@
     #define MMSYSERR_NODRIVER 6
 #endif
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    #define QStringLiteral QString::fromUtf8
+#endif
+
 #ifdef Q_OS_MACOS
     #include "3rdparty/CoreAudio/AudioDeviceList.h"
     #include "3rdparty/CoreAudio/AudioDevice.h"
@@ -47,6 +51,7 @@ PortAudioWriter::PortAudioWriter(Module &module) :
 
     SetModule(module);
 }
+
 PortAudioWriter::~PortAudioWriter()
 {
 #ifdef Q_OS_MACOS
@@ -130,6 +135,7 @@ bool PortAudioWriter::processParams(bool *paramsCorrected)
 
     return readyWrite();
 }
+
 qint64 PortAudioWriter::write(const QByteArray &arr)
 {
     if (!readyWrite())
@@ -192,6 +198,7 @@ qint64 PortAudioWriter::write(const QByteArray &arr)
 
     return arr.size();
 }
+
 void PortAudioWriter::pause()
 {
     if (readyWrite())
@@ -253,6 +260,7 @@ bool PortAudioWriter::openStream()
     }
     return false;
 }
+
 bool PortAudioWriter::startStream()
 {
     const PaError e = Pa_StartStream(stream);
@@ -266,6 +274,7 @@ bool PortAudioWriter::startStream()
     }
     return true;
 }
+
 inline bool PortAudioWriter::writeStream(const QByteArray &arr)
 {
     const PaError e = Pa_WriteStream(stream, arr.constData(), arr.size() / outputParameters.channelCount / sizeof(float));
@@ -288,6 +297,7 @@ inline bool PortAudioWriter::writeStream(const QByteArray &arr)
     }
     return (e != paUnanticipatedHostError);
 }
+
 qint64 PortAudioWriter::playbackError()
 {
     QMPlay2Core.logError("PortAudio :: " + tr("Playback error"));
@@ -302,6 +312,7 @@ bool PortAudioWriter::isNoDriverError() const
     return errorInfo && errorInfo->hostApiType == paMME && errorInfo->errorCode == MMSYSERR_NODRIVER;
 }
 #endif
+
 bool PortAudioWriter::reopenStream()
 {
     Pa_CloseStream(stream);
diff --git a/src/modules/PortAudio/PortAudioWriter.hpp b/src/modules/PortAudio/PortAudioWriter.hpp
index 20ff55d8..b458e9ca 100644
--- a/src/modules/PortAudio/PortAudioWriter.hpp
+++ b/src/modules/PortAudio/PortAudioWriter.hpp
@@ -29,25 +29,25 @@
 class AudioDevice;
 #endif
 
-class PortAudioWriter final : public Writer
+class PortAudioWriter : public Writer
 {
     Q_DECLARE_TR_FUNCTIONS(PortAudioWriter)
 public:
     PortAudioWriter(Module &);
 private:
-    ~PortAudioWriter();
+    ~PortAudioWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
-- 
2.49.0

