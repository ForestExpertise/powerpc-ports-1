--- meson.build	2025-03-26 01:33:27.000000000 +0800
+++ meson.build	2025-05-12 04:50:09.000000000 +0800
@@ -1504,142 +1501,12 @@
 
 
 # macOS features
-macos_sdk_version_py = ''
 if darwin
-    macos_sdk_version_py = find_program(join_paths(source_root, 'TOOLS', 'macos-sdk-version.py'),
-                                                   required: true)
-endif
-
-macos_sdk_path = ''
-macos_sdk_version = '0.0'
-if darwin and macos_sdk_version_py.found()
-    macos_sdk_info = run_command(macos_sdk_version_py, check: true).stdout().split(',')
-    macos_sdk_path = macos_sdk_info[0]
-    macos_sdk_version = macos_sdk_info[1]
-endif
-
-if macos_sdk_path != ''
-    message('Detected macOS sdk path: ' + macos_sdk_path)
-endif
-
-if macos_sdk_version != '0.0'
-    message('Detected macOS SDK: ' + macos_sdk_version)
     add_languages('objc', native: false)
-    objc_link_flags = ['-isysroot', macos_sdk_path, '-L/usr/lib', '-L/usr/local/lib']
+    objc_link_flags = ['-isysroot/', '-L/usr/lib']
     add_project_link_arguments(objc_link_flags, language: ['c', 'objc'])
 endif
 
-xcrun = find_program('xcrun', required: get_option('swift-build').require(darwin))
-swift_ver = '0.0'
-if xcrun.found()
-    swift_prog = find_program(run_command(xcrun, '-find', 'swiftc', check: true).stdout().strip())
-    swift_ver_string = run_command(swift_prog, '-version', check: true).stdout()
-    verRe = '''
-#!/usr/bin/env python3
-import re
-import sys
-verRe = re.compile("(?i)version\s?([\d.]+)")
-swift_ver = verRe.search(sys.argv[1]).group(1)
-sys.stdout.write(swift_ver)
-'''
-    swift_ver = run_command(python, '-c', verRe, swift_ver_string, check: true).stdout()
-    message('Detected Swift version: ' + swift_ver)
-endif
-
-swift = get_option('swift-build').require(
-    darwin and macos_sdk_version.version_compare('>= 10.15') and swift_ver.version_compare('>= 4.1'),
-    error_message: 'A suitable macos sdk version or swift version could not be found!',
-)
-features += {'swift': swift.allowed()}
-
-if features['cocoa'] and not features['swift'] and get_option('cplayer')
-    error('cplayer enabled but no suitable swift version could be found or was disabled!')
-endif
-
-swift_sources = []
-if features['cocoa'] and features['swift']
-    swift_sources += files('osdep/mac/application.swift',
-                           'osdep/mac/app_hub.swift',
-                           'osdep/mac/clipboard.swift',
-                           'osdep/mac/dialog.swift',
-                           'osdep/mac/event_helper.swift',
-                           'osdep/mac/input_helper.swift',
-                           'osdep/mac/log_helper.swift',
-                           'osdep/mac/menu_bar.swift',
-                           'osdep/mac/option_helper.swift',
-                           'osdep/mac/precise_timer.swift',
-                           'osdep/mac/presentation.swift',
-                           'osdep/mac/swift_compat.swift',
-                           'osdep/mac/swift_extensions.swift',
-                           'osdep/mac/type_helper.swift',
-                           'video/out/mac/common.swift',
-                           'video/out/mac/title_bar.swift',
-                           'video/out/mac/view.swift',
-                           'video/out/mac/window.swift')
-endif
-
-macos_10_15_4_features = get_option('macos-10-15-4-features').require(
-    macos_sdk_version.version_compare('>= 10.15.4'),
-    error_message: 'A macos sdk version >= 10.15.4 could not be found!',
-)
-features += {'macos-10-15-4-features': macos_10_15_4_features.allowed()}
-
-macos_11_features = get_option('macos-11-features').require(
-    macos_sdk_version.version_compare('>= 11'),
-    error_message: 'A macos sdk version >= 11 could not be found!',
-)
-features += {'macos-11-features': macos_11_features.allowed()}
-
-macos_11_3_features = get_option('macos-11-3-features').require(
-    macos_sdk_version.version_compare('>= 11.3'),
-    error_message: 'A macos sdk version >= 11.3 could not be found!',
-)
-features += {'macos-11-3-features': macos_11_3_features.allowed()}
-
-macos_12_features = get_option('macos-12-features').require(
-    macos_sdk_version.version_compare('>= 12'),
-    error_message: 'A macos sdk version >= 12 could not be found!',
-)
-features += {'macos-12-features': macos_12_features.allowed()}
-
-macos_cocoa_cb = get_option('macos-cocoa-cb').require(
-    features['cocoa'] and features['gl-cocoa'] and features['swift'],
-    error_message: 'Either cocoa, gl-cocoa or swift could not be found!',
-)
-features += {'macos-cocoa-cb': macos_cocoa_cb.allowed()}
-if features['macos-cocoa-cb']
-    swift_sources += files('osdep/mac/libmpv_helper.swift',
-                           'video/out/cocoa_cb_common.swift',
-                           'video/out/mac/gl_layer.swift')
-endif
-if features['cocoa'] and features['vulkan'] and features['swift']
-    swift_sources += files('video/out/mac_common.swift',
-                           'video/out/mac/metal_layer.swift')
-    sources += files('video/out/vulkan/context_mac.m')
-endif
-
-macos_media_player = get_option('macos-media-player').require(
-    features['swift'],
-    error_message: 'Swift was not found!',
-)
-features += {'macos-media-player': macos_media_player.allowed()}
-if features['macos-media-player']
-    swift_sources += files('osdep/mac/remote_command_center.swift')
-endif
-
-macos_touchbar = get_option('macos-touchbar').require(
-    features['cocoa'] and cc.has_header('AppKit/NSTouchBar.h'),
-    error_message: 'Either cocoa could not be found or AppKit/NSTouchBar.h could not be found!',
-)
-features += {'macos-touchbar': macos_touchbar.allowed()}
-if features['macos-touchbar']
-    swift_sources += files('osdep/mac/touch_bar.swift')
-endif
-
-if features['swift'] and swift_sources.length() > 0
-    subdir('osdep/mac')
-endif
-
 
 # manpages
 manpage = 'DOCS/man/mpv.rst'
