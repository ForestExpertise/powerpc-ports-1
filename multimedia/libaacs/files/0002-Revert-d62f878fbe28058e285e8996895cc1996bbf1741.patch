From 29a242ba204057cb53b8a417709db29365b59e57 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Mon, 12 May 2025 23:47:02 +0800
Subject: [PATCH 2/4] Revert d62f878fbe28058e285e8996895cc1996bbf1741

---
 src/file/mmc_device_darwin.c | 9 ---------
 1 file changed, 9 deletions(-)

diff --git src/file/mmc_device_darwin.c src/file/mmc_device_darwin.c
index 71debb2..1f7f87d 100644
--- src/file/mmc_device_darwin.c
+++ src/file/mmc_device_darwin.c
@@ -84,7 +84,6 @@ struct mmcdev {
     DADiskRef disk;
     DASessionRef session;
     bool is_mounted;
-    dispatch_semaphore_t sync_sem;
 };
 
 int device_send_cmd(MMCDEV *mmc, const uint8_t *cmd, uint8_t *buf, size_t tx, size_t rx)
@@ -196,7 +195,6 @@ static void iokit_unmount_complete(DADiskRef disk, DADissenterRef dissenter,
         BD_DEBUG(DBG_MMC, "Disc unmounted\n");
         mmc->is_mounted = 0;
     }
-    dispatch_semaphore_signal(mmc->sync_sem);
 }
 
 static void iokit_mount_complete(DADiskRef disk, DADissenterRef dissenter,
@@ -220,7 +218,6 @@ static void iokit_mount_complete(DADiskRef disk, DADissenterRef dissenter,
      * enough for the OS to mount the disc again.
      */
     mmc->is_mounted = 1;
-    dispatch_semaphore_signal(mmc->sync_sem);
 }
 
 static int iokit_unmount(MMCDEV *mmc) {
@@ -231,7 +228,6 @@ static int iokit_unmount(MMCDEV *mmc) {
     BD_DEBUG(DBG_MMC, "Unmounting disk\n");
 
     DADiskUnmount(mmc->disk, kDADiskUnmountOptionForce, iokit_unmount_complete, mmc);
-    dispatch_semaphore_wait(mmc->sync_sem, DISPATCH_TIME_FOREVER);
 
     return mmc->is_mounted ? -1 : 0;
 }
@@ -240,7 +236,6 @@ static int iokit_mount(MMCDEV *mmc) {
     if (0 == mmc->is_mounted) {
         if (mmc->disk && mmc->session) {
             DADiskMount(mmc->disk, NULL, kDADiskMountOptionDefault, iokit_mount_complete, mmc);
-            dispatch_semaphore_wait(mmc->sync_sem, DISPATCH_TIME_FOREVER);
         }
     }
     return mmc->is_mounted ? 0 : -1;
@@ -345,8 +340,6 @@ static int iokit_da_init(MMCDEV *mmc) {
     dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
     DASessionSetDispatchQueue(mmc->session, queue);
 
-    mmc->sync_sem = dispatch_semaphore_create(0);
-
     return 0;
 }
 
@@ -362,8 +355,6 @@ static void iokit_da_destroy(MMCDEV *mmc) {
         CFRelease (mmc->session);
         mmc->session = NULL;
     }
-
-    dispatch_release(mmc->sync_sem);
 }
 
 static int mmc_open_iokit(const char *path, MMCDEV *mmc) {
-- 
2.48.0

