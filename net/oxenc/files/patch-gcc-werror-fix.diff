From aa96169d691383696af85c62ed6e7b25169f1953 Mon Sep 17 00:00:00 2001
From: Jason Rhinelander <jason@imaginary.ca>
Date: Thu, 17 Apr 2025 22:17:50 -0300
Subject: [PATCH] Fix apple_to_chars10 gcc compatibility

---
 oxenc/bt_producer.h | 2 +-
 tests/test_bt.cpp   | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/oxenc/bt_producer.h b/oxenc/bt_producer.h
index 1e2ae63..56cf28a 100644
--- oxenc/bt_producer.h
+++ oxenc/bt_producer.h
@@ -45,7 +45,7 @@ char* apple_to_chars10(char* buf, IntType val) {
     } while (val > 0);
 
     // Reverse the digits into the right order
-    int swaps = (pos - buf) / 2;
+    auto swaps = (pos - buf) / 2;
     for (int i = 0; i < swaps; i++)
         std::swap(buf[i], pos[-1 - i]);
 
diff --git a/tests/test_bt.cpp b/tests/test_bt.cpp
index a08a485..5b1bb35 100644
--- tests/test_bt.cpp
+++ tests/test_bt.cpp
@@ -686,11 +686,11 @@ TEST_CASE("apple to_chars workaround test", "[bt][apple][sucks]") {
     CHECK(buf_view(oxenc::apple_to_chars10(buf, -99)) == "-99");
     CHECK(buf_view(oxenc::apple_to_chars10(buf, -1234567890)) == "-1234567890");
     CHECK(buf_view(oxenc::apple_to_chars10(buf, char{42})) == "42");
-    CHECK(buf_view(oxenc::apple_to_chars10(buf, (unsigned char){42})) == "42");
+    CHECK(buf_view(oxenc::apple_to_chars10(buf, (unsigned char)42)) == "42");
     CHECK(buf_view(oxenc::apple_to_chars10(buf, short{42})) == "42");
     CHECK(buf_view(oxenc::apple_to_chars10(buf, std::numeric_limits<char>::min())) == "-128");
     CHECK(buf_view(oxenc::apple_to_chars10(buf, std::numeric_limits<char>::max())) == "127");
-    CHECK(buf_view(oxenc::apple_to_chars10(buf, (unsigned char){42})) == "42");
+    CHECK(buf_view(oxenc::apple_to_chars10(buf, (unsigned char)42)) == "42");
     CHECK(buf_view(oxenc::apple_to_chars10(buf, std::numeric_limits<uint64_t>::max())) ==
           "18446744073709551615");
     CHECK(buf_view(oxenc::apple_to_chars10(buf, int64_t{-1})) == "-1");
