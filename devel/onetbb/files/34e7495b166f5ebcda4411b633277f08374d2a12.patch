From 34e7495b166f5ebcda4411b633277f08374d2a12 Mon Sep 17 00:00:00 2001
From: Oleg Butakov <butakovoleg@gmail.com>
Date: Thu, 20 Mar 2025 14:09:46 +0100
Subject: [PATCH] Fix compilation on macOS with GCC (#1603)

---
 cmake/compilers/GNU.cmake           | 22 ++++++++++++----------
 include/oneapi/tbb/detail/_config.h |  2 +-
 src/tbb/co_context.h                | 12 ++++++------
 3 files changed, 19 insertions(+), 17 deletions(-)

diff --git a/cmake/compilers/GNU.cmake b/cmake/compilers/GNU.cmake
index c36b709531..ecf3119772 100644
--- cmake/compilers/GNU.cmake
+++ cmake/compilers/GNU.cmake
@@ -55,16 +55,18 @@ execute_process(
     ERROR_STRIP_TRAILING_WHITESPACE
 )
 set(ASSEMBLER_VERSION_LINE ${ASSEMBLER_VERSION_LINE_OUT}${ASSEMBLER_VERSION_LINE_ERR})
-string(REGEX REPLACE ".*GNU assembler version ([0-9]+)\\.([0-9]+).*" "\\1" _tbb_gnu_asm_major_version "${ASSEMBLER_VERSION_LINE}")
-string(REGEX REPLACE ".*GNU assembler version ([0-9]+)\\.([0-9]+).*" "\\2" _tbb_gnu_asm_minor_version "${ASSEMBLER_VERSION_LINE}")
-unset(ASSEMBLER_VERSION_LINE_OUT)
-unset(ASSEMBLER_VERSION_LINE_ERR)
-unset(ASSEMBLER_VERSION_LINE)
-message(TRACE "Extracted GNU assembler version: major=${_tbb_gnu_asm_major_version} minor=${_tbb_gnu_asm_minor_version}")
-
-math(EXPR _tbb_gnu_asm_version_number  "${_tbb_gnu_asm_major_version} * 1000 + ${_tbb_gnu_asm_minor_version}")
-set(TBB_COMMON_COMPILE_FLAGS ${TBB_COMMON_COMPILE_FLAGS} "-D__TBB_GNU_ASM_VERSION=${_tbb_gnu_asm_version_number}")
-message(STATUS "GNU Assembler version: ${_tbb_gnu_asm_major_version}.${_tbb_gnu_asm_minor_version}  (${_tbb_gnu_asm_version_number})")
+if ("${ASSEMBLER_VERSION_LINE}" MATCHES "GNU assembler version")
+    string(REGEX REPLACE ".*GNU assembler version ([0-9]+)\\.([0-9]+).*" "\\1" _tbb_gnu_asm_major_version "${ASSEMBLER_VERSION_LINE}")
+    string(REGEX REPLACE ".*GNU assembler version ([0-9]+)\\.([0-9]+).*" "\\2" _tbb_gnu_asm_minor_version "${ASSEMBLER_VERSION_LINE}")
+    unset(ASSEMBLER_VERSION_LINE_OUT)
+    unset(ASSEMBLER_VERSION_LINE_ERR)
+    unset(ASSEMBLER_VERSION_LINE)
+    message(TRACE "Extracted GNU assembler version: major=${_tbb_gnu_asm_major_version} minor=${_tbb_gnu_asm_minor_version}")
+
+    math(EXPR _tbb_gnu_asm_version_number  "${_tbb_gnu_asm_major_version} * 1000 + ${_tbb_gnu_asm_minor_version}")
+    set(TBB_COMMON_COMPILE_FLAGS ${TBB_COMMON_COMPILE_FLAGS} "-D__TBB_GNU_ASM_VERSION=${_tbb_gnu_asm_version_number}")
+    message(STATUS "GNU Assembler version: ${_tbb_gnu_asm_major_version}.${_tbb_gnu_asm_minor_version}  (${_tbb_gnu_asm_version_number})")
+endif()
 
 # Enable Intel(R) Transactional Synchronization Extensions (-mrtm) and WAITPKG instructions support (-mwaitpkg) on relevant processors
 if (CMAKE_SYSTEM_PROCESSOR MATCHES "(AMD64|amd64|i.86|x86)" AND NOT EMSCRIPTEN)
diff --git a/include/oneapi/tbb/detail/_config.h b/include/oneapi/tbb/detail/_config.h
index 854f13b568..9a994a6edf 100644
--- include/oneapi/tbb/detail/_config.h
+++ include/oneapi/tbb/detail/_config.h
@@ -337,7 +337,7 @@
 
 #define __TBB_TSX_INTRINSICS_PRESENT (__RTM__ || __INTEL_COMPILER || (_MSC_VER>=1700 && (__TBB_x86_64 || __TBB_x86_32)))
 
-#define __TBB_WAITPKG_INTRINSICS_PRESENT ((__INTEL_COMPILER >= 1900 || (__TBB_GCC_VERSION >= 110000 && __TBB_GNU_ASM_VERSION >= 2032) || __TBB_CLANG_VERSION >= 120000) \
+#define __TBB_WAITPKG_INTRINSICS_PRESENT ((__INTEL_COMPILER >= 1900 || (__TBB_GCC_VERSION >= 110000 && (__APPLE__ || __TBB_GNU_ASM_VERSION >= 2032)) || __TBB_CLANG_VERSION >= 120000) \
                                          && (_WIN32 || _WIN64 || __unix__ || __APPLE__) && (__TBB_x86_32 || __TBB_x86_64) && !__ANDROID__)
 
 /** Internal TBB features & modes **/
diff --git a/src/tbb/co_context.h b/src/tbb/co_context.h
index 60d5437f42..6cb9b2f5fd 100644
--- src/tbb/co_context.h
+++ src/tbb/co_context.h
@@ -1,5 +1,5 @@
 /*
-    Copyright (c) 2005-2022 Intel Corporation
+    Copyright (c) 2005-2025 Intel Corporation
 
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
@@ -43,9 +43,9 @@
     #if __INTEL_COMPILER
         #pragma warning(push)
         #pragma warning(disable:1478)
-    #elif __clang__
-        #pragma clang diagnostic push
-        #pragma clang diagnostic ignored "-Wdeprecated-declarations"
+    #elif __GNUC__
+        #pragma GCC diagnostic push
+        #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
     #endif
 #endif // __APPLE__
 
@@ -362,8 +362,8 @@ inline void destroy_coroutine(coroutine_type& c) {
 #if __APPLE__
     #if __INTEL_COMPILER
         #pragma warning(pop) // 1478 warning
-    #elif __clang__
-        #pragma clang diagnostic pop // "-Wdeprecated-declarations"
+    #elif __GNUC__
+        #pragma GCC diagnostic pop // "-Wdeprecated-declarations"
     #endif
 #endif
 
