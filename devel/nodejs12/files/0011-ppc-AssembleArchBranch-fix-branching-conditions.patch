From d2b2f59b179ffe8c481c40ba0f6e87163d71620a Mon Sep 17 00:00:00 2001
From: Eduardo Aguilar <eduardo.aguilar@mind.be>
Date: Wed, 21 Oct 2020 12:52:01 +0200
Subject: [PATCH] ppc: AssembleArchBranch: fix branching conditions

Signed-off-by: Eduardo Aguilar <eduardo.aguilar@mind.be>
---
 deps/v8/src/compiler/backend/ppc/code-generator-ppc.cc | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/deps/v8/src/compiler/backend/ppc/code-generator-ppc.cc b/deps/v8/src/compiler/backend/ppc/code-generator-ppc.cc
index 9697a405..11530c6c 100644
--- a/deps/v8/src/compiler/backend/ppc/code-generator-ppc.cc
+++ b/deps/v8/src/compiler/backend/ppc/code-generator-ppc.cc
@@ -2270,9 +2270,7 @@ void CodeGenerator::AssembleArchBranch(Instruction* instr, BranchInfo* branch) {
 
   Condition cond = FlagsConditionToCondition(condition, op);
   if (op == kPPC_CmpDouble) {
-      // comparison against any NaN operand should go to false except on not
-      // equal, but this case seems to introduce problems, so jumping
-      // inconditionally to false in case of CR_FU.
+    if (cond != ne)
       __ bunordered(flabel, cr);
   }
   __ b(cond, tlabel, cr);
-- 
2.28.0

