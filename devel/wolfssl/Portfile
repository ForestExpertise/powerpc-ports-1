# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           legacysupport 1.1

# CLOCK_REALTIME
legacysupport.newest_darwin_requires_legacy 15

# This is the release commit: https://github.com/wolfSSL/wolfssl/releases/tag/v5.8.0-stable
# Downloading tarball does not seem to work anymore.
github.setup        wolfSSL wolfssl b077c81eb635392e694ccedbab8b644297ec0285
version             5.8.0
revision            1
categories          devel security
maintainers         {wolfssl.com:facts @JacobBarthelmeh} openmaintainer
homepage            https://wolfssl.com/wolfSSL/Products-wolfssl.html
license             GPL-2
description         wolfSSL Embedded SSL Library

long_description    \
    The wolfSSL embedded SSL library is a lightweight SSL library written \
    in ANSI C and targeted for embedded and RTOS environments â€“ primarily \
    because of its small size, speed and feature set. It is commonly \
    used in standard operating environments as well because of its \
    royalty-free pricing and excellent cross platform support. CyaSSL \
    supports industry standards up to the current TLS and DTLS 1.2 levels, \
    is up to 20 times smaller than OpenSSL, and offers progressive ciphers \
    such as ChaCha20, Poly1305 and NTRU.

fetch.type          git

configure.args      --disable-jobserver \
                    --disable-silent-rules \
                    --enable-all

# Linking fails now with Xcode gcc.
# https://github.com/wolfSSL/wolfssl/issues/8731
# Also assembler fails with it:
# https://github.com/wolfSSL/wolfssl/issues/8747
compiler.blacklist-append \
                    *gcc-4.0 *gcc-4.2

patch.pre_args-replace  -p0 -p1
# Drop this if building on 10a190:
patchfiles-append   0001-macOS-enable-dispatch-on-10.6-powerpc.patch

# https://github.com/wolfSSL/wolfssl/issues/8731
patchfiles-append   25082e80f171ddd38e5fd940c7cc85fcba97d16c.patch

# Enabling this option does not work at least on 10.6:
# src/internal.c:41288: error: 'errSecSuccess' undeclared (first use in this function)
# Arguably we do not need archaic system certificates anyway.
# OS version threshold is set according to system git being functional.
if {${os.platform} eq "darwin" && ${os.major} < 14} {
    configure.args-append \
                    --disable-sys-ca-certs
}

variant debug description {Enable wolfSSL debugging support} {
    configure.args-append \
        --enable-debug
}

variant aesni description {Enable wolfSSL Intel AES-NI support, if available} {
    configure.args-append \
        --enable-aesni
}

variant sniffer description {Enable wolfSSL sniffer support} {
    depends_lib-append \
        port:libpcap
    configure.args-append \
        --enable-sniffer
}

depends_build-append    path:libexec/coreutils/libstdbuf.so:coreutils

use_autoreconf  yes
autoreconf.args -fvi
configure.checks.implicit_function_declaration.whitelist-append strchr

livecheck.url   https://www.wolfssl.com/wolfSSL/download/downloadForm.php
livecheck.regex "${name}-((?!.*${name}.*|\\${extract.suffix}).*)\\${extract.suffix}"

test.run    yes
test.env    TMPDIR=/tmp RANDFILE=/tmp/wolfssl-unittest-rnd DYLD_LIBRARY_PATH=${worksrcpath}/src/.libs WOLFSSL_EXTERNAL_TEST=0
test.target check
test.args   -j${build.jobs}
