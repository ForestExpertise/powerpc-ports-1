From 6922a55a65ef6ac67a9a5ffef623e2cb39faf84d Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Tue, 24 Jun 2025 18:30:35 +0800
Subject: [PATCH] Fix sig* macros usage

---
 kdeui/kernel/kapplication.cpp | 6 +++---
 kdeui/util/kcrash.cpp         | 6 +++---
 kio/kio/slavebase.cpp         | 6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/kdeui/kernel/kapplication.cpp b/kdeui/kernel/kapplication.cpp
index 1e44a2be..a10be90a 100644
--- a/kdeui/kernel/kapplication.cpp
+++ b/kdeui/kernel/kapplication.cpp
@@ -695,14 +695,14 @@ unsigned long KApplication::userTimestamp() const
 void KApplication::quitOnSignal()
 {
     sigset_t handlermask;
-    ::sigemptyset(&handlermask);
+    sigemptyset(&handlermask);
     int counter = 0;
     while (s_quit_signals[counter]) {
         KDE_signal(s_quit_signals[counter], quit_handler);
-        ::sigaddset(&handlermask, s_quit_signals[counter]);
+        sigaddset(&handlermask, s_quit_signals[counter]);
         counter++;
     }
-    ::sigprocmask(SIG_UNBLOCK, &handlermask, NULL);
+    sigprocmask(SIG_UNBLOCK, &handlermask, NULL);
 }
 
 void KApplication::quitOnDisconnected()
diff --git a/kdeui/util/kcrash.cpp b/kdeui/util/kcrash.cpp
index a0c73247..a3db3979 100644
--- a/kdeui/util/kcrash.cpp
+++ b/kdeui/util/kcrash.cpp
@@ -131,14 +131,14 @@ void KCrash::setCrashHandler(HandlerType handler)
     s_crashhandler = handler;
 
     sigset_t handlermask;
-    ::sigemptyset(&handlermask);
+    sigemptyset(&handlermask);
     int counter = 0;
     while (s_signals[counter]) {
         KDE_signal(s_signals[counter], s_crashhandler);
-        ::sigaddset(&handlermask, s_signals[counter]);
+        sigaddset(&handlermask, s_signals[counter]);
         counter++;
     }
-    ::sigprocmask(SIG_UNBLOCK, &handlermask, NULL);
+    sigprocmask(SIG_UNBLOCK, &handlermask, NULL);
 }
 
 KCrash::HandlerType KCrash::crashHandler()
diff --git a/kio/kio/slavebase.cpp b/kio/kio/slavebase.cpp
index 0c80cbf7..60a3cd2e 100644
--- a/kio/kio/slavebase.cpp
+++ b/kio/kio/slavebase.cpp
@@ -250,14 +250,14 @@ SlaveBase::SlaveBase(const QByteArray &protocol,
     sigaction(SIGPIPE, &act, 0);
 
     sigset_t handlermask;
-    ::sigemptyset(&handlermask);
+    sigemptyset(&handlermask);
     int counter = 0;
     while (s_quit_signals[counter]) {
         KDE_signal(s_quit_signals[counter], genericsig_handler);
-        ::sigaddset(&handlermask, s_quit_signals[counter]);
+        sigaddset(&handlermask, s_quit_signals[counter]);
         counter++;
     }
-    ::sigprocmask(SIG_UNBLOCK, &handlermask, NULL);
+    sigprocmask(SIG_UNBLOCK, &handlermask, NULL);
 
     globalSlave = this;
 
