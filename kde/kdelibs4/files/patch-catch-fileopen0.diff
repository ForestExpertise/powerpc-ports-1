diff --git a/kdeui/kernel/kapplication.cpp b/kdeui/kernel/kapplication.cpp
index b093034..ff13375 100644
--- a/kdeui/kernel/kapplication.cpp
+++ b/kdeui/kernel/kapplication.cpp
@@ -311,6 +315,24 @@ bool KApplication::notify(QObject *receiver, QEvent *event)
     return QApplication::notify(receiver, event);
 }
 
+#if defined(Q_OS_MAC) || defined(Q_OS_SYMBIAN)
+bool KApplication::event( QEvent *event )
+{
+    switch (event->type()) {
+        case QEvent::FileOpen:{
+            QFileOpenEvent *foe = static_cast<QFileOpenEvent*>(event);
+            //qDebug() << Q_FUNC_INFO << "FileOpen event" << foe << " file=" << foe->file() << " URL=" << foe->url();
+            emit openURLRequest(foe->url());
+            return true;
+            break;
+        }
+        default:
+            return QApplication::event(event);
+            break;
+    }
+}
+#endif
+
 void KApplicationPrivate::_k_checkAppStartedSlot()
 {
 #if defined Q_WS_X11
diff --git a/kdeui/kernel/kapplication.h b/kdeui/kernel/kapplication.h
index fa2ab26..8111608 100644
--- a/kdeui/kernel/kapplication.h
+++ b/kdeui/kernel/kapplication.h
@@ -383,6 +386,16 @@ public:
     */
   bool notify( QObject* receiver, QEvent* event );
 
+#if defined(Q_OS_MAC) || defined(Q_OS_SYMBIAN)
+  /**
+   * overloaded event handler function that filters out QEvent::FileOpen
+   * events and emits the corresponding openURLRequest signals. This event
+   * only occurs on OS X and Symbian so there is no point in providing this
+   * override on other platforms.
+   */
+  bool event(QEvent *event);
+#endif
+
   /**
       @internal
     */
@@ -445,6 +466,15 @@ Q_SIGNALS:
   */
   void saveYourself();
 
+  /**
+   * On OS X, Qt will send a QEvent::FileOpen event to the application
+   * instance when the user initiates a request to open a file or URL
+   * via the Finder (or more generally, LaunchServices). This event
+   * is caught by KApplication::event(), and raised as the openURLRequest
+   * signal with the requested URL.
+   */
+  void openURLRequest(const QUrl &url);
+
 protected:
   /**
    * @internal Used by KUniqueApplication
