diff --git a/cmake/modules/KDE4Macros.cmake b/cmake/modules/KDE4Macros.cmake
index 638358a..162459f 100644
--- a/cmake/modules/KDE4Macros.cmake
+++ b/cmake/modules/KDE4Macros.cmake
@@ -843,6 +843,10 @@ macro (KDE4_ADD_KDEINIT_EXECUTABLE _target_NAME )
       kde4_add_executable(${_target_NAME} "${_nogui}" ${CMAKE_CURRENT_BINARY_DIR}/${_target_NAME}_dummy.cpp ${_resourcefile})
       target_link_libraries(${_target_NAME} kdeinit_${_target_NAME})
    endif(WIN32)
+   if(_nogui)
+      set_target_properties(kdeinit_${_target_NAME} PROPERTIES COMPILE_FLAGS -DKDE_WITHOUT_GUI)
+      message(STATUS "Building \"kdeinit_${_target_NAME}\" with -DKDE_WITHOUT_GUI because \"${_nogui}\"")
+   endif(_nogui)
 
 endmacro (KDE4_ADD_KDEINIT_EXECUTABLE)
 
@@ -1029,6 +1033,11 @@ macro (KDE4_ADD_EXECUTABLE _target_NAME)
       add_executable(${_target_NAME} ${_add_executable_param} ${_SRCS})
    endif (KDE4_ENABLE_FINAL)
 
+    if(_nogui)
+        set_target_properties(${_target_NAME} PROPERTIES COMPILE_FLAGS -DKDE_WITHOUT_GUI)
+        message(STATUS "Building \"${_target_NAME}\" with -DKDE_WITHOUT_GUI because \"${_nogui}\"")
+    endif(_nogui)
+
    IF (KDE4_ENABLE_UAC_MANIFEST)
        _kde4_add_manifest(${_target_NAME})
    ENDIF(KDE4_ENABLE_UAC_MANIFEST)
diff --git kdeui/kernel/kapplication.cpp kdeui/kernel/kapplication.cpp
index b093034..ff50e7d 100644
--- a/kdeui/kernel/kapplication.cpp.orig
+++ b/kdeui/kernel/kapplication.cpp
@@ -138,6 +138,12 @@ static int kde_x_errhandler( Display *dpy, XErrorEvent *err )
 void KApplication_init_windows();
 #endif
 
+#ifdef KDE_WITHOUT_GUI
+#define GUIENABLED false
+#else
+#define GUIENABLED true
+#endif //KDE_WITHOUT_GUI
+
 /*
   Private data to make keeping binary compatibility easier
  */
@@ -205,7 +211,7 @@ public:
   void _k_slot_KToolInvocation_hook(QStringList&, QByteArray&);
 
   QString sessionConfigName() const;
-  void init(bool GUIenabled=true);
+  void init(bool GUIenabled=GUIENABLED);
   void parseCommandLine( ); // Handle KDE arguments (Using KCmdLineArgs)
   static void preqapplicationhack();
   static void preread_app_startup_id();
diff --git kdeui/kernel/kapplication.h kdeui/kernel/kapplication.h
index fa2ab26..ff17f26 100644
--- a/kdeui/kernel/kapplication.h.orig
+++ b/kdeui/kernel/kapplication.h
@@ -97,7 +97,11 @@ public:
    *  <li>Call KGlobal::locale(), if using multiple threads.</li>
    * </ul>
    */
+#ifdef KDE_WITHOUT_GUI
+  explicit KApplication(bool GUIenabled = false);
+#else
   explicit KApplication(bool GUIenabled = true);
+#endif // KDE_WITHOUT_GUI
 
 #ifdef Q_WS_X11
   /**
@@ -134,8 +138,13 @@ public:
    *
    * @param GUIenabled Set to false to disable all GUI stuff.
    */
+#ifdef KDE_WITHOUT_GUI
+  KApplication(Display *display, int& argc, char** argv, const QByteArray& rAppName,
+               bool GUIenabled=false);
+#else
   KApplication(Display *display, int& argc, char** argv, const QByteArray& rAppName,
                bool GUIenabled=true);
+#endif // KDE_WITHOUT_GUI
 #endif
 
   virtual ~KApplication();
diff --git kdeui/kernel/kuniqueapplication.h kdeui/kernel/kuniqueapplication.h
index e05dcd7..97fd942 100644
--- a/kdeui/kernel/kuniqueapplication.h.orig
+++ b/kdeui/kernel/kuniqueapplication.h
@@ -65,8 +65,13 @@ public:
    *                 depend on the value of the "MultipleInstances"
    *                 key in the "KDE" group of the application config file.
    */
+#ifdef KDE_WITHOUT_GUI
+  explicit KUniqueApplication( bool GUIenabled=false,
+                               bool configUnique=false);
+#else
   explicit KUniqueApplication( bool GUIenabled=true,
                                bool configUnique=false);
+#endif //KDE_WITHOUT_GUI
 
 #ifdef Q_WS_X11
   /**
--- kdelibs4-4.14.git/kdeui/kernel/orig.kapplication.cpp	2015-08-17 18:09:10.000000000 +0200
+++ kdelibs4-4.14.git/kdeui/kernel/kapplication.cpp	2015-08-17 18:11:17.000000000 +0200
@@ -214,7 +214,7 @@
   void init(bool GUIenabled=GUIENABLED);
   void parseCommandLine( ); // Handle KDE arguments (Using KCmdLineArgs)
 #ifdef Q_OS_MAC
-  static void preqapplicationhack(bool GUIenabled = true);
+  static void preqapplicationhack(bool GUIenabled = GUIENABLED);
 #else
   static void preqapplicationhack();
 #endif
