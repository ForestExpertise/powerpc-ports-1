diff --git a/kdeui/widgets/kmenu.cpp b/kdeui/widgets/kmenu.cpp
index 7dab149..6e8ba6b 100644
--- a/kdeui/widgets/kmenu.cpp
+++ b/kdeui/widgets/kmenu.cpp
@@ -42,6 +42,11 @@
 #include <klocale.h>
 #include <kacceleratormanager.h>
 
+#ifdef Q_OS_MAC
+#include <kmainwindow.h>
+#include <kmenubar.h>
+#endif //Q_OS_MAC
+
 static const char KMENU_TITLE[] = "kmenu_title";
 
 class KMenu::KMenuPrivate
@@ -172,25 +177,100 @@ QAction* KMenu::addTitle(const QString &text, QAction* before)
     return addTitle(QIcon(), text, before);
 }
 
+#ifdef Q_OS_MAC
+static bool isMenubarMenu(QMenu *m)
+{   bool ret = false;
+        static int level = -1;
+    QList<QMenu*> checkList;
+    level += 1;
+    if (m && m->menuAction()) {
+        QAction *mAct = m->menuAction();
+        kDebug() << "##" << level << "isMenubarMenu(" << m << m->title() << ") menuAction=" << mAct << mAct->text();
+        foreach (QWidget *w, mAct->associatedWidgets()) {
+            if (w == m) {
+                goto done;
+            }
+            kDebug() << "###" << level << "associated widget" << w << w->windowTitle() << "parent=" << w->parentWidget();
+            if (QMenuBar *mb = qobject_cast<QMenuBar*>(w)) {
+                kDebug() << "#### widget is QMenuBar" << mb << mb->windowTitle() << "with parent" << mb->parentWidget();
+                ret = true;
+                goto done;
+            }
+            else if (QMenu *mm = qobject_cast<QMenu*>(w)) {
+                if (checkList.contains(mm)) {
+                    continue;
+                }
+                checkList.append(mm);
+                kDebug() << "####" << level << "widget is QMenu" << mm << mm->title() << "with parent" << mm->parentWidget();
+                if (isMenubarMenu(mm)) {
+                    ret = true;
+                    goto done;
+                }
+            }
+        }
+    }
+done:;
+    level -= 1;
+    return ret;
+}
+#endif
+
 QAction* KMenu::addTitle(const QIcon &icon, const QString &text, QAction* before)
 {
-    QAction *buttonAction = new QAction(this);
-    QFont font = buttonAction->font();
-    font.setBold(true);
-    buttonAction->setFont(font);
-    buttonAction->setText(text);
-    buttonAction->setIcon(icon);
-
-    QWidgetAction *action = new QWidgetAction(this);
-    action->setObjectName(KMENU_TITLE);
-    QToolButton *titleButton = new QToolButton(this);
-    titleButton->installEventFilter(d); // prevent clicks on the title of the menu
-    titleButton->setDefaultAction(buttonAction);
-    titleButton->setDown(true); // prevent hover style changes in some styles
-    titleButton->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);
-    action->setDefaultWidget(titleButton);
-
-    insertAction(before, action);
+#ifdef Q_OS_MAC
+    bool isMacMenuBar = isMenubarMenu(this);
+#else
+    bool isMacMenuBar = false;
+#endif // Q_OS_MAC
+    QAction *action = new QAction(this);
+    action->setText(text);
+    action->setIcon(icon); action->setMenuRole(QAction::NoRole);
+#ifdef Q_OS_MAC
+    if (isMacMenuBar) {
+        action->setEnabled(false);
+        if (before && actions().contains(before)) {
+            QAction *sepLow = new QAction(this);
+            sepLow->setSeparator(true); sepLow->setMenuRole(QAction::NoRole);
+            insertAction(before, sepLow);
+            insertAction(sepLow, action);
+            if (!actions().startsWith(action)) {
+                QAction *sepHigh = new QAction(this);
+                sepHigh->setSeparator(true); sepHigh->setMenuRole(QAction::NoRole);
+                insertAction(action,sepHigh);
+                kDebug() << "#### inserted high separator before" << action << action->text() << "before low separator before" << before;
+            }
+            else{
+                kDebug() << "#### inserted" << action << action->text() << "before low separator before" << before;
+            }
+        }
+        else{
+            if (actions().size()) {
+                addSeparator();
+            }
+            addAction(action);
+            addSeparator();
+            kDebug() << "#### appended low separator after" << action << action->text() << "after existing" << actions().size()-2 << "items (before=" << before;
+        }
+    }
+    else
+#endif // Q_OS_MAC
+    {
+        QFont font = action->font();
+        font.setBold(true);
+        action->setFont(font);
+
+        QWidgetAction *styledAction = new QWidgetAction(this);
+        styledAction->setObjectName(KMENU_TITLE);
+        QToolButton *titleButton = new QToolButton(this);
+        titleButton->installEventFilter(d); // prevent clicks on the title of the menu
+        titleButton->setDefaultAction(action);
+        titleButton->setDown(true); // prevent hover style changes in some styles
+        titleButton->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);
+        styledAction->setDefaultWidget(titleButton);
+
+        insertAction(before, styledAction );
+        action = styledAction;
+    }
     return action;
 }
 
