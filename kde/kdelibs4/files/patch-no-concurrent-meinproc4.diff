diff --git a/kdoctools/meinproc.cpp b/kdoctools/meinproc.cpp
index 9a5b715..32be62f 100644
--- a/kdoctools/meinproc.cpp
+++ b/kdoctools/meinproc.cpp
@@ -16,10 +16,12 @@
 #include <kcomponentdata.h>
 #include <kcmdlineargs.h>
 #include <kdebug.h>
+#undef QT_NO_DEBUG_OUTPUT
 #include <klocale.h>
 #include <kstandarddirs.h>
 #include <kshell.h>
 #include <kurl.h>
+#include <klockfile.h>
 
 #include <libxml/xmlversion.h>
 #include <libxml/xmlmemory.h>
@@ -125,6 +127,13 @@ int main(int argc, char **argv) {
     LIBXML_TEST_VERSION
 
     const QString checkFilename = args->arg( 0 );
+#ifdef Q_OS_MAC
+    // prevent potential issues due to concurrent execution
+    const QString checkLockFileName = QLatin1String("meinproc4.lock");
+    KLockFile checkLock = KLockFile(checkLockFileName);
+    // give any "competitors" a bit more time than the default before we become impatient
+    checkLock.setStaleTime(60);
+#endif
     CheckFileResult ckr = checkFile( checkFilename );
     if ( ckr != CheckFileSuccess )
     {
@@ -188,6 +197,20 @@ int main(int argc, char **argv) {
     const bool usingOutput = args->isSet("output");
     const QString outputOption = args->getOption( "output" );
 
+#ifdef Q_OS_MAC
+    if (checkLock.isLocked()) {
+        qDebug() << "Waiting to get a lock on" << checkLockFileName;
+        KLockFile::LockResult locked = checkLock.lock(KLockFile::ForceFlag);
+        qDebug() << "lock result=" << locked;
+    }
+    else {
+        KLockFile::LockResult locked = checkLock.lock(KLockFile::ForceFlag);
+        if (locked != KLockFile::LockOK) {
+            qWarning() << "Error locking" << checkLockFileName << "which was not yet locked";
+        }
+    }
+#endif
+
     if ( index ) {
         xsltStylesheetPtr style_sheet =
             xsltParseStylesheetFile((const xmlChar *)tss.toLatin1().data());
