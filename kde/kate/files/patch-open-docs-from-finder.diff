diff --git kate/app/CMakeLists.txt kate/app/CMakeLists.txt
index a908300..b6adcbb 100644
--- kate/app/CMakeLists.txt
+++ kate/app/CMakeLists.txt
@@ -60,11 +60,16 @@ if (WIN32)
     target_link_libraries( kate ${QT_QTMAIN_LIBRARY} ${QT_QTGUI_LIBRARY} ${KDE4_KDECORE_LIBS} kateinterfaces )
 
 else (WIN32)
+    kde4_add_app_icon(kate_KDEINIT_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/../data/icons/hi*-app-kate.png")
     kde4_add_kdeinit_executable( kate ${kate_KDEINIT_SRCS})
 
     target_link_libraries(kdeinit_kate ${QT_QTGUI_LIBRARY} ${KDE4_KDECORE_LIBS} kateinterfaces )
 
+    # own plist template
+    set_target_properties (kate PROPERTIES MACOSX_BUNDLE_INFO_PLIST ${CMAKE_CURRENT_SOURCE_DIR}/../data/MacOSXBundleInfo.plist.in)
+
     install(TARGETS kdeinit_kate ${INSTALL_TARGETS_DEFAULT_ARGS} )
+    kde4_install_icons( ${ICON_INSTALL_DIR}  )
 
     target_link_libraries( kate kdeinit_kate )
 endif (WIN32)
diff --git kate/app/kateapp.cpp kate/app/kateapp.cpp
index cdd5475..e3e6040 100644
--- kate/app/kateapp.cpp
+++ kate/app/kateapp.cpp
@@ -276,6 +276,14 @@ bool KateApp::startupKate ()
 
   activeMainWindow()->setAutoSaveSettings();
 
+  /**
+   * handle the FileOpen events sent by Qt on Mac OS X, caught by KApplication
+   * and resent as an openURLRequest signal.
+   */
+  if (!connect(this, SIGNAL(openURLRequest(QUrl)), this, SLOT(openRequestedURL(QUrl)), Qt::QueuedConnection)) {
+    qWarning() << Q_FUNC_INFO << "cannot connect" << SIGNAL(openURLRequest(QUrl)) << "to" << SLOT(openRequestedURL(QUrl));
+  }
+
   kDebug() << "KateApplication::init finished successful";
   return true;
 }
@@ -297,6 +305,18 @@ void KateApp::shutdownKate (KateMainWindow *win)
   quit ();
 }
 
+bool KateApp::openRequestedURL(const QUrl &url)
+{
+    KTextEditor::Document *doc = openDocUrl(url, QString(), false);
+    qDebug() << Q_FUNC_INFO << "opened" << doc << "because of openURLRequest signal for"
+      << url << "from sender" << QObject::sender();
+    if (doc && activeMainWindow()) {
+        activeMainWindow()->viewManager()->activateView(doc);
+        return true;
+    }
+    return false;
+}
+
 KatePluginManager *KateApp::pluginManager()
 {
   return m_pluginManager;
diff --git kate/app/kateapp.h kate/app/kateapp.h
index f2d6917..c96d6ec 100644
--- kate/app/kateapp.h
+++ kate/app/kateapp.h
@@ -110,6 +110,9 @@ class KATEINTERFACES_EXPORT KateApp : public KApplication
      */
     bool startupKate ();
 
+public Q_SLOTS:
+    bool openRequestedURL(const QUrl &url);
+
     /**
      * kate shutdown
      */
diff --git kate/data/MacOSXBundleInfo.plist.in kate/data/MacOSXBundleInfo.plist.in
new file mode 100644
index 0000000..131a61f
--- /dev/null
+++ kate/data/MacOSXBundleInfo.plist.in
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+        <key>NSPrincipalClass</key>
+        <string>NSApplication</string>
+    <key>NSSupportsAutomaticGraphicsSwitching</key>
+    <true/>
+    <key>LSMultipleInstancesProhibited</key>
+    <true/>
+    <key>CFBundleDocumentTypes</key>
+    <array>
+        <dict>
+            <key>CFBundleTypeExtensions</key>
+            <array>
+                <string>*</string>
+            </array>
+            <key>CFBundleTypeName</key>
+            <string>NSStringPboardType</string>
+            <key>CFBundleTypeRole</key>
+            <string>Editor</string>
+        </dict>
+    </array>
+    <key>CFBundleDevelopmentRegion</key>
+    <string>English</string>
+    <key>CFBundleExecutable</key>
+    <string>${MACOSX_BUNDLE_EXECUTABLE_NAME}</string>
+    <key>CFBundleGetInfoString</key>
+    <string>${MACOSX_BUNDLE_INFO_STRING}</string>
+    <key>CFBundleIconFile</key>
+    <string>${MACOSX_BUNDLE_ICON_FILE}</string>
+    <key>CFBundleIdentifier</key>
+    <string>${MACOSX_BUNDLE_GUI_IDENTIFIER}</string>
+    <key>CFBundleInfoDictionaryVersion</key>
+    <string>6.0</string>
+    <key>CFBundleLongVersionString</key>
+    <string>${MACOSX_BUNDLE_LONG_VERSION_STRING}</string>
+    <key>CFBundleName</key>
+    <string>${MACOSX_BUNDLE_BUNDLE_NAME}</string>
+    <key>CFBundleDisplayName</key>
+    <string>${MACOSX_BUNDLE_DISPLAY_NAME}</string>
+    <key>CFBundlePackageType</key>
+    <string>APPL</string>
+    <key>CFBundleShortVersionString</key>
+    <string>${MACOSX_BUNDLE_SHORT_VERSION_STRING}</string>
+    <key>CFBundleSignature</key>
+    <string>????</string>
+    <key>CFBundleVersion</key>
+    <string>${MACOSX_BUNDLE_BUNDLE_VERSION}</string>
+    <key>CSResourcesFileMapped</key>
+    <true/>
+    <key>LSRequiresCarbon</key>
+    <true/>
+    <key>NSHumanReadableCopyright</key>
+    <string>${MACOSX_BUNDLE_COPYRIGHT}</string>
+</dict>
+</plist>
