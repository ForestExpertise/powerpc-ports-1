From 577c1170fbea3e1a5751391a76126f709fa4c935 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Thu, 3 Jul 2025 10:41:56 +0800
Subject: [PATCH 2/3] Try fix OS version

---
 src/apple/os.cpp | 36 +++++++++++++++++++++++++++---------
 1 file changed, 27 insertions(+), 9 deletions(-)

diff --git src/apple/os.cpp src/apple/os.cpp
index f82832f..9e058a9 100644
--- src/apple/os.cpp
+++ src/apple/os.cpp
@@ -5,11 +5,30 @@
 
 #ifdef HWINFO_APPLE
 
+#include <fstream>
+#include <sstream>
+#include <regex>
 #include <string>
 
 #include "hwinfo/os.h"
 #include "hwinfo/utils/sysctl.h"
 
+std::string getOSVersionFromPlist() {
+    std::ifstream file("/System/Library/CoreServices/SystemVersion.plist");
+    if (!file.is_open()) return "";
+
+    std::stringstream buffer;
+    buffer << file.rdbuf();
+    std::string content = buffer.str();
+
+    std::smatch match;
+    std::regex version_regex("<key>ProductVersion</key>\\s*<string>([^<]+)</string>");
+    if (std::regex_search(content, match, version_regex)) {
+        return match[1];
+    }
+    return "";
+}
+
 namespace hwinfo {
 
 // _____________________________________________________________________________________________________________________
@@ -17,17 +36,16 @@ OS::OS() {
   _name = "macOS";
 
   // Get kernel name and version
-  _kernel = utils::getSysctlString("kern.ostype", "<unknown name> ");
-  _kernel.pop_back();
-  _kernel = _kernel + " " + utils::getSysctlString("kern.osrelease", "<unknown version> ");
-  _kernel.pop_back();
+  _kernel = utils::getSysctlString("kern.ostype", "<unknown name>");
+  _kernel += " " + utils::getSysctlString("kern.osrelease", "<unknown version>");
 
   // get OS name and build version
-  _version = utils::getSysctlString("kern.osproductversion", "<unknown> ");
-  _version.pop_back();
-  _version = _version + " (" + utils::getSysctlString("kern.osversion", "<unknown build> ");
-  _version.pop_back();
-  _version = _version + ")";
+  _version = getOSVersionFromPlist();
+  if (_version.empty()) {
+    _version = utils::getSysctlString("kern.osproductversion", "<unknown>");
+  }
+  std::string build = utils::getSysctlString("kern.osversion", "<unknown build>");
+  _version = _version + " (" + build + ")";
 
   // determine endianess
   const int byteorder = utils::getSysctlValue("hw.byteorder", 0);
-- 
2.48.0

