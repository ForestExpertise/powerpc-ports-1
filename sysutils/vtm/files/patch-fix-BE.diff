From d1df0250a6f6307eff4300b4a9c394a10061af58 Mon Sep 17 00:00:00 2001
From: Dmitry Sapozhnikov <11535558+o-sdn-o@users.noreply.github.com>
Date: Fri, 6 Jun 2025 12:23:03 +0500
Subject: [PATCH] #735: Fix build for BE platforms

---
 src/netxs/desktopio/canvas.hpp   |  5 +++++
 src/netxs/desktopio/directvt.hpp | 20 ++++++++++++++++++--
 src/netxs/desktopio/geometry.hpp |  2 +-
 src/netxs/desktopio/intmath.hpp  | 31 +++----------------------------
 4 files changed, 27 insertions(+), 31 deletions(-)

diff --git a/src/netxs/desktopio/canvas.hpp b/src/netxs/desktopio/canvas.hpp
index 7fa6309db4..d2245ec4e7 100644
--- a/src/netxs/desktopio/canvas.hpp
+++ b/src/netxs/desktopio/canvas.hpp
@@ -839,6 +839,11 @@ namespace netxs
             }();
             return lookup(cache, std::span{ argb::vtm16.data(), 8 });
         }
+        // argb: Change endianness to LE.
+        friend auto letoh(argb r)
+        {
+            return argb{ netxs::letoh(r.token) };
+        }
     };
 
     // canvas: Generic RGBA.
diff --git a/src/netxs/desktopio/directvt.hpp b/src/netxs/desktopio/directvt.hpp
index c5bcb4cdb6..2ebbdc22ce 100644
--- a/src/netxs/desktopio/directvt.hpp
+++ b/src/netxs/desktopio/directvt.hpp
@@ -136,7 +136,7 @@ namespace netxs::directvt
                             || std::is_same_v<D, dent>
                             || std::is_same_v<D, rect>)
             {
-                auto le_data = netxs::letoh(data);
+                auto le_data = letoh(data);
                 block += view{ (char*)&le_data, sizeof(le_data) };
             }
             else if constexpr (std::is_same_v<D, argb>)
@@ -291,7 +291,6 @@ namespace netxs::directvt
                 }
                 else if constexpr (std::is_same_v<D, time>)
                 {
-                    using span = decltype(time{}.time_since_epoch());
                     using data_type = decltype(span{}.count());
                     if (data.size() < sizeof(data_type))
                     {
@@ -307,6 +306,23 @@ namespace netxs::directvt
                     }
                     return crop;
                 }
+                else if constexpr (std::is_same_v<D, span>)
+                {
+                    using data_type = decltype(span{}.count());
+                    if (data.size() < sizeof(data_type))
+                    {
+                        log(prompt::dtvt, "Corrupted datetime duration data");
+                        if constexpr (!PeekOnly) data.remove_prefix(data.size());
+                        return D{};
+                    }
+                    auto temp = netxs::aligned<data_type>(data.data());
+                    auto crop = span{ temp };
+                    if constexpr (!PeekOnly)
+                    {
+                        data.remove_prefix(sizeof(data_type));
+                    }
+                    return crop;
+                }
                 else if constexpr (std::is_same_v<D, std::any>)
                 {
                     auto crop = std::any{};
diff --git a/src/netxs/desktopio/geometry.hpp b/src/netxs/desktopio/geometry.hpp
index ecabd4ad6a..27d5ccfa93 100644
--- a/src/netxs/desktopio/geometry.hpp
+++ b/src/netxs/desktopio/geometry.hpp
@@ -365,7 +365,7 @@ namespace netxs
         // rect: Change endianness to LE.
         friend auto letoh(rect r)
         {
-            return rect{ netxs::letoh(r.coor), netxs::letoh(r.size) };
+            return rect{ letoh(r.coor), letoh(r.size) };
         }
     };
 
diff --git a/src/netxs/desktopio/intmath.hpp b/src/netxs/desktopio/intmath.hpp
index d1e6fe78df..ab728e6123 100644
--- a/src/netxs/desktopio/intmath.hpp
+++ b/src/netxs/desktopio/intmath.hpp
@@ -204,34 +204,9 @@ namespace netxs
     template<class T, class = std::enable_if_t<std::is_arithmetic_v<T>>>
     constexpr auto swap_bytes(T i)
     {
-        T r;
-        auto src = (byte*)&i;
-        auto dst = (byte*)&r;
-        if constexpr (sizeof(T) == 2)
-        {
-            dst[0] = src[1];
-            dst[1] = src[0];
-        }
-        else if constexpr (sizeof(T) == 4)
-        {
-            dst[0] = src[3];
-            dst[1] = src[2];
-            dst[2] = src[1];
-            dst[3] = src[0];
-        }
-        else if constexpr (sizeof(T) == 8)
-        {
-            dst[0] = src[7];
-            dst[1] = src[6];
-            dst[2] = src[5];
-            dst[3] = src[4];
-            dst[4] = src[3];
-            dst[5] = src[2];
-            dst[6] = src[1];
-            dst[7] = src[0];
-        }
-        else assert(faux);
-        return r;
+        auto r = std::bit_cast<std::array<byte, sizeof(T)>>(i);
+        std::ranges::reverse(r);
+        return std::bit_cast<T>(r);
     }
     static constexpr auto endian_BE = std::endian::native == std::endian::big;
     static constexpr auto endian_LE = std::endian::native == std::endian::little;

From 21fa40a05fe2f1de2410ce0aeff7df0ebe067cdc Mon Sep 17 00:00:00 2001
From: Dmitry Sapozhnikov <11535558+o-sdn-o@users.noreply.github.com>
Date: Fri, 6 Jun 2025 12:24:04 +0500
Subject: [PATCH] v2025.06.06a

---
 src/netxs/desktopio/application.hpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/netxs/desktopio/application.hpp b/src/netxs/desktopio/application.hpp
index f48652d317..4fb1649386 100644
--- a/src/netxs/desktopio/application.hpp
+++ b/src/netxs/desktopio/application.hpp
@@ -22,7 +22,7 @@ namespace netxs::app
 
 namespace netxs::app::shared
 {
-    static const auto version = "v2025.06.06";
+    static const auto version = "v2025.06.06a";
     static const auto repository = "https://github.com/directvt/vtm";
     static const auto usr_config = "~/.config/vtm/settings.xml"s;
     static const auto sys_config = "/etc/vtm/settings.xml"s;
