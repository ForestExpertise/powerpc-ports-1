From a9d24e366e4975917630a96d2c782be4d1711583 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Thu, 6 Feb 2025 09:48:47 +0800
Subject: [PATCH 03/13] Support PowerPC CPU detection

---
 src/detection/cpu/cpu.c       | 11 +++++++++++
 src/detection/cpu/cpu.h       |  1 +
 src/detection/cpu/cpu_apple.c | 12 +++++++++++-
 3 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/src/detection/cpu/cpu.c b/src/detection/cpu/cpu.c
index 2b9d41dc..42895337 100644
--- a/src/detection/cpu/cpu.c
+++ b/src/detection/cpu/cpu.c
@@ -44,6 +44,17 @@ const char* ffCPUAppleCodeToName(uint32_t code)
     }
 }
 
+const char* ffCPUApplePPCCodeToName(int cpuSubType)
+{
+    switch (cpuSubType)
+    {
+        case 10: return "PowerPC 7400";
+        case 11: return "PowerPC 7450";
+        case 100: return "PowerPC 970";
+        default: return "PowerPC";
+    }
+}
+
 const char* ffCPUQualcommCodeToName(uint32_t code)
 {
     // https://github.com/AsahiLinux/docs/wiki/Codenames
diff --git a/src/detection/cpu/cpu.h b/src/detection/cpu/cpu.h
index 5af7a827..f852f68d 100644
--- a/src/detection/cpu/cpu.h
+++ b/src/detection/cpu/cpu.h
@@ -30,6 +30,7 @@ typedef struct FFCPUResult
 
 const char* ffDetectCPU(const FFCPUOptions* options, FFCPUResult* cpu);
 const char* ffCPUAppleCodeToName(uint32_t code);
+const char* ffCPUApplePPCCodeToName(int cpuSubType);
 const char* ffCPUQualcommCodeToName(uint32_t code);
 
 #if defined(__x86_64__) || defined(__i386__)
diff --git a/src/detection/cpu/cpu_apple.c b/src/detection/cpu/cpu_apple.c
index 8d5cbf0a..6c3e1350 100644
--- a/src/detection/cpu/cpu_apple.c
+++ b/src/detection/cpu/cpu_apple.c
@@ -105,6 +105,16 @@ static const char* detectCoreCount(FFCPUResult* cpu)
 
 const char* ffDetectCPUImpl(const FFCPUOptions* options, FFCPUResult* cpu)
 {
+#ifdef __POWERPC__
+    int cpuSubType;
+    size_t size = sizeof(cpuSubType);
+    if (sysctlbyname("hw.cpusubtype", &cpuSubType, &size, NULL, 0) == 0) {
+        const char *cpuName = ffCPUApplePPCCodeToName(cpuSubType);
+        ffStrbufAppendS(&cpu->name, cpuName);
+    } else {
+        return "sysctlbyname(hw.cpusubtype) failed";
+    }
+#else
     if (ffSysctlGetString("machdep.cpu.brand_string", &cpu->name) != NULL)
         return "sysctlbyname(machdep.cpu.brand_string) failed";
 
@@ -112,7 +122,7 @@ const char* ffDetectCPUImpl(const FFCPUOptions* options, FFCPUResult* cpu)
     cpu->packages = (uint16_t) ffSysctlGetInt("hw.packages", 1);
     if (cpu->vendor.length == 0 && ffStrbufStartsWithS(&cpu->name, "Apple "))
         ffStrbufAppendS(&cpu->vendor, "Apple");
-
+#endif
     cpu->coresPhysical = (uint16_t) ffSysctlGetInt("hw.physicalcpu_max", 1);
     if(cpu->coresPhysical == 1)
         cpu->coresPhysical = (uint16_t) ffSysctlGetInt("hw.physicalcpu", 1);
-- 
2.48.0

