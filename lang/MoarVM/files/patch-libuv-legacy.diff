From 97b062503185cbafaf80cb5ec1da1c1c953411e1 Mon Sep 17 00:00:00 2001
From: barracuda156 <vital.had@gmail.com>
Date: Tue, 8 Aug 2023 19:03:03 +0800
Subject: [PATCH] Fix libuv

---
 src/unix/darwin-proctitle.c |  2 ++
 src/unix/fs.c               |  2 +-
 src/unix/process.c          | 10 +++++++---
 src/unix/tty.c              |  2 +-
 src/unix/udp.c              |  2 ++
 5 files changed, 13 insertions(+), 5 deletions(-)

diff --git src/unix/darwin-proctitle.c src/unix/darwin-proctitle.c
index 5288083e..c1aa0531 100644
--- 3rdparty/libuv/src/unix/darwin-proctitle.c
+++ 3rdparty/libuv/src/unix/darwin-proctitle.c
@@ -41,9 +41,11 @@ static int uv__pthread_setname_np(const char* name) {
   strncpy(namebuf, name, sizeof(namebuf) - 1);
   namebuf[sizeof(namebuf) - 1] = '\0';
 
+#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MIN_REQUIRED >= 1060)
   err = pthread_setname_np(namebuf);
   if (err)
     return UV__ERR(err);
+#endif
 
   return 0;
 }
diff --git src/unix/fs.c src/unix/fs.c
index 6b051c12..18e274cf 100644
--- 3rdparty/libuv/src/unix/fs.c
+++ 3rdparty/libuv/src/unix/fs.c
@@ -1410,7 +1411,7 @@ static void uv__to_stat(struct stat* src, uv_stat_t* dst) {
   dst->st_blksize = src->st_blksize;
   dst->st_blocks = src->st_blocks;
 
-#if defined(__APPLE__)
+#if defined(__APPLE__) && (MAC_OS_X_VERSION_MAX_ALLOWED >= 1050)
   dst->st_atim.tv_sec = src->st_atimespec.tv_sec;
   dst->st_atim.tv_nsec = src->st_atimespec.tv_nsec;
   dst->st_mtim.tv_sec = src->st_mtimespec.tv_sec;
diff --git src/unix/process.c src/unix/process.c
index dd58c18d..35aa9b1b 100644
--- 3rdparty/libuv/src/unix/process.c
+++ 3rdparty/libuv/src/unix/process.c
@@ -36,7 +36,9 @@
 #include <poll.h>
 
 #if defined(__APPLE__)
-# include <spawn.h>
+# if MAC_OS_X_VERSION_MAX_ALLOWED >= 1050
+#  include <spawn.h>
+# endif
 # include <paths.h>
 # include <sys/kauth.h>
 # include <sys/types.h>
@@ -407,7 +409,7 @@ static void uv__process_child_init(const uv_process_options_t* options,
 }
 
 
-#if defined(__APPLE__)
+#if defined(__APPLE__) && (MAC_OS_X_VERSION_MIN_REQUIRED >= 1050)
 typedef struct uv__posix_spawn_fncs_tag {
   struct {
     int (*addchdir_np)(const posix_spawn_file_actions_t *, const char *);
@@ -608,9 +610,11 @@ static int uv__spawn_set_posix_spawn_file_actions(
       }
     }
 
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
     if (fd == use_fd)
         err = posix_spawn_file_actions_addinherit_np(actions, fd);
     else
+#endif
         err = posix_spawn_file_actions_adddup2(actions, use_fd, fd);
     assert(err != ENOSYS);
     if (err != 0)
@@ -859,7 +863,7 @@ static int uv__spawn_and_init_child(
   int exec_errorno;
   ssize_t r;
 
-#if defined(__APPLE__)
+#if defined(__APPLE__) && (MAC_OS_X_VERSION_MIN_REQUIRED >= 1050)
   uv_once(&posix_spawn_init_once, uv__spawn_init_posix_spawn);
 
   /* Special child process spawn case for macOS Big Sur (11.0) onwards
diff --git src/unix/tty.c src/unix/tty.c
index d099bdb3..899e3a66 100644
--- 3rdparty/libuv/src/unix/tty.c
+++ 3rdparty/libuv/src/unix/tty.c
@@ -85,7 +85,7 @@ static int uv__tty_is_slave(const int fd) {
   int dummy;
 
   result = ioctl(fd, TIOCGPTN, &dummy) != 0;
-#elif defined(__APPLE__)
+#elif defined(__APPLE__) && (MAC_OS_X_VERSION_MAX_ALLOWED >= 1050)
   char dummy[256];
 
   result = ioctl(fd, TIOCPTYGNAME, &dummy) != 0;
diff --git src/unix/udp.c src/unix/udp.c
index c2814512..cba9e821 100644
--- 3rdparty/libuv/src/unix/udp.c
+++ 3rdparty/libuv/src/unix/udp.c
@@ -892,6 +892,7 @@ static int uv__udp_set_membership6(uv_udp_t* handle,
     !defined(__ANDROID__) &&                                        \
     !defined(__DragonFly__) &&                                      \
     !defined(__QNX__) &&                                            \
+    (!defined(__APPLE__) || (MAC_OS_X_VERSION_MAX_ALLOWED >= 1070)) && \
     !defined(__GNU__)
 static int uv__udp_set_source_membership4(uv_udp_t* handle,
                                           const struct sockaddr_in* multicast_addr,
@@ -1083,6 +1084,7 @@ int uv_udp_set_source_membership(uv_udp_t* handle,
     !defined(__ANDROID__) &&                                        \
     !defined(__DragonFly__) &&                                      \
     !defined(__QNX__) &&                                            \
+    (!defined(__APPLE__) || (MAC_OS_X_VERSION_MAX_ALLOWED >= 1070)) && \
     !defined(__GNU__)
   int err;
   union uv__sockaddr mcast_addr;

Fix breakage caused by https://github.com/libuv/libuv/commit/1c778bd001543371c915a79b7ac3c5864fe59e74

--- 3rdparty/libuv/src/unix/internal.h	2024-12-15 01:06:02.000000000 +0800
+++ 3rdparty/libuv/src/unix/internal.h	2025-01-03 15:00:56.000000000 +0800
@@ -71,11 +71,8 @@
 # include <poll.h>
 #endif /* _AIX */
 
-#if defined(__APPLE__)
-# include "darwin-syscalls.h"
-# if !TARGET_OS_IPHONE
-#  include <AvailabilityMacros.h>
-# endif
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
+# include <AvailabilityMacros.h>
 #endif
 
 /*

--- 3rdparty/libuv/src/unix/udp.c	2024-12-15 01:06:02.000000000 +0800
+++ 3rdparty/libuv/src/unix/udp.c	2025-01-03 15:10:24.000000000 +0800
@@ -148,7 +148,7 @@
 }
 
 static int uv__udp_recvmmsg(uv_udp_t* handle, uv_buf_t* buf) {
-#if defined(__linux__) || defined(__FreeBSD__) || defined(__APPLE__)
+#if defined(__linux__) || defined(__FreeBSD__)
   struct sockaddr_in6 peers[20];
   struct iovec iov[ARRAY_SIZE(peers)];
   struct mmsghdr msgs[ARRAY_SIZE(peers)];
@@ -176,15 +176,9 @@
     msgs[k].msg_len = 0;
   }
 
-#if defined(__APPLE__)
-  do
-    nread = recvmsg_x(handle->io_watcher.fd, msgs, chunks, MSG_DONTWAIT);
-  while (nread == -1 && errno == EINTR);
-#else
   do
     nread = recvmmsg(handle->io_watcher.fd, msgs, chunks, 0, NULL);
   while (nread == -1 && errno == EINTR);
-#endif
 
   if (nread < 1) {
     if (nread == 0 || errno == EAGAIN || errno == EWOULDBLOCK)
@@ -211,9 +205,9 @@
       handle->recv_cb(handle, 0, buf, NULL, UV_UDP_MMSG_FREE);
   }
   return nread;
-#else  /* __linux__ || ____FreeBSD__ || __APPLE__ */
+#else  /* __linux__ || ____FreeBSD__ */
   return UV_ENOSYS;
-#endif  /* __linux__ || ____FreeBSD__ || __APPLE__ */
+#endif  /* __linux__ || ____FreeBSD__ */
 }
 
 static void uv__udp_recvmsg(uv_udp_t* handle) {
@@ -335,7 +329,7 @@
   }
 }
 
-#if defined(__linux__) || defined(__FreeBSD__) || defined(__APPLE__)
+#if defined(__linux__) || defined(__FreeBSD__)
 static void uv__udp_sendmsg_many(uv_udp_t* handle) {
   uv_udp_send_t* req;
   struct mmsghdr h[20];
@@ -373,15 +367,9 @@
     h[pkts].msg_hdr.msg_iovlen = req->nbufs;
   }
 
-#if defined(__APPLE__)
-  do
-    npkts = sendmsg_x(handle->io_watcher.fd, h, pkts, MSG_DONTWAIT);
-  while (npkts == -1 && errno == EINTR);
-#else
   do
     npkts = sendmmsg(handle->io_watcher.fd, h, pkts, 0);
   while (npkts == -1 && errno == EINTR);
-#endif
 
   if (npkts < 1) {
     if (errno == EAGAIN || errno == EWOULDBLOCK || errno == ENOBUFS)
@@ -422,7 +410,7 @@
 
   uv__io_feed(handle->loop, &handle->io_watcher);
 }
-#endif  /* __linux__ || ____FreeBSD__ || __APPLE__ */
+#endif  /* __linux__ || ____FreeBSD__ */
 
 static void uv__udp_sendmsg(uv_udp_t* handle) {
   struct uv__queue* q;
@@ -434,7 +422,7 @@
   q = uv__queue_head(&handle->write_queue);
   req = uv__queue_data(q, uv_udp_send_t, queue);
 
-#if defined(__linux__) || defined(__FreeBSD__) || defined(__APPLE__)
+#if defined(__linux__) || defined(__FreeBSD__)
   /* Use sendmmsg() if this send request contains more than one datagram OR
    * there is more than one send request (because that automatically implies
    * there is more than one datagram.)
@@ -1051,7 +1039,7 @@
 
 
 int uv_udp_using_recvmmsg(const uv_udp_t* handle) {
-#if defined(__linux__) || defined(__FreeBSD__) || defined(__APPLE__)
+#if defined(__linux__) || defined(__FreeBSD__)
   if (handle->flags & UV_HANDLE_UDP_RECVMMSG)
     return 1;
 #endif
