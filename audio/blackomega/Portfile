# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           conflicts_build 1.0
PortGroup           github 1.0
PortGroup           qt4 1.0

github.setup        bonezuk blackomega 2.5.0 v
revision            1

categories          audio
license             BSD
maintainers         {@barracuda156 macos-powerpc.org:barracuda}

description         Black Omega, audiophile music player
long_description    {*}${description}

github.tarball_from archive

# The patch is 22 MB otherwise. Just use my fork until it is merged:
# https://github.com/bonezuk/blackomega/pull/10
set omega_qt4_hash  81b7d4901176ea9238bdbfdf0feb677adc0e244a
distname            ${name}-${omega_qt4_hash}
master_sites        https://github.com/barracuda156/blackomega/archive/${omega_qt4_hash}/
checksums           ${distname}${extract.suffix} \
                    rmd160  83a39f2bd20c34c3f235878426134991b5dcf952 \
                    sha256  1f6277581786f9f41fdd31d27d2272127ba60c69d44fe2ca9fc28c30f07a5c9f \
                    size    32745025

cmake.out_of_source no

post-patch {
    reinplace "s|Qt6|Qt4|" ${worksrcpath}/CMakeLists.txt

    # https://github.com/bonezuk/blackomega/issues/9
    if {${os.platform} eq "darwin" && ${os.major} < 11} {
        reinplace "s|CMAKE_CXX_STANDARD 11|CMAKE_CXX_STANDARD 98|" ${worksrcpath}/CMakeLists.txt
    } else {
        reinplace "s|CMAKE_CXX_STANDARD 11|CMAKE_CXX_STANDARD 14|" ${worksrcpath}/CMakeLists.txt
    }
}

depends_build-append \
                    port:gtest

depends_lib-append  port:libxml2 \
                    port:QJson4 \
                    port:wavpack

# TODO: see how to build with new musepack API.
# depends_lib-append  port:musepack
conflicts_build     musepack

# Most certainly TIGER_MAC_STORE is not what we need,
# however it may be worth reviewing if some code inside
# this macro is actually useful.
configure.args-append \
                    -DBLACKOMEGA_PREFIX=${prefix} \
                    -DOMEGA_QT4=ON \
                    -DQT_HOME=${qt_dir} \
                    -DTIGER_MAC_STORE=OFF \
                    -DTIGER_SYSTEM_DEPS=ON

if {${os.platform} eq "darwin" && ${os.major} < 11} {
    # Make it compatible with Xcode gcc:
    compiler.cxx_standard       1998
    configure.cxxflags-append   -std=gnu++98
} else {
    compiler.cxx_standard       2014
    # Due to gtest:
    configure.cxxflags-append   -std=gnu++14
}

# This was my initial approach, however the GUI app crashes, if built this way,
# mixing gcc14 with gcc-4.2. See discussion in: https://github.com/bonezuk/blackomega/issues/6
#
# if {${os.platform} eq "darwin" && ${os.major} < 11 && ${configure.cxx_stdlib} ne "libc++"} {
#     # Modern gcc chokes on several ObjC++ sources here.
#     pre-configure {
#         configure.pre_args-append \
#                     -DCMAKE_OBJCXX_COMPILER=/usr/bin/g++-4.2
#     }
#     # Otherwise linking fails when Xcode gcc is used.
#     configure.ldflags-append \
#                     -L${prefix}/lib/libgcc -lstdc++
#     # The closest to C++11 for Xcode gcc?
#     configure.objcxxflags \
#                     -std=gnu++98
# }

# This was an attempt to fix Qt bug with keywords conflicts,
# but apparently it has no effect on the outcome.
configure.cppflags-append \
                    -DQT_NO_KEYWORDS
